/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/FGUI/GameCommon/GameCommonBinder.ts":
/*!*************************************************!*\
  !*** ./src/FGUI/GameCommon/GameCommonBinder.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class GameCommonBinder {
    static bindAll() {
    }
}
exports.default = GameCommonBinder;


/***/ }),

/***/ "./src/FGUI/GameMain/FGUI_PGameCom.ts":
/*!********************************************!*\
  !*** ./src/FGUI/GameMain/FGUI_PGameCom.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class FGUI_PGameCom extends fairygui.GComponent {
    constructor() {
        super();
    }
    static createInstance() {
        return (fairygui.UIPackage.createObject("GameMain", "PGameCom"));
    }
    onConstruct() {
        this.m_text = (this.getChildAt(0));
    }
}
exports.default = FGUI_PGameCom;
FGUI_PGameCom.URL = "ui://kk7g5mmmq3ng9w";


/***/ }),

/***/ "./src/FGUI/GameMain/FGUI_PGameCustomsLoading.ts":
/*!*******************************************************!*\
  !*** ./src/FGUI/GameMain/FGUI_PGameCustomsLoading.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class FGUI_PGameCustomsLoading extends fairygui.GComponent {
    constructor() {
        super();
    }
    static createInstance() {
        return (fairygui.UIPackage.createObject("GameMain", "PGameCustomsLoading"));
    }
    onConstruct() {
        this.m_shade = (this.getChildAt(0));
        this.m_text = (this.getChildAt(1));
        this.m_progress = (this.getChildAt(2));
    }
}
exports.default = FGUI_PGameCustomsLoading;
FGUI_PGameCustomsLoading.URL = "ui://kk7g5mmmdbmi13";


/***/ }),

/***/ "./src/FGUI/GameMain/FGUI_PGameEnd.ts":
/*!********************************************!*\
  !*** ./src/FGUI/GameMain/FGUI_PGameEnd.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class FGUI_PGameEnd extends fairygui.GComponent {
    constructor() {
        super();
    }
    static createInstance() {
        return (fairygui.UIPackage.createObject("GameMain", "PGameEnd"));
    }
    onConstruct() {
        this.m_text = (this.getChildAt(0));
    }
}
exports.default = FGUI_PGameEnd;
FGUI_PGameEnd.URL = "ui://kk7g5mmmlaxd19";


/***/ }),

/***/ "./src/FGUI/GameMain/FGUI_PGameLoading.ts":
/*!************************************************!*\
  !*** ./src/FGUI/GameMain/FGUI_PGameLoading.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class FGUI_PGameLoading extends fairygui.GComponent {
    constructor() {
        super();
    }
    static createInstance() {
        return (fairygui.UIPackage.createObject("GameMain", "PGameLoading"));
    }
    onConstruct() {
        this.m_shade = (this.getChildAt(0));
        this.m_text = (this.getChildAt(1));
        this.m_progress = (this.getChildAt(2));
    }
}
exports.default = FGUI_PGameLoading;
FGUI_PGameLoading.URL = "ui://kk7g5mmmg7a1o";


/***/ }),

/***/ "./src/FGUI/GameMain/FGUI_PGameMain.ts":
/*!*********************************************!*\
  !*** ./src/FGUI/GameMain/FGUI_PGameMain.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class FGUI_PGameMain extends fairygui.GComponent {
    constructor() {
        super();
    }
    static createInstance() {
        return (fairygui.UIPackage.createObject("GameMain", "PGameMain"));
    }
    onConstruct() {
        this.m_text = (this.getChildAt(0));
    }
}
exports.default = FGUI_PGameMain;
FGUI_PGameMain.URL = "ui://kk7g5mmmsyta9f";


/***/ }),

/***/ "./src/FGUI/GameMain/FGUI_PGamePause.ts":
/*!**********************************************!*\
  !*** ./src/FGUI/GameMain/FGUI_PGamePause.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class FGUI_PGamePause extends fairygui.GComponent {
    constructor() {
        super();
    }
    static createInstance() {
        return (fairygui.UIPackage.createObject("GameMain", "PGamePause"));
    }
    onConstruct() {
        this.m_text = (this.getChildAt(0));
    }
}
exports.default = FGUI_PGamePause;
FGUI_PGamePause.URL = "ui://kk7g5mmm6vcq5g";


/***/ }),

/***/ "./src/FGUI/GameMain/FGUI_PGamePlay.ts":
/*!*********************************************!*\
  !*** ./src/FGUI/GameMain/FGUI_PGamePlay.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class FGUI_PGamePlay extends fairygui.GComponent {
    constructor() {
        super();
    }
    static createInstance() {
        return (fairygui.UIPackage.createObject("GameMain", "PGamePlay"));
    }
    onConstruct() {
        this.m_text = (this.getChildAt(0));
    }
}
exports.default = FGUI_PGamePlay;
FGUI_PGamePlay.URL = "ui://kk7g5mmmg7a1r";


/***/ }),

/***/ "./src/FGUI/GameMain/FGUI_PGameSet.ts":
/*!********************************************!*\
  !*** ./src/FGUI/GameMain/FGUI_PGameSet.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class FGUI_PGameSet extends fairygui.GComponent {
    constructor() {
        super();
    }
    static createInstance() {
        return (fairygui.UIPackage.createObject("GameMain", "PGameSet"));
    }
    onConstruct() {
        this.m_text = (this.getChildAt(0));
    }
}
exports.default = FGUI_PGameSet;
FGUI_PGameSet.URL = "ui://kk7g5mmm6vcq4u";


/***/ }),

/***/ "./src/FGUI/GameMain/FGUI_PGameStart.ts":
/*!**********************************************!*\
  !*** ./src/FGUI/GameMain/FGUI_PGameStart.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class FGUI_PGameStart extends fairygui.GComponent {
    constructor() {
        super();
    }
    static createInstance() {
        return (fairygui.UIPackage.createObject("GameMain", "PGameStart"));
    }
    onConstruct() {
        this.m_text = (this.getChildAt(0));
    }
}
exports.default = FGUI_PGameStart;
FGUI_PGameStart.URL = "ui://kk7g5mmmg7a1v";


/***/ }),

/***/ "./src/FGUI/GameMain/FGUI_PGameTestMain.ts":
/*!*************************************************!*\
  !*** ./src/FGUI/GameMain/FGUI_PGameTestMain.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class FGUI_PGameTestMain extends fairygui.GComponent {
    constructor() {
        super();
    }
    static createInstance() {
        return (fairygui.UIPackage.createObject("GameMain", "PGameTestMain"));
    }
    onConstruct() {
        this.m_UIButton = (this.getChildAt(0));
        this.m_UI = (this.getChildAt(1));
        this.m_test = (this.getChildAt(3));
        this.m_testText = (this.getChildAt(4));
        this.m__test = (this.getChildAt(6));
    }
}
exports.default = FGUI_PGameTestMain;
FGUI_PGameTestMain.URL = "ui://kk7g5mmmo9js9x";


/***/ }),

/***/ "./src/FGUI/GameMain/FGUI_PGameTestPlatform.ts":
/*!*****************************************************!*\
  !*** ./src/FGUI/GameMain/FGUI_PGameTestPlatform.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class FGUI_PGameTestPlatform extends fairygui.GComponent {
    constructor() {
        super();
    }
    static createInstance() {
        return (fairygui.UIPackage.createObject("GameMain", "PGameTestPlatform"));
    }
    onConstruct() {
        this.m_bg = (this.getChildAt(0));
        this.m_lookVAd = (this.getChildAt(1));
        this.m_lookVAdText = (this.getChildAt(2));
        this.m__lookVAd = (this.getChildAt(3));
        this.m_share = (this.getChildAt(4));
        this.m_shareText = (this.getChildAt(5));
        this.m__share = (this.getChildAt(6));
        this.m_showToast = (this.getChildAt(7));
        this.m_showToastText = (this.getChildAt(8));
        this.m__showToast = (this.getChildAt(9));
    }
}
exports.default = FGUI_PGameTestPlatform;
FGUI_PGameTestPlatform.URL = "ui://kk7g5mmmt1pw9y";


/***/ }),

/***/ "./src/FGUI/GameMain/FGUI_PGameTestUI.ts":
/*!***********************************************!*\
  !*** ./src/FGUI/GameMain/FGUI_PGameTestUI.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class FGUI_PGameTestUI extends fairygui.GComponent {
    constructor() {
        super();
    }
    static createInstance() {
        return (fairygui.UIPackage.createObject("GameMain", "PGameTestUI"));
    }
    onConstruct() {
        this.m_bg = (this.getChildAt(0));
    }
}
exports.default = FGUI_PGameTestUI;
FGUI_PGameTestUI.URL = "ui://kk7g5mmmh66e9z";


/***/ }),

/***/ "./src/FGUI/GameMain/GameMainBinder.ts":
/*!*********************************************!*\
  !*** ./src/FGUI/GameMain/GameMainBinder.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
const FGUI_PGameSet_1 = __webpack_require__(/*! ./FGUI_PGameSet */ "./src/FGUI/GameMain/FGUI_PGameSet.ts");
const FGUI_PGamePause_1 = __webpack_require__(/*! ./FGUI_PGamePause */ "./src/FGUI/GameMain/FGUI_PGamePause.ts");
const FGUI_PGameCustomsLoading_1 = __webpack_require__(/*! ./FGUI_PGameCustomsLoading */ "./src/FGUI/GameMain/FGUI_PGameCustomsLoading.ts");
const FGUI_PGameLoading_1 = __webpack_require__(/*! ./FGUI_PGameLoading */ "./src/FGUI/GameMain/FGUI_PGameLoading.ts");
const FGUI_PGamePlay_1 = __webpack_require__(/*! ./FGUI_PGamePlay */ "./src/FGUI/GameMain/FGUI_PGamePlay.ts");
const FGUI_PGameStart_1 = __webpack_require__(/*! ./FGUI_PGameStart */ "./src/FGUI/GameMain/FGUI_PGameStart.ts");
const FGUI_PGameTestUI_1 = __webpack_require__(/*! ./FGUI_PGameTestUI */ "./src/FGUI/GameMain/FGUI_PGameTestUI.ts");
const FGUI_PGameEnd_1 = __webpack_require__(/*! ./FGUI_PGameEnd */ "./src/FGUI/GameMain/FGUI_PGameEnd.ts");
const FGUI_PGameTestMain_1 = __webpack_require__(/*! ./FGUI_PGameTestMain */ "./src/FGUI/GameMain/FGUI_PGameTestMain.ts");
const FGUI_PGameCom_1 = __webpack_require__(/*! ./FGUI_PGameCom */ "./src/FGUI/GameMain/FGUI_PGameCom.ts");
const FGUI_PGameMain_1 = __webpack_require__(/*! ./FGUI_PGameMain */ "./src/FGUI/GameMain/FGUI_PGameMain.ts");
const FGUI_PGameTestPlatform_1 = __webpack_require__(/*! ./FGUI_PGameTestPlatform */ "./src/FGUI/GameMain/FGUI_PGameTestPlatform.ts");
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class GameMainBinder {
    static bindAll() {
        fairygui.UIObjectFactory.setPackageItemExtension(FGUI_PGameSet_1.default.URL, FGUI_PGameSet_1.default);
        fairygui.UIObjectFactory.setPackageItemExtension(FGUI_PGamePause_1.default.URL, FGUI_PGamePause_1.default);
        fairygui.UIObjectFactory.setPackageItemExtension(FGUI_PGameCustomsLoading_1.default.URL, FGUI_PGameCustomsLoading_1.default);
        fairygui.UIObjectFactory.setPackageItemExtension(FGUI_PGameLoading_1.default.URL, FGUI_PGameLoading_1.default);
        fairygui.UIObjectFactory.setPackageItemExtension(FGUI_PGamePlay_1.default.URL, FGUI_PGamePlay_1.default);
        fairygui.UIObjectFactory.setPackageItemExtension(FGUI_PGameStart_1.default.URL, FGUI_PGameStart_1.default);
        fairygui.UIObjectFactory.setPackageItemExtension(FGUI_PGameTestUI_1.default.URL, FGUI_PGameTestUI_1.default);
        fairygui.UIObjectFactory.setPackageItemExtension(FGUI_PGameEnd_1.default.URL, FGUI_PGameEnd_1.default);
        fairygui.UIObjectFactory.setPackageItemExtension(FGUI_PGameTestMain_1.default.URL, FGUI_PGameTestMain_1.default);
        fairygui.UIObjectFactory.setPackageItemExtension(FGUI_PGameCom_1.default.URL, FGUI_PGameCom_1.default);
        fairygui.UIObjectFactory.setPackageItemExtension(FGUI_PGameMain_1.default.URL, FGUI_PGameMain_1.default);
        fairygui.UIObjectFactory.setPackageItemExtension(FGUI_PGameTestPlatform_1.default.URL, FGUI_PGameTestPlatform_1.default);
    }
}
exports.default = GameMainBinder;


/***/ }),

/***/ "./src/FGUI/InitEmptyScreen/FGUI_EmptyScreen.ts":
/*!******************************************************!*\
  !*** ./src/FGUI/InitEmptyScreen/FGUI_EmptyScreen.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class FGUI_EmptyScreen extends fairygui.GComponent {
    constructor() {
        super();
    }
    static createInstance() {
        return (fairygui.UIPackage.createObject("InitEmptyScreen", "EmptyScreen"));
    }
    onConstruct() {
        this.m_bg = (this.getChildAt(0));
    }
}
exports.default = FGUI_EmptyScreen;
FGUI_EmptyScreen.URL = "ui://7ktzib8oq3ng0";


/***/ }),

/***/ "./src/FGUI/InitEmptyScreen/InitEmptyScreenBinder.ts":
/*!***********************************************************!*\
  !*** ./src/FGUI/InitEmptyScreen/InitEmptyScreenBinder.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
const FGUI_EmptyScreen_1 = __webpack_require__(/*! ./FGUI_EmptyScreen */ "./src/FGUI/InitEmptyScreen/FGUI_EmptyScreen.ts");
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class InitEmptyScreenBinder {
    static bindAll() {
        fairygui.UIObjectFactory.setPackageItemExtension(FGUI_EmptyScreen_1.default.URL, FGUI_EmptyScreen_1.default);
    }
}
exports.default = InitEmptyScreenBinder;


/***/ }),

/***/ "./src/FGUI/InitLoad/FGUI_splash.ts":
/*!******************************************!*\
  !*** ./src/FGUI/InitLoad/FGUI_splash.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class FGUI_splash extends fairygui.GComponent {
    constructor() {
        super();
    }
    static createInstance() {
        return (fairygui.UIPackage.createObject("InitLoad", "splash"));
    }
    onConstruct() {
        this.m_bg = (this.getChildAt(0));
        this.m_progress = (this.getChildAt(1));
        this.m_loading_progress = (this.getChildAt(2));
        this.m_text_logo = (this.getChildAt(3));
        this.m_text_progress = (this.getChildAt(4));
        this.m_text_laya = (this.getChildAt(5));
        this.m_text_explain = (this.getChildAt(6));
        this.m_text_v = (this.getChildAt(7));
        this.m_text_laya_v = (this.getChildAt(8));
        this.m_text_game_explain = (this.getChildAt(9));
    }
}
exports.default = FGUI_splash;
FGUI_splash.URL = "ui://n3oedpp6nihr0";


/***/ }),

/***/ "./src/FGUI/InitLoad/InitLoadBinder.ts":
/*!*********************************************!*\
  !*** ./src/FGUI/InitLoad/InitLoadBinder.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/** This is an automatically generated class by FairyGUI. Please do not modify it. **/
Object.defineProperty(exports, "__esModule", ({ value: true }));
// 导入文件
const FGUI_splash_1 = __webpack_require__(/*! ./FGUI_splash */ "./src/FGUI/InitLoad/FGUI_splash.ts");
//! 这是由FGUI自动生成的文件，请不要修改 ~~~ **/
class InitLoadBinder {
    static bindAll() {
        fairygui.UIObjectFactory.setPackageItemExtension(FGUI_splash_1.default.URL, FGUI_splash_1.default);
    }
}
exports.default = InitLoadBinder;


/***/ }),

/***/ "./src/GameConfig.ts":
/*!***************************!*\
  !*** ./src/GameConfig.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, exports) => {


/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
Object.defineProperty(exports, "__esModule", ({ value: true }));
/*
* 游戏初始化配置;
*/
class GameConfig {
    constructor() { }
    static init() {
        var reg = Laya.ClassUtils.regClass;
    }
}
exports.default = GameConfig;
GameConfig.width = 750;
GameConfig.height = 1334;
GameConfig.scaleMode = "fixedwidth";
GameConfig.screenMode = "none";
GameConfig.alignV = "top";
GameConfig.alignH = "left";
GameConfig.startScene = "";
GameConfig.sceneRoot = "";
GameConfig.debug = false;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;
GameConfig.init();


/***/ }),

/***/ "./src/LayaMiniGameConfig.ts":
/*!***********************************!*\
  !*** ./src/LayaMiniGameConfig.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 框架配置文件
 */
class LayaMiniGameConfig {
    constructor() {
        /** 名字 */
        this.name = "LayaMiniGame";
        /** 中文名字 */
        this.ZHName = "LayaBox小游戏";
        /** 版本 */
        this.versions = "1.2.6";
    }
}
exports.default = LayaMiniGameConfig;


/***/ }),

/***/ "./src/Main.ts":
/*!*********************!*\
  !*** ./src/Main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const GameConfig_1 = __webpack_require__(/*! ./GameConfig */ "./src/GameConfig.ts");
const MainStart_1 = __webpack_require__(/*! ./dMyGame/MainStart */ "./src/dMyGame/MainStart.ts");
const LayaMiniGameConfig_1 = __webpack_require__(/*! ./LayaMiniGameConfig */ "./src/LayaMiniGameConfig.ts");
class Main {
    constructor() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        Laya.stage.alignV = GameConfig_1.default.alignV;
        Laya.stage.alignH = GameConfig_1.default.alignH;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError(true);
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    onVersionLoaded() {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    }
    onConfigLoaded() {
        //加载IDE指定的场景
        // GameConfig.startScene && Laya.Scene.open(GameConfig.startScene);
        //进入游戏
        new MainStart_1.default();
    }
}
//注入框架信息
let _LayaMiniGameConfig = new LayaMiniGameConfig_1.default();
window['$' + _LayaMiniGameConfig.name] = _LayaMiniGameConfig;
//激活启动类
new Main();


/***/ }),

/***/ "./src/aTGame/3D/Global3D.ts":
/*!***********************************!*\
  !*** ./src/aTGame/3D/Global3D.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const OimoSystem_1 = __webpack_require__(/*! ../Physics/oimo/OimoSystem */ "./src/aTGame/Physics/oimo/OimoSystem.ts");
const GlobalUnitClassProxy_1 = __webpack_require__(/*! ./GlobalUnitClassProxy */ "./src/aTGame/3D/GlobalUnitClassProxy.ts");
const SceneManagerProxy_1 = __webpack_require__(/*! ./SceneManagerProxy */ "./src/aTGame/3D/SceneManagerProxy.ts");
const MainGameConfig_1 = __webpack_require__(/*! ../../bTGameConfig/MainGameConfig */ "./src/bTGameConfig/MainGameConfig.ts");
const ConsoleEx_1 = __webpack_require__(/*! ../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const EnvironmentDebug_1 = __webpack_require__(/*! ../Debug/EnvironmentDebug */ "./src/aTGame/Debug/EnvironmentDebug.ts");
/**
 * 全局3D类
 */
class Global3D {
    /**
     * 场景初始化
     */
    static InitAll() {
        //判断是否支持3D
        if (MainGameConfig_1.default.support3D) {
            this.s3d = Laya.stage.addChildAt(new Laya.Scene3D(), 0);
            this.camera = new Laya.Camera();
            this.s3d.addChild(this.camera);
            SceneManagerProxy_1.default.initCamera(this.camera);
            this.light = new Laya.DirectionLight;
            this.s3d.addChild(this.light);
            SceneManagerProxy_1.default.initLight(this.light);
            //
            //查看是否添加oimo物理
            if (MainGameConfig_1.default.ifAddOimoSystem) {
                this.addOimoSystem();
            }
            //设置代理类代理数据
            GlobalUnitClassProxy_1.default.s3d = this.s3d;
            GlobalUnitClassProxy_1.default.camera = this.camera;
            GlobalUnitClassProxy_1.default.light = this.light;
            //添加环境调试
            EnvironmentDebug_1.default.instance.s3d = this.s3d;
            EnvironmentDebug_1.default.instance.camera = this.camera;
            EnvironmentDebug_1.default.instance.light = this.light;
        }
        else {
            //
            console.log(...ConsoleEx_1.default.packLog('请设置支持3D!'));
        }
    }
    //添加oimo物理
    static addOimoSystem() {
        //使用新物理系统
        let oimoNode = new Laya.Sprite3D();
        this.s3d.addChild(oimoNode);
        oimoNode.addComponent(OimoSystem_1.OimoSystem);
    }
}
exports.default = Global3D;


/***/ }),

/***/ "./src/aTGame/3D/GlobalUnitClassProxy.ts":
/*!***********************************************!*\
  !*** ./src/aTGame/3D/GlobalUnitClassProxy.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootClassProxy_1 = __webpack_require__(/*! ../Root/RootClassProxy */ "./src/aTGame/Root/RootClassProxy.ts");
/**
 * 全局内容类代理
 */
class GlobalUnitClassProxy extends RootClassProxy_1.default {
}
exports.default = GlobalUnitClassProxy;


/***/ }),

/***/ "./src/aTGame/3D/Scene.ts":
/*!********************************!*\
  !*** ./src/aTGame/3D/Scene.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ResLoad_1 = __webpack_require__(/*! ../Res/ResLoad */ "./src/aTGame/Res/ResLoad.ts");
const SceneUtils_1 = __webpack_require__(/*! ./SceneUtils */ "./src/aTGame/3D/SceneUtils.ts");
const GlobalUnitClassProxy_1 = __webpack_require__(/*! ./GlobalUnitClassProxy */ "./src/aTGame/3D/GlobalUnitClassProxy.ts");
const EssentialResUrls_1 = __webpack_require__(/*! ../Res/EssentialResUrls */ "./src/aTGame/Res/EssentialResUrls.ts");
const ConsoleEx_1 = __webpack_require__(/*! ../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const ArrayUtils_1 = __webpack_require__(/*! ../Utils/ArrayUtils */ "./src/aTGame/Utils/ArrayUtils.ts");
/**
 * 场景类
 */
class Scene {
    /**
     * 初始化
     * @param sceneNode 关卡构建节点
     * @param sceneNode_ 关卡其他资源加载节点
     */
    constructor(sceneNode, sceneNode_, _lvConfig) {
        //预制体资源列表
        this._prefabRes = [];
        //附属资源列表
        this.m_affiliateResURLs = [];
        /** 根据预制体分类的物品列表 */
        this.prefabs = {};
        /** 所有的物品 */
        this.sprite3Ds = [];
        this.sceneNode = sceneNode;
        this.sceneNode_ = sceneNode_;
        this._lvConfig = _lvConfig;
    }
    /** 获取是否清除 */
    get ifDestroy() {
        return !Boolean(this._scene);
    }
    /** 获取场景 */
    get scene() {
        return this._scene;
    }
    /** 设置附属资源列表 */
    set affiliateResURLs(_URLs) {
        this.m_affiliateResURLs = _URLs;
    }
    /** 获取附属资源列表 */
    get affiliateResURLs() {
        return this.m_affiliateResURLs;
    }
    /** 获取所有的资源路径列表 */
    get allResURLs() {
        let _URLs = this.scenePrefabUrl();
        _URLs.push(...this.m_affiliateResURLs);
        return _URLs;
    }
    /**
     * 添加附属资源
     * @param _URLs 资源列表
     */
    addAffiliateResURLs(_URLs) {
        if (_URLs.length <= 0) {
            return;
        }
        this.m_affiliateResURLs.push(..._URLs);
        //去重
        this.m_affiliateResURLs = ArrayUtils_1.default.Unique(this.m_affiliateResURLs);
    }
    /**
     * 异步加载资源
     * @param onProgress 加载进度回调
     */
    loadRes(onProgress = null) {
        return ResLoad_1.default.LoadAsync(this.allResURLs, onProgress);
    }
    /**
     * 异步构建场景
     * @param onProgress 构建进度
     */
    buildScene(onProgress = null) {
        return new Promise((r) => {
            if (this._scene) {
                console.warn(...ConsoleEx_1.default.packWarn('重复构建关卡，请注意'));
                r(this._scene);
                return;
            }
            console.log(...ConsoleEx_1.default.packLog('开始构建关卡->' + this._lvConfig.key));
            //同步加载资源
            this.loadRes(onProgress).then(() => {
                //
                this._scene = new Laya.Sprite3D();
                GlobalUnitClassProxy_1.default.s3d.addChild(this._scene);
                //构建场景
                for (let _i in this.sceneNode) {
                    let _spr = new Laya.Sprite3D();
                    _spr.name = _i;
                    this._scene.addChild(_spr);
                    this._buildScene(this.sceneNode[_i], _spr);
                }
                //
                console.log(...ConsoleEx_1.default.packLog('关卡->' + this._lvConfig.key + '构建完成'));
                console.log('关卡->' + this._lvConfig.key, '\n场景->', this._scene, '\n预制体->', this.prefabs, '\n物体->', this.sprite3Ds);
                //返回场景
                r(this._scene);
            });
        });
    }
    /**
     * 清除场景
     */
    clearScene() {
        //判断是否有场景
        if (this._scene) {
            console.log(...ConsoleEx_1.default.packLog('清除关卡->' + this._lvConfig.key));
            //
            this._scene.destroy();
            //
            this._prefabRes = [];
            this.prefabs = {};
            this._scene = null;
            this.sprite3Ds = [];
        }
    }
    //* ---------- *//
    /**
     * 场景所有预制体资源地址列表
     */
    scenePrefabUrl() {
        let resUrl = [];
        let resName = this.scenePrefabResName();
        resName && resName.forEach((name) => {
            resUrl.push(EssentialResUrls_1.default.prefab_url(name));
        });
        return resUrl;
    }
    /**
     * 获取场景中所有直接加载预制体名字
     */
    sceneDirectPrefabUrl() {
        let resUrl = [];
        let resName = this.sceneDirectPrefabResName();
        resName && resName.forEach((name) => {
            resUrl.push(EssentialResUrls_1.default.prefab_url(name));
        });
        return resUrl;
    }
    /**
     * 获取场景中所有预加载预制体名字
     */
    scenePreloadPrefabUrl() {
        let resUrl = [];
        let resName = this.scenePreloadPrefabResName();
        resName && resName.forEach((name) => {
            resUrl.push(EssentialResUrls_1.default.prefab_url(name));
        });
        return resUrl;
    }
    /**
     * 关卡预制体资源名字列表
     */
    scenePrefabResName() {
        //判断长度
        let _length = 0;
        for (let _i in this.sceneNode) {
            _length++;
        }
        if (_length == 0) {
            console.error(...ConsoleEx_1.default.packError('关卡->' + this._lvConfig.key + '<-不存在,或者是没有内容'));
            return;
        }
        if (!this._prefabRes || this._prefabRes.length <= 0) {
            //判断需要构建的节点
            for (let _i in this.sceneNode) {
                this._getPrefabName(this._prefabRes, this.sceneNode[_i]);
            }
            //判断是否有其它资源需要加载
            if (this.sceneNode_ && this.sceneNode_.length > 0) {
                //
                this.sceneNode_.forEach((item) => {
                    this._getPrefabName(this._prefabRes, item);
                });
            }
        }
        return this._prefabRes;
    }
    /**
     * 获取场景中所有直接加载的预制体名字列表
     */
    sceneDirectPrefabResName() {
        let _prefabNames = [];
        //
        for (let _i in this.sceneNode) {
            this._getPrefabName(_prefabNames, this.sceneNode[_i]);
        }
        //
        return _prefabNames;
    }
    /**
     * 获取场景中所有预加载预制体名字列表
     */
    scenePreloadPrefabResName() {
        let _prefabNames = [];
        //
        this.sceneNode_.forEach((item) => {
            this._getPrefabName(_prefabNames, item);
        });
        //
        return _prefabNames;
    }
    //* ------------------------------------------------------ *//
    // 获取预制体名字
    _getPrefabName(spArr, node) {
        if (node) {
            let prefabName = node['prefabName'];
            if (prefabName) {
                node = node;
                if (spArr.indexOf(prefabName) < 0) {
                    spArr.push(prefabName);
                }
            }
            else {
                node = node;
                if (node.child) {
                    node.child.forEach((nodeChild) => {
                        this._getPrefabName(spArr, nodeChild);
                    });
                }
            }
        }
    }
    // 构建场景
    _buildScene(node, parent) {
        //获取预制体名字
        let prefabName = node["prefabName"];
        if (prefabName) {
            node = node;
            let sprite = ResLoad_1.default.Get(EssentialResUrls_1.default.prefab_url(prefabName));
            if (sprite) {
                SceneUtils_1.default.initNode(sprite, node);
                parent.addChild(sprite);
                this.prefabs[prefabName] = this.prefabs[prefabName] || [];
                this.prefabs[prefabName].push(sprite);
                this.sprite3Ds.push(sprite);
            }
        }
        else {
            node = node;
            if (node.child) {
                let nodeSp = new Laya.Sprite3D();
                SceneUtils_1.default.initNode(nodeSp, node);
                parent.addChild(nodeSp);
                node.child.forEach((nodeChild) => {
                    this._buildScene(nodeChild, nodeSp);
                });
            }
        }
    }
}
exports.default = Scene;


/***/ }),

/***/ "./src/aTGame/3D/SceneManager.ts":
/*!***************************************!*\
  !*** ./src/aTGame/3D/SceneManager.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ResLoad_1 = __webpack_require__(/*! ../Res/ResLoad */ "./src/aTGame/Res/ResLoad.ts");
const Scene_1 = __webpack_require__(/*! ./Scene */ "./src/aTGame/3D/Scene.ts");
const SceneManagerProxy_1 = __webpack_require__(/*! ./SceneManagerProxy */ "./src/aTGame/3D/SceneManagerProxy.ts");
const FrameLevelConfig_1 = __webpack_require__(/*! ../../cFrameBridge/Config/FrameLevelConfig */ "./src/cFrameBridge/Config/FrameLevelConfig.ts");
const ConsoleEx_1 = __webpack_require__(/*! ../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const ELevelSceneName_1 = __webpack_require__(/*! ../../cFrameBridge/Config/ELevelSceneName */ "./src/cFrameBridge/Config/ELevelSceneName.ts");
const EssentialResUrls_1 = __webpack_require__(/*! ../Res/EssentialResUrls */ "./src/aTGame/Res/EssentialResUrls.ts");
const FrameLevelConst_1 = __webpack_require__(/*! ../../cFrameBridge/Config/FrameLevelConst */ "./src/cFrameBridge/Config/FrameLevelConst.ts");
/**
 * 场景3d可取出关卡中的所有东西
 */
class SceneManager {
    //初始化
    constructor() {
        // 关卡配置数据
        this._levelConfig = {};
        // 场景实例缓存
        this._scenes = {};
        //设置代理类代理数据
        SceneManagerProxy_1.default.sevelConfig = this._levelConfig;
    }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new SceneManager();
        }
        return this._instance;
    }
    //
    init() { }
    /**
     * 初始化配置
     */
    initConfig() {
        let url;
        let config;
        for (let _i in ELevelSceneName_1.ELevelSceneName) {
            url = ELevelSceneName_1.ELevelSceneName[_i];
            if (!url) {
                continue;
            }
            url = EssentialResUrls_1.default.levelConfigURL(url);
            //这里必须不使用克隆资源
            config = ResLoad_1.default.Get(url, true);
            //
            if (config.root) {
                this._levelConfig[ELevelSceneName_1.ELevelSceneName[_i]] = {};
                //获取根节点下的节点
                for (let i = 0; i < config.root.length; i++) {
                    let data = config.root[i];
                    this._levelConfig[ELevelSceneName_1.ELevelSceneName[_i]][data.name] = data;
                }
            }
            //清理资源缓存只使用一次
            ResLoad_1.default.Unload(url);
        }
    }
    /**
     * 获取所有预加载资源路径列表,在游戏开始前加载
     * @param urls 资源集
     */
    Preload(urls) {
        let _preloadUrls = [];
        // 当前 关卡 初始化
        FrameLevelConst_1.default.PrestrainLeveId.forEach((item) => {
            _preloadUrls.push(...this.getOtherSceneByName(item).scenePrefabUrl());
        });
        //添加进数组
        urls.push(..._preloadUrls);
    }
    /**
     * 根据场景id预加载关卡资源
     * @param id 关卡id
     */
    preloadSceneRes(id) {
        console.log(...ConsoleEx_1.default.packLog('预加载关卡->', id));
        //
        this.getSceneByLv(id).loadRes();
    }
    /**
     * 根据场景名字预加载其它关卡资源
     * @param name 关卡名字
     */
    preloadOtherSceneRes(name) {
        console.log(...ConsoleEx_1.default.packLog('预加载其它关卡->', name));
        //
        this.getOtherSceneByName(name).loadRes();
    }
    /**
     * 通过id获取关卡
     * @param id 关卡id
     */
    getSceneByLv(id) {
        let lvConfig = FrameLevelConfig_1.default.byLevelIdGetLevelData(id);
        if (!lvConfig) {
            console.error(...ConsoleEx_1.default.packError("不存在此关卡->", id));
        }
        //查看缓存
        if (!this._scenes[lvConfig.key]) {
            //创建场景实例
            this._scenes[lvConfig.key] = this.getSceneByData(lvConfig);
        }
        return this._scenes[lvConfig.key];
    }
    /**
     * 通过关卡名字获取其他关卡
     * @param _name 关卡名字
     */
    getOtherSceneByName(_name) {
        let lvConfig = FrameLevelConfig_1.default.byLevelNameGetOtherLevelData(_name);
        if (!lvConfig) {
            console.error(...ConsoleEx_1.default.packError("不存在此关卡->", _name));
        }
        //查看缓存
        if (!this._scenes[lvConfig.key]) {
            //创建场景实例
            this._scenes[lvConfig.key] = this.getSceneByData(lvConfig);
        }
        return this._scenes[lvConfig.key];
    }
    //通过关卡数据构建关卡
    getSceneByData(_lvConfig) {
        let _data = this.getSceneConfig(_lvConfig);
        return new Scene_1.default(_data.sceneNodes, _data.sceneNodes_, _lvConfig);
    }
    // 获取场景配置数据
    getSceneConfig(_lvConfig) {
        //获取该关卡名字
        let sceneName = _lvConfig.sceneName;
        //获取该关卡其他资源加载名字
        let _sceneName_ = _lvConfig.sceneOtherRes;
        //
        let sceneNodes = {};
        let sceneNodes_ = [];
        //获取需要加载和预加载的节点
        if (!this._levelConfig[_lvConfig.rootScene]) {
            console.error(...ConsoleEx_1.default.packError('没有找到场景-', _lvConfig.rootScene, ' 请先注册。'));
        }
        for (let _i in this._levelConfig[_lvConfig.rootScene]) {
            if (sceneName.findIndex((item) => { return item == _i; }) != -1) {
                sceneNodes[_i] = this._levelConfig[_lvConfig.rootScene][_i];
            }
            if (_sceneName_.findIndex((item) => { return item == _i; }) != -1) {
                sceneNodes_.push(this._levelConfig[_lvConfig.rootScene][_i]);
            }
        }
        //
        return {
            sceneNodes: sceneNodes,
            sceneNodes_: sceneNodes_,
        };
    }
    /**
     * 通过关卡id获取该关卡所有预制体资源名字
     * @param id 关卡id
     */
    getLvResName(id) {
        return this.getSceneByLv(id).scenePrefabResName();
    }
    /**
     * 通过关卡id获取该关卡所有预制体资源路径列表
     * @param id 关卡id
     */
    getLvResUrl(id) {
        return this.getSceneByLv(id).scenePrefabUrl();
    }
}
exports.default = SceneManager;


/***/ }),

/***/ "./src/aTGame/3D/SceneManagerProxy.ts":
/*!********************************************!*\
  !*** ./src/aTGame/3D/SceneManagerProxy.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ELevelSceneName_1 = __webpack_require__(/*! ../../cFrameBridge/Config/ELevelSceneName */ "./src/cFrameBridge/Config/ELevelSceneName.ts");
const SceneUtils_1 = __webpack_require__(/*! ./SceneUtils */ "./src/aTGame/3D/SceneUtils.ts");
/**
 * SceneManager类代理类
 */
class SceneManagerProxy {
    /** 设置关卡配置信息 */
    static set sevelConfig(_data) {
        this.m_sevelConfig = _data;
    }
    /**
     * 根据场景配置数据初始化相机参数
     * @param camera 相机
     * @param _sceneName 场景名
     */
    static initCamera(camera, _sceneName = ELevelSceneName_1.default.defaultLevelSceneName) {
        let cameraData = this.m_sevelConfig[_sceneName]["camera"];
        if (cameraData) {
            SceneUtils_1.default.initNode(camera, cameraData);
        }
    }
    /**
     * 根据场景配置数据初始化灯光参数
     * @param light 灯光
     * @param _sceneName 场景名
     */
    static initLight(light, _sceneName = ELevelSceneName_1.default.defaultLevelSceneName) {
        let lightData = this.m_sevelConfig[_sceneName]["light"];
        if (lightData) {
            SceneUtils_1.default.initNode(light, lightData);
        }
    }
}
exports.default = SceneManagerProxy;
//关卡配置信息
SceneManagerProxy.m_sevelConfig = {};


/***/ }),

/***/ "./src/aTGame/3D/SceneUtils.ts":
/*!*************************************!*\
  !*** ./src/aTGame/3D/SceneUtils.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const V3Utils_1 = __webpack_require__(/*! ../Utils/V3Utils */ "./src/aTGame/Utils/V3Utils.ts");
/**
 * 场景实用工具类
 */
class SceneUtils {
    /**
     * 根据spr精灵初始化节点
     * @param _spr 精灵
     * @param _target 目标节点
     */
    static initNode(_spr, _target) {
        _spr.name = _target.name;
        //设置位置
        if (!_target.position) {
            //默认位置
            _spr.transform.localPosition = new Laya.Vector3(0, 0, 0);
        }
        else {
            _spr.transform.localPosition = V3Utils_1.default.parseVector3(_target.position);
        }
        //设置旋转
        if (!_target.euler) {
            //默认旋转
            _spr.transform.localRotationEuler = new Laya.Vector3(0, 0, 0);
        }
        else {
            _spr.transform.localRotationEuler = V3Utils_1.default.parseVector3(_target.euler);
        }
        //设置缩放
        if (!_target.scale) {
            //默认缩放
            _spr.transform.localScale = new Laya.Vector3(1, 1, 1);
        }
        else {
            _spr.transform.localScale = V3Utils_1.default.parseVector3(_target.scale);
        }
    }
}
exports.default = SceneUtils;


/***/ }),

/***/ "./src/aTGame/Async/Awaiters.ts":
/*!**************************************!*\
  !*** ./src/aTGame/Async/Awaiters.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 异步等待类
 */
class Awaiters {
    /**
     * 等待2帧
     */
    static NextFrame() {
        // 一帧有可能刚好当帧执行,这里跳两帧
        return this.Frames(2);
    }
    /**
     * 等待一定帧数
     * @param num 帧数
     */
    static Frames(num) {
        return new Promise(function (resolve) {
            Laya.timer.frameOnce(num, null, () => {
                resolve();
            });
        });
    }
    /**
     * 等待多少秒
     * @param num 多少秒
     */
    static Seconds(num) {
        return new Promise(function (resolve) {
            Laya.timer.once(num * 1000, null, () => {
                resolve();
            });
        });
    }
}
exports.default = Awaiters;


/***/ }),

/***/ "./src/aTGame/Audio/AudioUtils.ts":
/*!****************************************!*\
  !*** ./src/aTGame/Audio/AudioUtils.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ResUrl_1 = __webpack_require__(/*! ../../aTGame/Res/ResUrl */ "./src/aTGame/Res/ResUrl.ts");
const ConsoleEx_1 = __webpack_require__(/*! ../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
/**
 * 音效工具类
 * 必须要先预加载音效，不然播放会有延迟
 */
class AudioUtils {
    //
    constructor() {
        //
        this._bgPast = [];
        this._urlBGM = '';
        this._urlSOUND = '';
        this._sounds = [];
    }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new AudioUtils();
        }
        return this._instance;
    }
    //初始化
    init() { }
    /**
     * 播放背景音乐
     * @param name 背景音乐名字
     */
    playBGM(name, loops, complete, startTime) {
        if (name != null && this._bgPast.slice(-1)[0] != name) {
            this._bgPast.push(name);
            this._urlBGM = ResUrl_1.default.music_url(name);
            this._playMusic(loops, complete, startTime);
            console.log(...ConsoleEx_1.default.packLog("播放背景音乐", name));
        }
        else {
            if (this._urlBGM != "") {
                this._playMusic(loops, complete, startTime);
                console.log(...ConsoleEx_1.default.packLog("播放背景音乐", name));
            }
            else {
            }
        }
    }
    /**
     * 转移背景音乐
     * @param name
     */
    shiftBGM(name, loops, complete, startTime) {
        if (this._bgPast.slice(-1)[0] == name) {
            this._bgPast.pop();
            let pastBg = this._bgPast.slice(-1)[0];
            if (pastBg) {
                this._urlBGM = ResUrl_1.default.music_url(name);
                this._playMusic(loops, complete, startTime);
            }
        }
    }
    /**
     * 暂停背景音乐
     */
    pauseBGM() {
        Laya.SoundManager.stopMusic();
        console.log(...ConsoleEx_1.default.packLog("停止播放音乐", this._urlBGM));
    }
    /**
     * 暂停特效音乐
     */
    pauseSound() {
        Laya.SoundManager.stopAllSound();
    }
    /**
     * 播放特效音乐
     * @param type 名字
     * @param loops 是否循环
     * @param complete 完成回调
     * @param soundClass 使用哪个声音类进行播放，null表示自动选择。
     * @param startTime 开始时间
     */
    playSound(type, loops, complete, soundClass, startTime) {
        this._urlSOUND = ResUrl_1.default.sound_url(type);
        for (let i = 0; i < this._sounds.length; i++) {
            if (this._sounds[i]) {
                if (this._sounds[i].url.indexOf(this._urlSOUND) >= 0) {
                    this._sounds[i].stop();
                    this._sounds.splice(i, 1);
                    break;
                }
            }
        }
        let temp = Laya.SoundManager.playSound(this._urlSOUND, loops, complete, soundClass, startTime);
        this._sounds.push(temp);
    }
    /**
     * 停止播放某个特效音乐
     * @param type
     */
    stopSound(type) {
        this._urlSOUND = ResUrl_1.default.sound_url(type);
        Laya.SoundManager.stopSound(this._urlSOUND);
    }
    // 播放音乐后的回调
    _playMusic(loops = 0, complete, startTime) {
        Laya.SoundManager.stopMusic();
        Laya.SoundManager.playMusic(this._urlBGM, loops, complete, startTime);
    }
}
exports.default = AudioUtils;


/***/ }),

/***/ "./src/aTGame/Commom/ComData.ts":
/*!**************************************!*\
  !*** ./src/aTGame/Commom/ComData.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootLocalStorageData_1 = __webpack_require__(/*! ../Data/RootLocalStorageData */ "./src/aTGame/Data/RootLocalStorageData.ts");
/**
 * 公共需要保存的数据
 */
class ComData extends RootLocalStorageData_1.default {
}
exports.default = ComData;


/***/ }),

/***/ "./src/aTGame/Commom/CommonDataProxy.ts":
/*!**********************************************!*\
  !*** ./src/aTGame/Commom/CommonDataProxy.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootLocalStorageProxy_1 = __webpack_require__(/*! ../Data/RootLocalStorageProxy */ "./src/aTGame/Data/RootLocalStorageProxy.ts");
const ComData_1 = __webpack_require__(/*! ./ComData */ "./src/aTGame/Commom/ComData.ts");
/**
 * 公共数据保存类
 */
class CommonDataProxy extends RootLocalStorageProxy_1.default {
    /** 不允许外界实例化 */
    constructor() {
        super();
    }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new CommonDataProxy();
        }
        return this._instance;
    }
    /** 获取保存名称 */
    get _saveName() {
        return "Common";
    }
    //获取一个新的数据
    getNewData() {
        return new ComData_1.default();
    }
}
exports.default = CommonDataProxy;


/***/ }),

/***/ "./src/aTGame/Commom/CommonLeveEnum.ts":
/*!*********************************************!*\
  !*** ./src/aTGame/Commom/CommonLeveEnum.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ECommonLeve = void 0;
/**
 * 关卡公共枚举
 */
var ECommonLeve;
(function (ECommonLeve) {
    /** 最小关卡数量 */
    ECommonLeve[ECommonLeve["MinLeveNumber"] = 3] = "MinLeveNumber";
    /** 默认关卡 */
    ECommonLeve[ECommonLeve["DefaultLeveId"] = 1] = "DefaultLeveId";
    /** 测试关卡id */
    ECommonLeve[ECommonLeve["DebugLeveId"] = 0] = "DebugLeveId";
    /** 新手关卡 */
    ECommonLeve[ECommonLeve["NewHandLeveId"] = 1] = "NewHandLeveId";
})(ECommonLeve = exports.ECommonLeve || (exports.ECommonLeve = {}));


/***/ }),

/***/ "./src/aTGame/Config/ConfigManager.ts":
/*!********************************************!*\
  !*** ./src/aTGame/Config/ConfigManager.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ConfigManager = void 0;
const EssentialResUrls_1 = __webpack_require__(/*! ../Res/EssentialResUrls */ "./src/aTGame/Res/EssentialResUrls.ts");
const ResLoad_1 = __webpack_require__(/*! ../Res/ResLoad */ "./src/aTGame/Res/ResLoad.ts");
const ArrayUtils_1 = __webpack_require__(/*! ../Utils/ArrayUtils */ "./src/aTGame/Utils/ArrayUtils.ts");
/**
 * 配置管理器
 * 所有配置文件加载完处理后就销毁,只有额外的配置文件列表中的配置文件不会被销毁
 */
class ConfigManager {
    /** 加载配置文件数量 */
    static get needLoadCount() {
        return this._configList.length;
    }
    /**
     * 添加配置文件
     * @param configName 配置文件
     */
    static AddConfig(configName) {
        ConfigManager._configList.push(configName);
    }
    /**
     * 添加额外的配置文件列表
     * @param _url
     */
    static AddExtraConfig(_url) {
        //
        if (_url.length > 0) {
            //添加
            ConfigManager._extraConfig.push(..._url);
            //去重
            ConfigManager._extraConfig = ArrayUtils_1.default.Unique(ConfigManager._extraConfig);
        }
    }
    /**
     * 开始加载配置
     * @param onFinished 加载完成回调
     * @param onProgress 加载进度回调
     */
    static StartLoad(onFinished, onProgress = null) {
        //判断是否有配置
        if (ConfigManager._configList.length == 0) {
            if (onFinished) {
                onFinished.run();
            }
            return;
        }
        //获取配置路径列表
        let loadUrls = [];
        for (let configName of ConfigManager._configList) {
            loadUrls.push(EssentialResUrls_1.default.ConfigURL(configName.path.match(/[a-zA-Z0-9.]*$/)[0]));
        }
        //获取需要清理掉的配置文件路径
        let _clearURLs = [];
        loadUrls.forEach((item) => {
            _clearURLs.push(item);
        });
        //添加额外的配置文件
        loadUrls.push(...this._extraConfig);
        //加载文件
        Laya.loader.create(loadUrls, Laya.Handler.create(this, () => {
            //获取文件并初始化数据
            for (let configName of ConfigManager._configList) {
                configName.data = Laya.loader.getRes(EssentialResUrls_1.default.ConfigURL(configName.path.match(/[a-zA-Z0-9.]*$/)[0]));
                configName.dataList = [];
                for (let configKey in configName.data) {
                    let value = configName.data[configKey];
                    if (value != null) {
                        configName.dataList.push(value);
                    }
                }
                if (configName.dataList.length > 0) {
                    configName.lastData = configName.dataList[configName.dataList.length - 1];
                }
            }
            if (onFinished) {
                onFinished.run();
            }
            //清理资源
            _clearURLs.forEach((item) => {
                ResLoad_1.default.Unload(item);
            });
        }), onProgress);
    }
}
exports.ConfigManager = ConfigManager;
//
ConfigManager._configList = [];
//
ConfigManager._extraConfig = [];


/***/ }),

/***/ "./src/aTGame/Config/RootDataProxy.ts":
/*!********************************************!*\
  !*** ./src/aTGame/Config/RootDataProxy.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BaseConstDataProxy = void 0;
/**
 * 数据代理基类
 */
class BaseDataProxy {
    //初始化
    constructor() {
        this.initData();
    }
    /**
     * 初始化 使用时覆盖
     */
    initData() {
        //
    }
}
/**
 * Config数据代理基类
 */
class BaseConfigDataProxy extends BaseDataProxy {
    /** 配置数据列表 */
    get dataList() {
        return this.m_dataList;
    }
}
exports.default = BaseConfigDataProxy;
/**
 * Const数据代理基类
 */
class BaseConstDataProxy extends BaseDataProxy {
    /** 配置数据 */
    get data() {
        return this.m_data;
    }
}
exports.BaseConstDataProxy = BaseConstDataProxy;


/***/ }),

/***/ "./src/aTGame/Console/ConsoleConst.ts":
/*!********************************************!*\
  !*** ./src/aTGame/Console/ConsoleConst.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 打印台常用配置
 */
class ConsoleConst {
}
exports.default = ConsoleConst;
/** 打印台Log样式 */
ConsoleConst.logStyle = `
        color: #fff;
        background-color: #8d93ab;
        border-radius: 3px;
        line-height: 15px;
        `;
/** 打印台Log样式 */
ConsoleConst.logLightStyle = `
        color: #52575d;
        background-color: #EBEBEB;
        border-radius: 3px;
        line-height: 15px;
        `;
/** 打印台Log样式 */
ConsoleConst.comStyle = `
        color: #fff;
        background-color: #ade498;
        border-radius: 3px;
        line-height: 15px;
        `;
/** 打印台Log样式 */
ConsoleConst.warnStyle = `
        color: #5c6e06;
        background-color: #ffa931;
        border-radius: 3px;
        line-height: 15px;
        `;
/** 打印台Log样式 */
ConsoleConst.errorStyle = `
        color: #fff;
        background-color: #ec0101;
        border-radius: 3px;
        line-height: 15px;
        `;
// * ---------- *//
/** 打印台Log样式 */
ConsoleConst.platformStyle = `
        color: #52575d;
        background-color: #e3fdfd;
        border-radius: 3px;
        line-height: 15px;
        `;


/***/ }),

/***/ "./src/aTGame/Console/ConsoleEx.ts":
/*!*****************************************!*\
  !*** ./src/aTGame/Console/ConsoleEx.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ConsoleConst_1 = __webpack_require__(/*! ./ConsoleConst */ "./src/aTGame/Console/ConsoleConst.ts");
/**
 * 打印台扩展
 */
class ConsoleEx {
    /**
     * 打印普通消息
     * @param any 内容
     */
    static log(...any) {
        console.log(`%c ${any}`, ConsoleConst_1.default.logStyle);
    }
    /**
     * 打印警告消息
     * @param any 内容
     */
    static warn(...any) {
        console.log(`%c ${any}`, ConsoleConst_1.default.warnStyle);
    }
    /**
     * 打印错误消息
     * @param any 内容
     */
    static error(...any) {
        console.log(`%c ${any}`, ConsoleConst_1.default.errorStyle);
    }
    //* ---------- *//
    /**
     * 包装普通消息
     * @param any 内容
     */
    static packLog(...any) {
        return [`%c ${any} `, ConsoleConst_1.default.logStyle];
    }
    /**
     * 包装普通轻消息
     * @param any 内容
     */
    static packLogLight(...any) {
        return [`%c ${any} `, ConsoleConst_1.default.logLightStyle];
    }
    /**
     * 包装成功消息
     * @param any 内容
     */
    static comLog(...any) {
        return [`%c ${any} `, ConsoleConst_1.default.comStyle];
    }
    /**
     * 包装警告消息
     * @param any 内容
     */
    static packWarn(...any) {
        return [`%c 警告: ${any} `, ConsoleConst_1.default.warnStyle];
    }
    /**
     * 包装错误消息
     * @param any 内容
     */
    static packError(...any) {
        return [`%c 错误: ${any} `, ConsoleConst_1.default.errorStyle];
    }
    // * ---------- * //
    /**
     * 包装平台消息
     * @param any 内容
     */
    static packPlatform(...any) {
        return [`%c 平台: ${any} `, ConsoleConst_1.default.platformStyle];
    }
}
exports.default = ConsoleEx;


/***/ }),

/***/ "./src/aTGame/Data/Base64.ts":
/*!***********************************!*\
  !*** ./src/aTGame/Data/Base64.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 使用base64编码字符串
 */
class Base64 {
    /**
     * 编码
     * @param input 输入
     */
    static encode(input) {
        let output = '';
        let chr1, chr2, chr3, enc1, enc2, enc3, enc4;
        let i = 0;
        input = this._utf8_encode(input);
        while (i < input.length) {
            chr1 = input.charCodeAt(i++);
            chr2 = input.charCodeAt(i++);
            chr3 = input.charCodeAt(i++);
            enc1 = chr1 >> 2;
            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
            enc4 = chr3 & 63;
            if (isNaN(chr2)) {
                enc3 = enc4 = 64;
            }
            else if (isNaN(chr3)) {
                enc4 = 64;
            }
            output = output +
                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +
                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);
        }
        return output;
    }
    /**
     * 译码
     * @param input 输入
     */
    static decode(input) {
        let output = '';
        let chr1, chr2, chr3;
        let enc1, enc2, enc3, enc4;
        let i = 0;
        input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');
        while (i < input.length) {
            enc1 = this._keyStr.indexOf(input.charAt(i++));
            enc2 = this._keyStr.indexOf(input.charAt(i++));
            enc3 = this._keyStr.indexOf(input.charAt(i++));
            enc4 = this._keyStr.indexOf(input.charAt(i++));
            chr1 = (enc1 << 2) | (enc2 >> 4);
            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
            chr3 = ((enc3 & 3) << 6) | enc4;
            output = output + String.fromCharCode(chr1);
            if (enc3 !== 64) {
                output = output + String.fromCharCode(chr2);
            }
            if (enc4 !== 64) {
                output = output + String.fromCharCode(chr3);
            }
        }
        output = this._utf8_decode(output);
        return output;
    }
    // 
    static _utf8_encode(string) {
        string = string.replace(/\r\n/g, '\n');
        let utftext = '';
        for (let n = 0; n < string.length; n++) {
            const c = string.charCodeAt(n);
            if (c < 128) {
                utftext += String.fromCharCode(c);
            }
            else if ((c > 127) && (c < 2048)) {
                utftext += String.fromCharCode((c >> 6) | 192);
                utftext += String.fromCharCode((c & 63) | 128);
            }
            else {
                utftext += String.fromCharCode((c >> 12) | 224);
                utftext += String.fromCharCode(((c >> 6) & 63) | 128);
                utftext += String.fromCharCode((c & 63) | 128);
            }
        }
        return utftext;
    }
    // 
    static _utf8_decode(utftext) {
        let string = '';
        let i = 0;
        let c = 0, c2 = 0, c3 = 0;
        while (i < utftext.length) {
            c = utftext.charCodeAt(i);
            if (c < 128) {
                string += String.fromCharCode(c);
                i++;
            }
            else if ((c > 191) && (c < 224)) {
                c2 = utftext.charCodeAt(i + 1);
                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
                i += 2;
            }
            else {
                c2 = utftext.charCodeAt(i + 1);
                c3 = utftext.charCodeAt(i + 2);
                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                i += 3;
            }
        }
        return string;
    }
}
exports.default = Base64;
//
Base64._keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';


/***/ }),

/***/ "./src/aTGame/Data/Md5.ts":
/*!********************************!*\
  !*** ./src/aTGame/Data/Md5.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * TypeScript Md5加密
 */
class Md5 {
    constructor() {
        this._state = new Int32Array(4);
        this._buffer = new ArrayBuffer(68);
        this._buffer8 = new Uint8Array(this._buffer, 0, 68);
        this._buffer32 = new Uint32Array(this._buffer, 0, 17);
        this.start();
    }
    // One time hashing functions
    static hashStr(str, raw = false) {
        return this.onePassHasher
            .start()
            .appendStr(str)
            .end(raw);
    }
    static hashAsciiStr(str, raw = false) {
        return this.onePassHasher
            .start()
            .appendAsciiStr(str)
            .end(raw);
    }
    static _hex(x) {
        const hc = Md5.hexChars;
        const ho = Md5.hexOut;
        let n;
        let offset;
        let j;
        let i;
        for (i = 0; i < 4; i += 1) {
            offset = i * 8;
            n = x[i];
            for (j = 0; j < 8; j += 2) {
                ho[offset + 1 + j] = hc.charAt(n & 0x0F);
                n >>>= 4;
                ho[offset + 0 + j] = hc.charAt(n & 0x0F);
                n >>>= 4;
            }
        }
        return ho.join('');
    }
    static _md5cycle(x, k) {
        let a = x[0];
        let b = x[1];
        let c = x[2];
        let d = x[3];
        // ff()
        a += (b & c | ~b & d) + k[0] - 680876936 | 0;
        a = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[1] - 389564586 | 0;
        d = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[2] + 606105819 | 0;
        c = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;
        b = (b << 22 | b >>> 10) + c | 0;
        a += (b & c | ~b & d) + k[4] - 176418897 | 0;
        a = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;
        d = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;
        c = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[7] - 45705983 | 0;
        b = (b << 22 | b >>> 10) + c | 0;
        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;
        a = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;
        d = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[10] - 42063 | 0;
        c = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;
        b = (b << 22 | b >>> 10) + c | 0;
        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;
        a = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[13] - 40341101 | 0;
        d = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;
        c = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;
        b = (b << 22 | b >>> 10) + c | 0;
        // gg()
        a += (b & d | c & ~d) + k[1] - 165796510 | 0;
        a = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;
        d = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[11] + 643717713 | 0;
        c = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[0] - 373897302 | 0;
        b = (b << 20 | b >>> 12) + c | 0;
        a += (b & d | c & ~d) + k[5] - 701558691 | 0;
        a = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[10] + 38016083 | 0;
        d = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[15] - 660478335 | 0;
        c = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[4] - 405537848 | 0;
        b = (b << 20 | b >>> 12) + c | 0;
        a += (b & d | c & ~d) + k[9] + 568446438 | 0;
        a = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;
        d = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[3] - 187363961 | 0;
        c = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;
        b = (b << 20 | b >>> 12) + c | 0;
        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;
        a = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[2] - 51403784 | 0;
        d = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;
        c = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;
        b = (b << 20 | b >>> 12) + c | 0;
        // hh()
        a += (b ^ c ^ d) + k[5] - 378558 | 0;
        a = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;
        d = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;
        c = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[14] - 35309556 | 0;
        b = (b << 23 | b >>> 9) + c | 0;
        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;
        a = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;
        d = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[7] - 155497632 | 0;
        c = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;
        b = (b << 23 | b >>> 9) + c | 0;
        a += (b ^ c ^ d) + k[13] + 681279174 | 0;
        a = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[0] - 358537222 | 0;
        d = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[3] - 722521979 | 0;
        c = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[6] + 76029189 | 0;
        b = (b << 23 | b >>> 9) + c | 0;
        a += (b ^ c ^ d) + k[9] - 640364487 | 0;
        a = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[12] - 421815835 | 0;
        d = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[15] + 530742520 | 0;
        c = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[2] - 995338651 | 0;
        b = (b << 23 | b >>> 9) + c | 0;
        // ii()
        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;
        a = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;
        d = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;
        c = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;
        b = (b << 21 | b >>> 11) + c | 0;
        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;
        a = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;
        d = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;
        c = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;
        b = (b << 21 | b >>> 11) + c | 0;
        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;
        a = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;
        d = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;
        c = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;
        b = (b << 21 | b >>> 11) + c | 0;
        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;
        a = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;
        d = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;
        c = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;
        b = (b << 21 | b >>> 11) + c | 0;
        x[0] = a + x[0] | 0;
        x[1] = b + x[1] | 0;
        x[2] = c + x[2] | 0;
        x[3] = d + x[3] | 0;
    }
    start() {
        this._dataLength = 0;
        this._bufferLength = 0;
        this._state.set(Md5.stateIdentity);
        return this;
    }
    // Char to code point to to array conversion:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt
    // #Example.3A_Fixing_charCodeAt_to_handle_non-Basic-Multilingual-Plane_characters_if_their_presence_earlier_in_the_string_is_unknown
    appendStr(str) {
        const buf8 = this._buffer8;
        const buf32 = this._buffer32;
        let bufLen = this._bufferLength;
        let code;
        let i;
        for (i = 0; i < str.length; i += 1) {
            code = str.charCodeAt(i);
            if (code < 128) {
                buf8[bufLen++] = code;
            }
            else if (code < 0x800) {
                buf8[bufLen++] = (code >>> 6) + 0xC0;
                buf8[bufLen++] = code & 0x3F | 0x80;
            }
            else if (code < 0xD800 || code > 0xDBFF) {
                buf8[bufLen++] = (code >>> 12) + 0xE0;
                buf8[bufLen++] = (code >>> 6 & 0x3F) | 0x80;
                buf8[bufLen++] = (code & 0x3F) | 0x80;
            }
            else {
                code = ((code - 0xD800) * 0x400) + (str.charCodeAt(++i) - 0xDC00) + 0x10000;
                if (code > 0x10FFFF) {
                    throw new Error('Unicode standard supports code points up to U+10FFFF');
                }
                buf8[bufLen++] = (code >>> 18) + 0xF0;
                buf8[bufLen++] = (code >>> 12 & 0x3F) | 0x80;
                buf8[bufLen++] = (code >>> 6 & 0x3F) | 0x80;
                buf8[bufLen++] = (code & 0x3F) | 0x80;
            }
            if (bufLen >= 64) {
                this._dataLength += 64;
                Md5._md5cycle(this._state, buf32);
                bufLen -= 64;
                buf32[0] = buf32[16];
            }
        }
        this._bufferLength = bufLen;
        return this;
    }
    appendAsciiStr(str) {
        const buf8 = this._buffer8;
        const buf32 = this._buffer32;
        let bufLen = this._bufferLength;
        let i;
        let j = 0;
        for (;;) {
            i = Math.min(str.length - j, 64 - bufLen);
            while (i--) {
                buf8[bufLen++] = str.charCodeAt(j++);
            }
            if (bufLen < 64) {
                break;
            }
            this._dataLength += 64;
            Md5._md5cycle(this._state, buf32);
            bufLen = 0;
        }
        this._bufferLength = bufLen;
        return this;
    }
    appendByteArray(input) {
        const buf8 = this._buffer8;
        const buf32 = this._buffer32;
        let bufLen = this._bufferLength;
        let i;
        let j = 0;
        for (;;) {
            i = Math.min(input.length - j, 64 - bufLen);
            while (i--) {
                buf8[bufLen++] = input[j++];
            }
            if (bufLen < 64) {
                break;
            }
            this._dataLength += 64;
            Md5._md5cycle(this._state, buf32);
            bufLen = 0;
        }
        this._bufferLength = bufLen;
        return this;
    }
    getState() {
        const self = this;
        const s = self._state;
        return {
            buffer: String.fromCharCode.apply(null, self._buffer8),
            buflen: self._bufferLength,
            length: self._dataLength,
            state: [s[0], s[1], s[2], s[3]]
        };
    }
    setState(state) {
        const buf = state.buffer;
        const x = state.state;
        const s = this._state;
        let i;
        this._dataLength = state.length;
        this._bufferLength = state.buflen;
        s[0] = x[0];
        s[1] = x[1];
        s[2] = x[2];
        s[3] = x[3];
        for (i = 0; i < buf.length; i += 1) {
            this._buffer8[i] = buf.charCodeAt(i);
        }
    }
    end(raw = false) {
        const bufLen = this._bufferLength;
        const buf8 = this._buffer8;
        const buf32 = this._buffer32;
        const i = (bufLen >> 2) + 1;
        let dataBitsLen;
        this._dataLength += bufLen;
        buf8[bufLen] = 0x80;
        buf8[bufLen + 1] = buf8[bufLen + 2] = buf8[bufLen + 3] = 0;
        buf32.set(Md5.buffer32Identity.subarray(i), i);
        if (bufLen > 55) {
            Md5._md5cycle(this._state, buf32);
            buf32.set(Md5.buffer32Identity);
        }
        // Do the final computation based on the tail and length
        // Beware that the final length may not fit in 32 bits so we take care of that
        dataBitsLen = this._dataLength * 8;
        if (dataBitsLen <= 0xFFFFFFFF) {
            buf32[14] = dataBitsLen;
        }
        else {
            const matches = dataBitsLen.toString(16).match(/(.*?)(.{0,8})$/);
            if (matches === null) {
                return;
            }
            const lo = parseInt(matches[2], 16);
            const hi = parseInt(matches[1], 16) || 0;
            buf32[14] = lo;
            buf32[15] = hi;
        }
        Md5._md5cycle(this._state, buf32);
        return raw ? this._state : Md5._hex(this._state);
    }
}
exports.default = Md5;
/** 能否使用 */
Md5.ifUse = true;
// Private Static Variables
Md5.stateIdentity = new Int32Array([1732584193, -271733879, -1732584194, 271733878]);
Md5.buffer32Identity = new Int32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
Md5.hexChars = '0123456789abcdef';
Md5.hexOut = [];
// Permanent instance is to use for one-call hashing
Md5.onePassHasher = new Md5();
//检查Md5是否可用
if (Md5.hashStr('hello') !== '5d41402abc4b2a76b9719d911017c592') {
    //设置不能使用
    Md5.ifUse = false;
    console.warn('Md5 self test failed.');
}


/***/ }),

/***/ "./src/aTGame/Data/RootDataManger.ts":
/*!*******************************************!*\
  !*** ./src/aTGame/Data/RootDataManger.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 游戏数据管理器基类
 */
class RootDataManger {
}
exports.default = RootDataManger;


/***/ }),

/***/ "./src/aTGame/Data/RootDataProxyShell.ts":
/*!***********************************************!*\
  !*** ./src/aTGame/Data/RootDataProxyShell.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 基类数据代理外壳
 * 在数据代理的外面一层，对进出数据进行包装并监听
 * ! 设置了代理外壳就尽量用这个访问数据，否则可能会有意想不到的bug
 */
class RootDataProxyShell {
    //
    constructor() {
        this.initData();
    }
    /**
     * 初始化数据，并注册代理外壳
     */
    initData() { }
}
exports.default = RootDataProxyShell;


/***/ }),

/***/ "./src/aTGame/Data/RootGameData.ts":
/*!*****************************************!*\
  !*** ./src/aTGame/Data/RootGameData.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 游戏数据基类
 * 会有一个返回副本的方法，防止被修改
 */
class RootGameData {
}
exports.default = RootGameData;


/***/ }),

/***/ "./src/aTGame/Data/RootLocalStorageData.ts":
/*!*************************************************!*\
  !*** ./src/aTGame/Data/RootLocalStorageData.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootGameData_1 = __webpack_require__(/*! ./RootGameData */ "./src/aTGame/Data/RootGameData.ts");
/**
 * 本地保存数据基类
 * 会同步项目的版本
 */
class RootLocalStorageData extends RootGameData_1.default {
    /**
     * 返回一个副本
     * @param _data 源数据
     */
    static clone(_data) {
        return JSON.parse(JSON.stringify(_data));
    }
}
exports.default = RootLocalStorageData;


/***/ }),

/***/ "./src/aTGame/Data/RootLocalStorageProxy.ts":
/*!**************************************************!*\
  !*** ./src/aTGame/Data/RootLocalStorageProxy.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const MainConfig_1 = __webpack_require__(/*! ../../bTGameConfig/MainConfig */ "./src/bTGameConfig/MainConfig.ts");
const StringUtils_1 = __webpack_require__(/*! ../Utils/StringUtils */ "./src/aTGame/Utils/StringUtils.ts");
const Md5_1 = __webpack_require__(/*! ./Md5 */ "./src/aTGame/Data/Md5.ts");
const RootDataManger_1 = __webpack_require__(/*! ./RootDataManger */ "./src/aTGame/Data/RootDataManger.ts");
const Base64_1 = __webpack_require__(/*! ./Base64 */ "./src/aTGame/Data/Base64.ts");
const ConsoleEx_1 = __webpack_require__(/*! ../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const DataDebug_1 = __webpack_require__(/*! ../Debug/DataDebug */ "./src/aTGame/Debug/DataDebug.ts");
/**
 * 本地数据代理基类，用以使用和保存数据
 * 泛型为数据类型
 */
class RootLocalStorageProxy extends RootDataManger_1.default {
    constructor() {
        super(...arguments);
        /**
         * 是否设置数据代理,默认为true
         * 监听数据变化并且自动保存
         * 最低监听数组变化，当数组内容是对象时不会监听该对象。
         */
        this._ifSetDataProxy = true;
        /** 数据设置监听，当数据设置时会执行的监听 */
        this._dataSetMonitor = [];
        /**
         * 是否对比数据
         * 默认为true，如果为真当为线上模式时会生成一个加密的对比数据，防止用户改动本地数据
         */
        this._ifDifferData = true;
        /** 保存执行队列 */
        this.m_saveToDiskQueue = 0;
    }
    //获取保存数据的名字
    get saveName() {
        return MainConfig_1.default.GameName + '->' + this._saveName + '->' + MainConfig_1.default.versions;
    }
    // 获取对比数据的保存名字
    get differName() {
        //
        return this.encrypt(this.saveName + '__verify');
    }
    /** 获取保存数据 */
    get saveData() {
        return this._saveData;
    }
    /**
     * 获取原始数据，不能更改
     * 使用这个数据来设置监听数据的层级和位置
     */
    get rootData() {
        return this._rootData;
    }
    /**
     * 添加数据设置监听
     * @param _this 执行域
     * @param _dataSetMonitor 执行方法
     * @param _rootData 受监听的原始对象，不设置则监听全部内容，只能在this.rootData找属性进行监听
     * @param _key 受监听的对象的属性，可以直接是个字符串
     */
    addDataSetMonitor(_this, _dataSetMonitor, _rootData, _key) {
        //判断是否设置了数据代理
        if (!this._ifSetDataProxy) {
            console.warn(...ConsoleEx_1.default.packWarn('没有设置数据代理，数据被设置时不会被监听！'));
        }
        else {
            //判断是否是对象属性
            if (_key && typeof _key == 'object') {
                //判断对象和键值是否匹配
                if (_key[RootLocalStorageProxy.$RootParentDataKey] != _rootData) {
                    console.error(...ConsoleEx_1.default.packError('监听的对象属性不存在该对象属性列表中！'));
                }
                _key = _key[RootLocalStorageProxy.$RootDataCruxKey];
            }
            //添加到监听列表
            this._dataSetMonitor.push({
                _this: _this,
                _f: _dataSetMonitor,
                _rootData: _rootData,
                _key: _key,
            });
        }
    }
    /**
     * 删除设置数据监听
     */
    offDataSetMonitor(_this, _dataSetMonitor) {
        this._dataSetMonitor = this._dataSetMonitor.filter((item) => {
            return item._this !== _this && item._f !== _dataSetMonitor;
        });
    }
    /**
     * 删除全部设置数据监听
     */
    offAllDataSetMonitor(_this) {
        this._dataSetMonitor = this._dataSetMonitor.filter((item) => {
            return item._this !== _this;
        });
    }
    /**
     * 初始化数据
     */
    InitData() {
        this._saveData = this._ReadFromFile();
        //保存原始数据
        this._rootData = this._saveData;
        //判断是否设置数据代理
        if (this._ifSetDataProxy) {
            this._saveData = this.getProxyData(this._saveData);
        }
        //添加到调试当中
        DataDebug_1.default.instance.addItem(this._saveName, this);
        //
        this._initData();
    }
    /**
     * 获取一个代理对象
     * @param _obj 需要代理的对象
     */
    getProxyData(_obj) {
        //防止原始对象被污染
        let _rootObj = {};
        //
        if (typeof _obj == 'object' && _obj) {
            //不监听数组中的对象
            if (!Array.prototype.isPrototypeOf(_obj)) {
                //遍历对象属性
                for (let _i in _obj) {
                    //注意 null 也为object
                    if (typeof _obj[_i] == 'object' && _obj[_i]) {
                        _rootObj[_i] = this.getProxyData(_obj[_i]);
                    }
                    else {
                        //
                        _rootObj[_i] = _obj[_i];
                        //包装原始对象值类型
                        _obj[_i] = {
                            //关键键值
                            [RootLocalStorageProxy.$RootDataCruxKey]: Symbol('$key'),
                            //父对象
                            [RootLocalStorageProxy.$RootParentDataKey]: _obj,
                            //本身值
                            value: _obj[_i],
                        };
                    }
                }
            }
            else {
                _rootObj = _obj;
            }
        }
        else {
            return _obj;
        }
        //设置原始对象
        _rootObj[RootLocalStorageProxy.$RootObjectKey] = _obj;
        // console.log('设置原始对象', _rootObj);
        //返回代理对象
        return new Proxy(_rootObj, {
            set: (target, key, value) => {
                this.proxyDataSet(target, key, value);
                return true;
            },
        });
    }
    /** 代理数据被设置时调用 */
    proxyDataSet(target, key, value) {
        //判断是不是原始数据节点
        if (key == RootLocalStorageProxy.$RootObjectKey) {
            console.warn('试图更改数据的原始对象，被阻止', target, key, value);
            return;
        }
        //原来的值
        let _rotValue = target[key];
        //如果赋的值是一个对象则继续监听
        if (typeof value == 'object' && value && !Array.prototype.isPrototypeOf(target)) {
            target[key] = this.getProxyData(value);
        }
        else {
            target[key] = value;
            //判断是不是数组长度改变，这个不用被监听
            if (Array.prototype.isPrototypeOf(target) && key == 'length') {
                return;
            }
        }
        //执行数据监听
        for (let item of this._dataSetMonitor) {
            if (item._rootData && item._rootData != target[RootLocalStorageProxy.$RootObjectKey]) {
                continue;
            }
            if (typeof item._key != 'undefined') {
                if (typeof item._key == 'symbol') {
                    if (item._key != target[RootLocalStorageProxy.$RootObjectKey][key][RootLocalStorageProxy.$RootDataCruxKey]) {
                        continue;
                    }
                }
                else if (item._key != key) {
                    continue;
                }
            }
            //
            item._f.call(item._this, target, key, value, _rotValue, target[RootLocalStorageProxy.$RootObjectKey]);
        }
        //保存数据
        this.SaveToDisk(this._saveData);
    }
    /** 初始化完成，继承使用 */
    _initData() { }
    /**
     * 保存数据到本地
     * @param _saveData 数据
     * @param _ifCl 是否限流
     */
    SaveToDisk(_saveData, _ifCl = true) {
        //判断是否限流
        if (!_ifCl) {
            this._SaveToDisk(_saveData);
        }
        else {
            this.m_saveToDiskQueue++;
            //当前帧末尾执行
            setTimeout(() => {
                this.m_saveToDiskQueue--;
                if (this.m_saveToDiskQueue == 0) {
                    //限流，每一帧只保存一次数据
                    this._SaveToDisk(_saveData);
                }
            }, 0);
        }
    }
    //保存数据到本地
    _SaveToDisk(_saveData) {
        // console.log('保存数据');
        //序列化
        let json = JSON.stringify(_saveData);
        Laya.LocalStorage.setJSON(this.saveName, json);
        //判断是否是线上环境
        if (MainConfig_1.default.OnLine && this._ifDifferData) {
            //获取对比数据
            let _differJson = this.getDifferData(json);
            //保存对比数据
            Laya.LocalStorage.setJSON(this.differName, _differJson);
        }
    }
    //从本地获取数据
    _ReadFromFile() {
        let readStr = Laya.LocalStorage.getJSON(this.saveName);
        //判断是否是线上环境
        if (MainConfig_1.default.OnLine && this._ifDifferData) {
            //对比数据
            let _differ = Laya.LocalStorage.getJSON(this.differName);
            if (this.getDifferData(readStr) != _differ) {
                return this._saveNewData();
            }
        }
        let _saveData = this.getNewData();
        //判断数据是否被篡改
        try {
            if (!StringUtils_1.default.IsNullOrEmpty(readStr)) {
                let jsonData = JSON.parse(readStr);
                for (let key in _saveData) {
                    _saveData[key] = jsonData[key];
                }
            }
            else {
                return this._saveNewData();
            }
        }
        catch (_a) {
            return this._saveNewData();
        }
        //
        return _saveData;
    }
    //获取并保存一个新数据
    _saveNewData() {
        let _saveData = this.getNewData();
        //保存数据，马上保存，不然后续这个数据会被修改
        this.SaveToDisk(_saveData, false);
        //
        return _saveData;
    }
    //处理对比数据
    getDifferData(_string) {
        //判断是否为空
        if (StringUtils_1.default.IsNullOrEmpty(_string))
            return '';
        //加密
        return this.encrypt(_string);
    }
    //加密
    encrypt(_string) {
        let _encryptStr = 'LayaMiniGame-(-' + _string + '-)-ModifiedWithout-' + this.saveName;
        //判断能否使用md5
        if (Md5_1.default.ifUse) {
            return Md5_1.default.hashStr(_encryptStr).toString();
        }
        else {
            //使用base64
            return Base64_1.default.encode(_encryptStr);
        }
    }
}
exports.default = RootLocalStorageProxy;
/**
 * 全局唯一属性，代理数据根数据
 * 根据这个可以找到代理数据的原始数据然后和原始数据对比就能判断数据代理层级
 */
RootLocalStorageProxy.$RootObjectKey = Symbol('$RootObjectKey');
/** 根数据关键键值 */
RootLocalStorageProxy.$RootDataCruxKey = Symbol('$RootDataCruxKey');
/** 根数据父节点 */
RootLocalStorageProxy.$RootParentDataKey = Symbol('$RootParentDataKey');


/***/ }),

/***/ "./src/aTGame/Data/RootShortProxy.ts":
/*!*******************************************!*\
  !*** ./src/aTGame/Data/RootShortProxy.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootDataManger_1 = __webpack_require__(/*! ./RootDataManger */ "./src/aTGame/Data/RootDataManger.ts");
/**
 * 临时数据代理基类
 * 泛型为数据类型
 */
class RootShortProxy extends RootDataManger_1.default {
}
exports.default = RootShortProxy;


/***/ }),

/***/ "./src/aTGame/Debug/DataDebug.ts":
/*!***************************************!*\
  !*** ./src/aTGame/Debug/DataDebug.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootDebug_1 = __webpack_require__(/*! ./RootDebug */ "./src/aTGame/Debug/RootDebug.ts");
/**
 * 数据调试类
 */
class DataDebug extends RootDebug_1.default {
    //
    constructor() {
        super();
        this._name = 'Data';
    }
    /** 单例对象 */
    static get instance() {
        if (this._instance) {
            return this._instance;
        }
        else {
            this._instance = new DataDebug();
            return this._instance;
        }
    }
    //开启调试
    _startDebug() {
        console.log('开启数据调试');
    }
}
exports.default = DataDebug;


/***/ }),

/***/ "./src/aTGame/Debug/DebugWindowCommunication.ts":
/*!******************************************************!*\
  !*** ./src/aTGame/Debug/DebugWindowCommunication.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 窗口通信
 */
class DebugWindowCommunication {
    constructor() {
        /** 消息列表 */
        this.m_mesList = [];
    }
    /**
     * 添加一个消息
     * @param _this 执行域
     * @param _key 关键字
     * @param _f 回调方法
     */
    onMes(_this, _key, _f) {
        this.m_mesList.push({
            this: _this,
            key: _key,
            f: _f,
        });
    }
    /**
     * 发送一个消息
     */
    eventMes(_key, ..._data) {
        //遍历整个消息列表
        this.m_mesList.forEach((item) => {
            if (item.key == _key) {
                item.f.call(item.this, ..._data);
            }
        });
    }
    /**
     * 删除消息
     * @param _key 键值
     */
    removeMes(_this, _key) {
        this.m_mesList = this.m_mesList.filter((item) => {
            if (typeof _key != "undefined") {
                return item.this != _this && item.key != _key;
            }
            else {
                return item.this != _this;
            }
        });
    }
}
exports.default = DebugWindowCommunication;


/***/ }),

/***/ "./src/aTGame/Debug/EnvironmentDebug.ts":
/*!**********************************************!*\
  !*** ./src/aTGame/Debug/EnvironmentDebug.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootDebug_1 = __webpack_require__(/*! ./RootDebug */ "./src/aTGame/Debug/RootDebug.ts");
/**
 * 环境调试对象
 */
class EnvironmentDebug extends RootDebug_1.default {
    //
    constructor() {
        super();
        this._name = 'Environment';
    }
    /** 单例对象 */
    static get instance() {
        if (this._instance) {
            return this._instance;
        }
        else {
            this._instance = new EnvironmentDebug();
            return this._instance;
        }
    }
    //开启调试
    _startDebug() {
        console.log('开启环境调试');
    }
}
exports.default = EnvironmentDebug;


/***/ }),

/***/ "./src/aTGame/Debug/MainDebug.ts":
/*!***************************************!*\
  !*** ./src/aTGame/Debug/MainDebug.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const DataDebug_1 = __webpack_require__(/*! ./DataDebug */ "./src/aTGame/Debug/DataDebug.ts");
const EnvironmentDebug_1 = __webpack_require__(/*! ./EnvironmentDebug */ "./src/aTGame/Debug/EnvironmentDebug.ts");
const RootDebug_1 = __webpack_require__(/*! ./RootDebug */ "./src/aTGame/Debug/RootDebug.ts");
/**
 * 调试类入口
 */
class MainDebug extends RootDebug_1.default {
    constructor() {
        super(...arguments);
        this._name = 'Main';
    }
    /** 开启调试 */
    _startDebug() {
        console.log('开启主调试');
        //环境调试类
        EnvironmentDebug_1.default.instance.startDebug();
        //数据调试
        DataDebug_1.default.instance.startDebug();
    }
}
exports.default = MainDebug;


/***/ }),

/***/ "./src/aTGame/Debug/RootDebug.ts":
/*!***************************************!*\
  !*** ./src/aTGame/Debug/RootDebug.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const MainConfig_1 = __webpack_require__(/*! ../../bTGameConfig/MainConfig */ "./src/bTGameConfig/MainConfig.ts");
const MainGameConfig_1 = __webpack_require__(/*! ../../bTGameConfig/MainGameConfig */ "./src/bTGameConfig/MainGameConfig.ts");
const ConsoleEx_1 = __webpack_require__(/*! ../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const DebugWindowCommunication_1 = __webpack_require__(/*! ./DebugWindowCommunication */ "./src/aTGame/Debug/DebugWindowCommunication.ts");
const debugHTML_1 = __webpack_require__(/*! ./html/debugHTML */ "./src/aTGame/Debug/html/debugHTML.ts");
const EDebugWindow_1 = __webpack_require__(/*! ./mes/EDebugWindow */ "./src/aTGame/Debug/mes/EDebugWindow.ts");
/**
 * 根调试类，所有调试类必须由此继承
 */
class RootDebug {
    constructor() {
        /** 是否开始调试 */
        this._ifStart = false;
    }
    /**
     * 添加一个调试对象
     * @param _key key
     * @param _item 该对象
     */
    static addItem(_key, _item) {
        let _rootKey = this.prefix + ':' + _key;
        if (this[_rootKey]) {
            console.warn(...ConsoleEx_1.default.packWarn('该调试对象已经存在了，将会被第二个覆盖', _rootKey));
        }
        this[_rootKey] = _item;
    }
    /** 开启调试 */
    startDebug() {
        this._ifStart = true;
        //注入到全局中
        if (window[RootDebug.prefix][this._name]) {
            console.warn(...ConsoleEx_1.default.packWarn('有一个调试对象名字重名了，将会被第二个覆盖', this._name));
        }
        window[RootDebug.prefix][this._name] = this;
        //
        this._startDebug();
    }
    /**
     * 添加一个调试对象
     * @param _key key
     * @param _item 该对象
     */
    addItem(_key, _item) {
        //判断是否开启了调试
        if (!this._ifStart) {
            return;
        }
        //
        if (this[_key]) {
            console.warn(...ConsoleEx_1.default.packWarn('该调试对象已经存在了，将会被第二个覆盖', this._name, '-', _key));
        }
        this[_key] = _item;
    }
    /** 开启调试回调 */
    _startDebug() { }
    /**
     * 打开一个新窗口调试
     */
    static openWindowDebug() {
        let _win = window.open('', MainConfig_1.default.GameName);
        //把新窗口注入到当前win
        window[EDebugWindow_1.EDebugWindow.DebugWindow] = _win;
        //写入首页
        let _url = window.location.href.replace('bin/index.html', 'DebugWindow/dist/');
        _win.document.getElementsByTagName('html')[0].innerHTML = debugHTML_1.default.replace(/"\//g, '"' + _url);
        //
        console.warn(...ConsoleEx_1.default.packWarn('打开调式窗口。'));
        //提取JavaScript标签并且重新添加
        let _HTMLCollection = _win.document.getElementsByTagName('body')[0].getElementsByTagName('script');
        //注入消息沟通对象
        _win[EDebugWindow_1.EDebugWindow.Mes] = new DebugWindowCommunication_1.default();
        //
        let _scriptSrc = [];
        for (let item of _HTMLCollection) {
            _scriptSrc.push(item.src);
        }
        ;
        _scriptSrc.forEach((item) => {
            let script = _win.document.createElement("script");
            script.async = false;
            script.src = item;
            _win.document.body.appendChild(script);
        });
    }
    /**
     * 向调试页面发送一个消息
     */
    static fendDebugWindow(_mes, ..._data) {
        window[EDebugWindow_1.EDebugWindow.DebugWindow][EDebugWindow_1.EDebugWindow.Mes].eventMes(_mes, ..._data);
    }
}
exports.default = RootDebug;
/** 前缀 */
RootDebug.prefix = '$Debug';
//注册全局调试对象
window[RootDebug.prefix] = {};
//判断是否开启了调试模式
if (MainGameConfig_1.default.ifDebug) {
    console.warn(...ConsoleEx_1.default.packWarn('开启调试模式，通过', RootDebug.prefix, '访问'));
}


/***/ }),

/***/ "./src/aTGame/Debug/html/debugHTML.ts":
/*!********************************************!*\
  !*** ./src/aTGame/Debug/html/debugHTML.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * ! 自动生成，请不要修改
 */
const html = `<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width,initial-scale=1"><link rel="icon" href="/favicon.ico"><title>DebugWindow</title><link href="/css/app.d6b301ef.css" rel="preload" as="style"><link href="/css/chunk-vendors.84bb20f7.css" rel="preload" as="style"><link href="/js/app.2e279fb7.js" rel="preload" as="script"><link href="/js/chunk-vendors.ee9c6a8c.js" rel="preload" as="script"><link href="/css/chunk-vendors.84bb20f7.css" rel="stylesheet"><link href="/css/app.d6b301ef.css" rel="stylesheet"></head><body><noscript><strong>We're sorry but DebugWindow doesn't work properly without JavaScript enabled. Please enable it to continue.</strong></noscript><div id="app"></div><script src="/js/chunk-vendors.ee9c6a8c.js"></script><script src="/js/app.2e279fb7.js"></script></body></html>`;
//
exports.default = html;


/***/ }),

/***/ "./src/aTGame/Debug/mes/EDebugWindow.ts":
/*!**********************************************!*\
  !*** ./src/aTGame/Debug/mes/EDebugWindow.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EDebugWindow = void 0;
/**
 * 调试窗口键值枚举类
 */
var EDebugWindow;
(function (EDebugWindow) {
    /** 窗口实例键值 */
    EDebugWindow["DebugWindow"] = "$DebugWindow";
    /** 消息实例键值 */
    EDebugWindow["Mes"] = "$Mes";
})(EDebugWindow = exports.EDebugWindow || (exports.EDebugWindow = {}));


/***/ }),

/***/ "./src/aTGame/Debug/mes/EDebugWindowEvent.ts":
/*!***************************************************!*\
  !*** ./src/aTGame/Debug/mes/EDebugWindowEvent.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EDebugWindowEvent = void 0;
/**
 * 调试窗口事件类
 */
var EDebugWindowEvent;
(function (EDebugWindowEvent) {
    /** 环境设置改变事件 */
    EDebugWindowEvent["SetEnvironment"] = "setEnvironment";
})(EDebugWindowEvent = exports.EDebugWindowEvent || (exports.EDebugWindowEvent = {}));


/***/ }),

/***/ "./src/aTGame/Main/RootGameLoad.ts":
/*!*****************************************!*\
  !*** ./src/aTGame/Main/RootGameLoad.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ConfigManager_1 = __webpack_require__(/*! ../Config/ConfigManager */ "./src/aTGame/Config/ConfigManager.ts");
const SceneManager_1 = __webpack_require__(/*! ../3D/SceneManager */ "./src/aTGame/3D/SceneManager.ts");
const FGuiRootManager_1 = __webpack_require__(/*! ../UI/FGUI/FGuiRootManager */ "./src/aTGame/UI/FGUI/FGuiRootManager.ts");
const Global3D_1 = __webpack_require__(/*! ../3D/Global3D */ "./src/aTGame/3D/Global3D.ts");
const EssentialResUrls_1 = __webpack_require__(/*! ../Res/EssentialResUrls */ "./src/aTGame/Res/EssentialResUrls.ts");
const CommonDataProxy_1 = __webpack_require__(/*! ../Commom/CommonDataProxy */ "./src/aTGame/Commom/CommonDataProxy.ts");
const ELevelSceneName_1 = __webpack_require__(/*! ../../cFrameBridge/Config/ELevelSceneName */ "./src/cFrameBridge/Config/ELevelSceneName.ts");
/**
 * 游戏进入之前的加载操作基类
 * 加载分包
 * 加载顺序
 * 白屏显示UI包
 * 游戏初始化加载资源UI包
 * 配置文件
 * 其他UI包
 * 其他游戏资源
 */
class RootGameLoad {
    constructor() {
        /** 需要加载的其他UI包 */
        this._needLoadOtherUIPack = [];
        /**
         * 资源加载权重
         */
        this._loadProgressWeight = {
            config: 1,
            gameRes: 5,
            otherUI: 3,
        };
        //配置文件加载进度
        this._configProgress = 0;
        //其他UI加载进度
        this._otherUIProgress = 0;
        //其他游戏资源加载进度
        this._resProgress = 0;
    }
    //总加载进度
    get loadProgress() {
        //总配比
        let totalWeight = 0;
        for (let i in this._loadProgressWeight) {
            totalWeight += this._loadProgressWeight[i];
        }
        //加载配比
        let loadWeight = this._loadProgressWeight.config * this._configProgress //配置文件
            + this._loadProgressWeight.gameRes * this._resProgress //游戏资源
            + this._loadProgressWeight.otherUI * this._otherUIProgress; //其他UI
        //返回总进度
        return (loadWeight / totalWeight) * 100;
    }
    /**
     * 开始
     */
    Enter(_this, _beforeHandler, _backHandler) {
        //保存回调
        this.m_handlerThis = _this;
        this.m_beforeHandler = _beforeHandler;
        this.m_backHandler = _backHandler;
        //
        this.Init();
    }
    //初始化之前，可以返回一个promise(使用时重写)
    _Init() {
        return;
    }
    // 初始化
    Init() {
        //判断初始化函数有没有promise返回值
        let _promise = this._Init();
        let _f = () => {
            //开始初始化白屏页面
            this.initEmptyScreen();
        };
        if (_promise) {
            //初始化之前
            _promise.then(() => {
                _f();
            });
        }
        else {
            _f();
        }
    }
    //初始化空白页面
    initEmptyScreen() {
        //初始化场景管理器
        SceneManager_1.default.instance.init();
        //初始化FGUI
        FGuiRootManager_1.default.Init();
        //捆绑所有UI
        this.OnBindUI();
        //获取空白页面资源地址列表
        let loadUrl = [];
        this._initEmptyScreen.PushUrl(loadUrl);
        //判断是否有资源
        if (loadUrl.length == 0) {
            this.InitUI();
            return;
        }
        //加载初始化UI包
        Laya.loader.load(loadUrl, Laya.Handler.create(this, this.InitUI));
    }
    //初始化UI
    InitUI() {
        //
        this._initEmptyScreen.AddPackage();
        //回调，打开空白页面
        this._OnInitEmptyScreen();
        //获取需要加载的初始化UI路径列表
        let _f = () => {
            let loadUrl = [];
            this._initUiPack.PushUrl(loadUrl);
            //判断是否有资源
            if (loadUrl.length == 0) {
                this.OnInitUILoaded();
                return;
            }
            //加载初始化UI包
            Laya.loader.load(loadUrl, Laya.Handler.create(this, this.OnInitUILoaded));
        };
        //判断是否有加载之前处理函数
        if (this.m_beforeHandler) {
            this.m_beforeHandler.call(this.m_handlerThis).then(() => {
                _f();
            });
        }
        else {
            _f();
        }
    }
    //初始化UI包加载完成
    OnInitUILoaded() {
        //
        this._initUiPack.AddPackage();
        // 回调 (打开初始UI设置进度条)
        this._OnInitUILoaded();
        //
        this.onLoading(this.loadProgress);
        // 加载配置文件
        this.OnConfigLoaded();
    }
    //加载配置文件
    OnConfigLoaded() {
        //设置要添加的配置文件
        this.OnSetLoadConfig();
        //添加其他必要配置文件路径列表
        let _levelSceneURLs = [];
        for (let _i in ELevelSceneName_1.ELevelSceneName) {
            if (!ELevelSceneName_1.ELevelSceneName[_i]) {
                continue;
            }
            _levelSceneURLs.push(EssentialResUrls_1.default.levelConfigURL(ELevelSceneName_1.ELevelSceneName[_i]));
        }
        ConfigManager_1.ConfigManager.AddExtraConfig(_levelSceneURLs);
        //
        if (ConfigManager_1.ConfigManager.needLoadCount <= 0) {
            this._OnConfigProgress(1);
            this._OnConfigLoaded();
            return;
        }
        //使用的是Laya.loader.create方法加载
        ConfigManager_1.ConfigManager.StartLoad(Laya.Handler.create(this, this._OnConfigLoaded), Laya.Handler.create(this, this._OnConfigProgress, null, false));
    }
    //配置文件加载进度
    _OnConfigProgress(value) {
        this._configProgress = value;
        //
        this.onLoading(this.loadProgress);
    }
    //加载配置文件完成
    _OnConfigLoaded() {
        //设置配置文件
        SceneManager_1.default.instance.initConfig();
        //获取其他需要加载的UI文件路径列表
        let uiLoadData = [];
        for (let i = 0; i < this._needLoadOtherUIPack.length; ++i) {
            this._needLoadOtherUIPack[i].PushUrl(uiLoadData);
        }
        //判断是否有资源
        if (uiLoadData.length == 0) {
            this._OnOtherUIProgress(1);
            this._OnOtherUILoaded();
            return;
        }
        //加载
        Laya.loader.load(uiLoadData, Laya.Handler.create(this, this._OnOtherUILoaded), Laya.Handler.create(this, this._OnOtherUIProgress, null, false));
    }
    //其他UI加载进度
    _OnOtherUIProgress(value) {
        this._otherUIProgress = value;
        //
        this.onLoading(this.loadProgress);
    }
    //其他UI加载完成
    _OnOtherUILoaded() {
        for (let i = 0; i < this._needLoadOtherUIPack.length; ++i) {
            this._needLoadOtherUIPack[i].AddPackage();
        }
        // 获取需要加载的游戏资源路径列表
        let loadUrls = [];
        this.OnGameResPrepared(loadUrls);
        //添加必要的资源
        loadUrls.push(...EssentialResUrls_1.default.EssentialOtherResUrl());
        //获取需要预加载的场景资源
        SceneManager_1.default.instance.Preload(loadUrls);
        //判断是否有资源
        if (loadUrls.length == 0) {
            this._OnResProgress(1);
            this._OnResLoaded();
            return;
        }
        //加载
        Laya.loader.create(loadUrls, Laya.Handler.create(this, this._OnResLoaded), Laya.Handler.create(this, this._OnResProgress, null, false));
    }
    //游戏其他资源加载进度
    _OnResProgress(value) {
        this._resProgress = value;
        //
        this.onLoading(this.loadProgress);
    }
    //游戏其他资源加载完成
    //# 所有内容加载完成
    _OnResLoaded() {
        //初始化游戏场景
        Global3D_1.default.InitAll();
        //注册数据
        this.loginCommonData();
        this.loginData();
        //处理回调
        if (this.m_backHandler) {
            this.m_backHandler.call(this.m_handlerThis).then(() => {
                //游戏加载完毕
                this.OnComplete();
            });
        }
        else {
            //游戏加载完毕
            this.OnComplete();
        }
    }
    //注册公共数据
    loginCommonData() {
        CommonDataProxy_1.default.instance.InitData();
    }
    //! //
    // * -----------------------------生命周期函数---------------------------- * //
    //! //
    /**
     * 注册UI
     */
    OnBindUI() { }
    /**
     * 注册表格
     */
    OnSetLoadConfig() { }
    /**
     * 加载游戏资源
     * @param urls 注入的目标列表
     */
    OnGameResPrepared(urls) { }
    /**
     * 空白页面UI初始化完成 (在这里设置空白页面)
     */
    _OnInitEmptyScreen() { }
    /**
     * 初始化UI加载完成 (在这里设置进度条)
     */
    _OnInitUILoaded() { }
    /**
     * 加载进度
     * @param _n 0-100
     */
    onLoading(_n) { }
    /**
     * 注册数据
     */
    loginData() { }
    /**
     * 全部加载完成
     */
    OnComplete() { }
}
exports.default = RootGameLoad;


/***/ }),

/***/ "./src/aTGame/Physics/oimo/OimoManager.ts":
/*!************************************************!*\
  !*** ./src/aTGame/Physics/oimo/OimoManager.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OimoManager = void 0;
const Dictionary_1 = __webpack_require__(/*! ../../Utils/Dictionary */ "./src/aTGame/Utils/Dictionary.ts");
const OimoConst_1 = __webpack_require__(/*! ../../../cFrameBridge/Physics/OimoConst */ "./src/cFrameBridge/Physics/OimoConst.ts");
/**
 * OIMO物理管理器
 */
class OimoManager {
    //
    constructor() {
        this._oimoRigDic = new Dictionary_1.default();
        this._transformDic = new Dictionary_1.default();
        this._oimoOffset = new Dictionary_1.default();
        this._oimoRigDicR = new Dictionary_1.default();
        this._transformDicR = new Dictionary_1.default();
        this._oimoOffsetR = new Dictionary_1.default();
        this._tempOimoV3 = new OIMO.Vec3;
        this._tempOimoQuat = new OIMO.Quat;
        this._tempQuaternion = new Laya.Quaternion();
        this._init();
    }
    get oimoWorld() {
        return this._oimoWorld;
    }
    static get instance() {
        if (!OimoManager._instance) {
            OimoManager._instance = new OimoManager();
        }
        return OimoManager._instance;
    }
    _init() {
        this._oimoWorld = this.CreateWolrd();
        window['oimoWorld'] = this._oimoWorld;
    }
    // 建造场景
    CreateWolrd() {
        let wolrd = new OIMO.World({
            timestep: OimoConst_1.default.timestep,
            iterations: OimoConst_1.default.iterations,
            broadphase: OimoConst_1.default.broadphase,
            worldscale: OimoConst_1.default.worldscale,
            random: OimoConst_1.default.random,
            info: OimoConst_1.default.info,
            gravity: OimoConst_1.default.gravity,
        });
        return wolrd;
    }
    _createRigBox(world, pos, eulerRot, size, isMove, type = 'box') {
        let addRig = world.add({
            type: type,
            size: [size.x, size.y, size.z],
            pos: [pos.x, pos.y, pos.z],
            rot: [eulerRot.x, eulerRot.y, eulerRot.z],
            move: isMove,
            density: 10,
            // friction: 0.89,
            // restitution: 0.01,
            belongsTo: 1,
            collidesWith: 0xffffffff // The bits of the collision groups with which the shape collides.
        });
        return addRig;
    }
    /**
     * 创建一个物理刚体
     * @param ts
     * @param shapes
     * @param isMove
     * @param update
     * @param reverseUpdate
     * @param isKinematic
     * @param density
     * @param belongsTo
     * @param collidesWith
     */
    CreateCompoundRig(ts, shapes, isMove = true, update = true, reverseUpdate = false, isKinematic = false, density = 10, belongsTo = 1, collidesWith = 0xffffffff) {
        var type = [];
        var posShape = [];
        var rotShape = [];
        var size = [];
        for (var i = 0; i < shapes.length; i++) {
            let shape = shapes[i];
            type.push(shape.type);
            posShape.push(shape.pos.x, shape.pos.y, shape.pos.z);
            rotShape.push(shape.eular.x, shape.eular.y, shape.eular.z);
            size.push(shape.size.x, shape.size.y, shape.size.z);
        }
        let rig = this.oimoWorld.add({
            type: type,
            pos: [ts.position.x, ts.position.y, ts.position.z],
            rot: [ts.rotationEuler.x, ts.rotationEuler.y, ts.rotationEuler.z],
            posShape: posShape,
            rotShape: rotShape,
            size: size,
            move: isMove,
            density: density,
            friction: 0.999,
            restitution: 0.1,
            isKinematic: isKinematic,
            belongsTo: belongsTo,
            collidesWith: collidesWith,
        });
        //加一个不变的id
        rig.id = OimoManager.m_rigId;
        OimoManager.m_rigId++;
        //
        if (update) {
            this._oimoRigDic.set(rig.id, rig);
            this._transformDic.set(rig.id, ts);
            this._oimoOffset.set(rig.id, new Laya.Vector3());
        }
        if (reverseUpdate) {
            this._oimoRigDicR.set(rig.id, rig);
            this._transformDicR.set(rig.id, ts);
            this._oimoOffsetR.set(rig.id, new Laya.Vector3());
        }
        return rig;
    }
    /**
     * 设置一个刚体的各个参数
     * @param rig
     * @param belongsTo
     * @param collidesWith
     * @param restitution
     * @param friction
     */
    static SetCollideData(rig, belongsTo, collidesWith, restitution, friction) {
        for (var shape = rig.shapes; shape !== null; shape = shape.next) {
            if (belongsTo != null)
                shape.belongsTo = belongsTo;
            if (collidesWith != null)
                shape.collidesWith = collidesWith;
            if (restitution != null)
                shape.restitution = restitution;
            if (friction != null)
                shape.friction = friction;
        }
    }
    /**
     * 设置是否是  静止物体
     * @param rig
     * @param can
     */
    setCanMove(rig, can) {
        if (can) {
            rig.setupMass(OIMO.BODY_DYNAMIC, false);
        }
        else {
            rig.setupMass(OIMO.BODY_STATIC, false);
        }
    }
    clearRig() {
        this._oimoWorld.clear();
        this._oimoRigDic.clear();
        this._transformDic.clear();
        this._oimoOffset.clear();
        this._oimoRigDicR.clear();
        this._transformDicR.clear();
        this._oimoOffsetR.clear();
    }
    /**
     * 添加刚体
     * @param rig
     * @param world
     * @param stopUpdate 是否停止更新
     */
    addRig(rig, world = this._oimoWorld) {
        if (rig) {
            world.addRigidBody(rig);
        }
    }
    /**
     * 删除刚体
     * @param rig
     * @param world
     * @param offList # 如果为true的话就是彻底删除，再添加也没有用了
     */
    RemoveRig(rig, world = this._oimoWorld, offList = false) {
        if (rig) {
            if (offList) {
                this._oimoRigDic.remove(rig.id);
                this._transformDic.remove(rig.id);
                this._oimoOffset.remove(rig.id);
                this._oimoRigDicR.remove(rig.id);
                this._transformDicR.remove(rig.id);
                this._oimoOffsetR.remove(rig.id);
            }
            world.removeRigidBody(rig);
        }
    }
    /**
     * 添加关节
     * @param type
     * @param rig1
     * @param rig2
     * @param pos1
     * @param pos2
     * @param spring
     */
    AddJoint(type, rig1, rig2, pos1, pos2, spring) {
        return this.oimoWorld.add({
            type: type,
            body1: rig1,
            body2: rig2,
            pos1: pos1 != null ? [pos1.x, pos1.y, pos1.z] : pos1,
            pos2: pos2 != null ? [pos2.x, pos2.y, pos2.z] : pos2,
            spring: spring,
        });
    }
    /**
     * 删除一个关节
     * @param joint
     */
    RemoveJoint(joint) {
        this.oimoWorld.removeJoint(joint);
    }
    updateAllTrans() {
        let keys = this._oimoRigDic.keys();
        keys.forEach((key) => {
            this.UpdateTrans(this._transformDic.get(key), this._oimoRigDic.get(key), this._oimoOffset.get(key));
        });
    }
    /**
     * 运动物体的  反向赋值
     */
    updateAllTransReverse() {
        let keys = this._oimoRigDicR.keys();
        keys.forEach((key) => {
            this.UpdateTransReverse(this._transformDicR.get(key), this._oimoRigDicR.get(key));
        });
    }
    UpdateTransReverse(transform, rig) {
        if (!transform || !rig || !rig.parent)
            return;
        let pos = transform.position;
        this._tempOimoV3.set(pos.x, pos.y, pos.z);
        rig.awake();
        rig.setPosition(this._tempOimoV3);
        let rotate = transform.rotation;
        this._tempOimoQuat.set(rotate.x, rotate.y, rotate.z, rotate.w);
        rig.setQuaternion(this._tempOimoQuat);
    }
    UpdateTrans(transform, rig, posOffset) {
        if (!transform || !rig || !rig.parent)
            return;
        let getPos = rig.getPosition();
        transform.position.x = getPos.x;
        transform.position.y = getPos.y;
        transform.position.z = getPos.z;
        if (posOffset && !this.isZero(posOffset)) {
            // LIUTODO  可以规避的计算
            let offset = posOffset.clone();
            Laya.Quaternion.createFromYawPitchRoll(this.deg2rad(transform.rotationEuler.y), this.deg2rad(transform.rotationEuler.x), this.deg2rad(transform.rotationEuler.z), this._tempQuaternion);
            Laya.Vector3.transformQuat(offset, this._tempQuaternion, offset);
            Laya.Vector3.subtract(transform.position, offset, transform.position);
        }
        transform.position = transform.position;
        let getRot = rig.getQuaternion();
        transform.rotation.x = getRot.x;
        transform.rotation.y = getRot.y;
        transform.rotation.z = getRot.z;
        transform.rotation.w = getRot.w;
        transform.rotation = transform.rotation;
    }
    isZero(pos) {
        return Laya.MathUtils3D.isZero(pos.x) && Laya.MathUtils3D.isZero(pos.y) && Laya.MathUtils3D.isZero(pos.z);
    }
    deg2rad(p_y) {
        return p_y * Math.PI / 180.0;
    }
    GetRig(name) {
        return this._oimoRigDic.get(name);
    }
}
exports.OimoManager = OimoManager;
//刚体递增id
OimoManager.m_rigId = 0;


/***/ }),

/***/ "./src/aTGame/Physics/oimo/OimoSystem.ts":
/*!***********************************************!*\
  !*** ./src/aTGame/Physics/oimo/OimoSystem.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OimoSystem = void 0;
const OimoManager_1 = __webpack_require__(/*! ./OimoManager */ "./src/aTGame/Physics/oimo/OimoManager.ts");
/**
 * OIMO物理系统
 */
class OimoSystem extends Laya.Script3D {
    onUpdate() {
        OimoManager_1.OimoManager.instance.oimoWorld.timeStep = Laya.timer.delta / 1000;
        OimoManager_1.OimoManager.instance.oimoWorld.step();
        OimoManager_1.OimoManager.instance.updateAllTrans();
        OimoManager_1.OimoManager.instance.updateAllTransReverse();
    }
}
exports.OimoSystem = OimoSystem;


/***/ }),

/***/ "./src/aTGame/Platform/Common/PlatformCommonEventId.ts":
/*!*************************************************************!*\
  !*** ./src/aTGame/Platform/Common/PlatformCommonEventId.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PlatformCommonEvent = void 0;
/**
 * 平台公共事件
 */
var PlatformCommonEvent;
(function (PlatformCommonEvent) {
    PlatformCommonEvent["PAUSE_AUDIO"] = "PAUSE_AUDIO";
    PlatformCommonEvent["RESUM_AUDIO"] = "RESUM_AUDIO";
    PlatformCommonEvent["AD_CONFIG_GETTED"] = "AD_CONFIG_GETTED";
    PlatformCommonEvent["SELF_AD_INITED"] = "SELF_AD_INITED";
})(PlatformCommonEvent = exports.PlatformCommonEvent || (exports.PlatformCommonEvent = {}));


/***/ }),

/***/ "./src/aTGame/Platform/Data/PlatformData.ts":
/*!**************************************************!*\
  !*** ./src/aTGame/Platform/Data/PlatformData.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 平台数据类
 */
class PlatformData {
    constructor() {
        /** 应用ID */
        this.appId = '';
        this.appKey = '';
        /** 广告id */
        this.bannerId = '';
        this.rewardVideoId = '';
        this.interstitialId = '';
        this.nativeId = '';
        //
        this.nativeBannerIds = [];
        this.nativeIconIds = [];
        this.nativeinterstitialIds = [];
        this.nativeinpageIds = [];
        //分享id
        this.shareId = '';
    }
}
exports.default = PlatformData;


/***/ }),

/***/ "./src/aTGame/Platform/Device/DefaultDevice.ts":
/*!*****************************************************!*\
  !*** ./src/aTGame/Platform/Device/DefaultDevice.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 默认设备
 */
class DefaultDevice {
    Vibrate(isLong) {
        console.log("调用震动", isLong);
        //判断平台是否支持
        if (!navigator.vibrate) {
            // 不支持
            console.log("不支持设备震动！");
            return;
        }
        //
        if (isLong) {
            navigator.vibrate(400);
        }
        else {
            navigator.vibrate(15);
        }
    }
}
exports.default = DefaultDevice;


/***/ }),

/***/ "./src/aTGame/Platform/Device/TTDevice.ts":
/*!************************************************!*\
  !*** ./src/aTGame/Platform/Device/TTDevice.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const DefaultDevice_1 = __webpack_require__(/*! ./DefaultDevice */ "./src/aTGame/Platform/Device/DefaultDevice.ts");
/**
 * 头条设备
 */
class TTDevice extends DefaultDevice_1.default {
    constructor(base) {
        super();
        this._base = base;
    }
    Vibrate(isLong) {
        console.log("调用震动", isLong);
        if (isLong) {
            this._base.vibrateLong({
                success(res) { },
                fail(res) {
                    console.error("调用震动失败", res);
                },
                complete(res) { }
            });
        }
        else {
            this._base.vibrateShort({
                success(res) { },
                fail(res) {
                    console.error("调用震动失败", res);
                },
                complete(res) { }
            });
        }
    }
}
exports.default = TTDevice;


/***/ }),

/***/ "./src/aTGame/Platform/Device/WXDevice.ts":
/*!************************************************!*\
  !*** ./src/aTGame/Platform/Device/WXDevice.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const DefaultDevice_1 = __webpack_require__(/*! ./DefaultDevice */ "./src/aTGame/Platform/Device/DefaultDevice.ts");
/**
 * 微信设备
 */
class WXDevice extends DefaultDevice_1.default {
    Vibrate(isLong) {
        console.log("调用震动", isLong);
        //判断是否在小游戏平台
        if (window['wx']) {
            if (isLong) {
                Laya.timer.callLater(wx, wx.vibrateLong, [null]);
            }
            else {
                Laya.timer.callLater(wx, wx.vibrateShort, [null]);
            }
        }
    }
}
exports.default = WXDevice;


/***/ }),

/***/ "./src/aTGame/Platform/PlatformClass/BDPlatform.ts":
/*!*********************************************************!*\
  !*** ./src/aTGame/Platform/PlatformClass/BDPlatform.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ConsoleEx_1 = __webpack_require__(/*! ../../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const StringUtils_1 = __webpack_require__(/*! ../../Utils/StringUtils */ "./src/aTGame/Utils/StringUtils.ts");
const PlatformCommonEventId_1 = __webpack_require__(/*! ../Common/PlatformCommonEventId */ "./src/aTGame/Platform/Common/PlatformCommonEventId.ts");
const EPlatformType_1 = __webpack_require__(/*! ../T/EPlatformType */ "./src/aTGame/Platform/T/EPlatformType.ts");
const WXPlatform_1 = __webpack_require__(/*! ./WXPlatform */ "./src/aTGame/Platform/PlatformClass/WXPlatform.ts");
/**
 * 百度平台实例
 */
class BDPlatform extends WXPlatform_1.default {
    constructor() {
        super(...arguments);
        this.platform = EPlatformType_1.EPlatformType.BD;
        this._showVideoLoad = false;
    }
    Init(platformData) {
        this._base = window["swan"];
        if (this._base == null) {
            console.error(...ConsoleEx_1.default.packError("平台初始化错误"));
            return;
        }
        this.platformData = platformData;
        this.recordManager.Platform = this;
        this._InitLauchOption();
        // this._Login();
        this._InitShareInfo();
        this._InitSystemInfo();
        this._isBannerLoaded = false;
        this._isBannerShowed = false;
        // this._CreateBannerAd();
        this._CreateVideoAd();
        this._CreateInterstitalAd();
        window["iplatform"] = this;
    }
    _CreateBannerAd() {
        if (StringUtils_1.default.IsNullOrEmpty(this.platformData.bannerId)) {
            console.log("无有效的banner广告ID,取消加载");
            return;
        }
        let windowWidth = this._base.getSystemInfoSync().windowWidth;
        let windowHeight = this._base.getSystemInfoSync().windowHeight;
        let bannerObj = {};
        bannerObj["adUnitId"] = this.platformData.bannerId; // "adunit-b48894d44d318e5a";
        bannerObj["appSid"] = this.platformData.sid;
        let styleObj = {};
        styleObj["left"] = 0;
        styleObj["top"] = 0;
        styleObj["width"] = windowWidth;
        bannerObj["style"] = styleObj;
        this._bannerAd = this._base.createBannerAd(bannerObj);
        this._bannerAd.onLoad(() => {
            console.log("banner加载成功");
            this._isBannerLoaded = true;
            this._bannerAd.style.top = windowHeight - this._bannerAd.style.height;
            // 创建完直接显示广告
            this._bannerAd.show();
        });
        this._bannerAd.onError((res) => {
            console.error("banner广告加载失败", res);
        });
    }
    _CreateVideoAd() {
        if (StringUtils_1.default.IsNullOrEmpty(this.platformData.rewardVideoId)) {
            console.log("无有效的视频广告ID,取消加载");
            return;
        }
        this._videoFailedCount = 0;
        let videoObj = {};
        videoObj["adUnitId"] = this.platformData.rewardVideoId; // "adunit-5631637236cf16b6";
        videoObj["appSid"] = this.platformData.sid;
        this._rewardVideo = this._base.createRewardedVideoAd(videoObj);
        this._rewardVideo.onLoad(() => {
            console.log("视频广告加载成功");
            this._isVideoLoaded = true;
        });
        this._rewardVideo.onError((res) => {
            this._videoFailedCount++;
            console.error("视频广告加载失败", res);
            if (this._videoFailedCount > 10) {
                console.log("第", this._videoFailedCount, "次重新加载视频广告");
                // 失败自动加载广告
                this._rewardVideo.load();
            }
        });
        this._rewardVideo.onClose((res) => {
            this._base.hideLoading();
            Laya.stage.event(PlatformCommonEventId_1.PlatformCommonEvent.RESUM_AUDIO);
            console.log("视频回调", res);
            let isEnd = res["isEnded"];
            if (isEnd) {
                if (this._rewardSuccessed)
                    this._rewardSuccessed.run();
            }
            else {
                if (this._rewardSkipped)
                    this._rewardSkipped.run();
            }
            // bd需要自动加载广告
            this._rewardVideo.load();
        });
    }
    _CreateInterstitalAd() {
    }
    LoadSubpackage(name, onSuccess, onFailed, onProgress) {
        let loadObj = {};
        loadObj["name"] = name;
        loadObj["success"] = () => {
            console.log("分包加载成功", name);
            if (onSuccess) {
                onSuccess.run();
            }
        };
        loadObj["fail"] = () => {
            console.error("分包加载失败", name);
            if (onFailed) {
                onFailed.run();
            }
        };
        let loadTask = this._base.loadSubpackage(loadObj);
        loadTask.onProgressUpdate((res) => {
            if (onProgress) {
                let value = res.progress / 100;
                if (isNaN(value)) {
                    value = res.loaded / res.total;
                }
                onProgress.runWith(value);
            }
        });
    }
    RecordEvent(eventId, param) {
        this._base.reportAnalytics(eventId, param);
    }
    ShowBannerAd() {
        if (this._isBannerLoaded) {
            return;
        }
        this._CreateBannerAd();
    }
    HideBannerAd() {
        if (!this._isBannerLoaded)
            return;
        this._isBannerLoaded = false;
        if (this._bannerAd) {
            this._bannerAd.destroy();
        }
    }
}
exports.default = BDPlatform;


/***/ }),

/***/ "./src/aTGame/Platform/PlatformClass/DefaultPlatform.ts":
/*!**************************************************************!*\
  !*** ./src/aTGame/Platform/PlatformClass/DefaultPlatform.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const EPlatformType_1 = __webpack_require__(/*! ../T/EPlatformType */ "./src/aTGame/Platform/T/EPlatformType.ts");
const DefaultDevice_1 = __webpack_require__(/*! ../Device/DefaultDevice */ "./src/aTGame/Platform/Device/DefaultDevice.ts");
const WebRecordManager_1 = __webpack_require__(/*! ../Record/WebRecordManager */ "./src/aTGame/Platform/Record/WebRecordManager.ts");
const PlatformManagerProxy_1 = __webpack_require__(/*! ../PlatformManagerProxy */ "./src/aTGame/Platform/PlatformManagerProxy.ts");
/**
 * 默认平台
 */
class DefaultPlatform {
    constructor() {
        this.platform = EPlatformType_1.EPlatformType.Web;
        this.safeArea = null;
        this.recordManager = new WebRecordManager_1.WebRecordManager();
        this.device = new DefaultDevice_1.default();
        this.systemInfo = null;
        /**
         * 是否支持直接跳转到其他小程序
         * 默认平台进行强制fake true,方便进行调试
         */
        this.isSupportJumpOther = true;
    }
    Init(platformData) {
        this.loginState = {
            isLogin: false,
            code: null
        };
        this.recordManager.Platform = this;
        Laya.timer.once(500, this, this._FakeLoginEnd);
    }
    _FakeLoginEnd() {
        if (this.onLoginEnd)
            this.onLoginEnd.run();
    }
    IsBannerAvaliable() {
        return false;
    }
    IsVideoAvaliable() {
        return true;
    }
    IsInterstitalAvaliable() {
        return false;
    }
    /**
     * 显示banner
     */
    ShowBannerAd() {
        console.log("调用ShowBannerAd");
    }
    HideBannerAd() {
        console.log("调用HideBannerAd");
    }
    /**
     * 显示激励视频
     */
    ShowRewardVideoAd(onSuccess, onSkipped) {
        console.log("调用ShowRewardVideoAd");
        //默认看完广告
        onSuccess.run();
    }
    ShowRewardVideoAdAsync() {
        return new Promise(function (resolve) {
            PlatformManagerProxy_1.default.instance.PlatformInstance.ShowRewardVideoAd(Laya.Handler.create(this, () => {
                resolve(true);
            }), Laya.Handler.create(this, () => {
                resolve(false);
            }));
        });
    }
    /**
     * 显示插屏广告
     */
    ShowInterstitalAd() {
        console.log("调用ShowInterstitalAd");
    }
    GetFromAppId() {
        return null;
    }
    ShareAppMessage(obj, onSuccess = null, onFailed = null) {
        console.log("分享消息", obj);
        if (onSuccess) {
            onSuccess.run();
        }
    }
    LoadSubpackage(name, onSuccess, onFailed) {
        if (onSuccess) {
            onSuccess.run();
        }
    }
    RecordEvent(eventId, param) {
        console.log("记录事件", eventId, param);
    }
    ShareVideoInfo() {
        console.log(PlatformManagerProxy_1.default.platformStr, "暂未实现录屏功能");
    }
    _CheckUpdate() {
    }
    ShowToast(str) {
        //
        console.log('显示消息：', str);
    }
    OpenGameBox() {
        console.error("当前平台", PlatformManagerProxy_1.default.platformStr, "暂不支持互推游戏盒子");
    }
    NavigateToApp(appid, path, extra) {
        return new Promise((resolve, reject) => {
            console.error("当前平台", PlatformManagerProxy_1.default.platformStr, `暂不支持小程序跳转appid:${appid}`);
            // 这里使用resolve
            resolve(false);
        });
    }
    createShortcut() {
        console.log('创建桌面图标');
    }
    GetStorage(key) {
        console.log('读本地存储');
        return Laya.LocalStorage.getItem(key);
    }
    SetStorage(key, data) {
        console.log('写本地存储');
        Laya.LocalStorage.setItem(key, data);
    }
}
exports.default = DefaultPlatform;


/***/ }),

/***/ "./src/aTGame/Platform/PlatformClass/OppoPlatform.ts":
/*!***********************************************************!*\
  !*** ./src/aTGame/Platform/PlatformClass/OppoPlatform.ts ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const Awaiters_1 = __webpack_require__(/*! ../../Async/Awaiters */ "./src/aTGame/Async/Awaiters.ts");
const StringUtils_1 = __webpack_require__(/*! ../../Utils/StringUtils */ "./src/aTGame/Utils/StringUtils.ts");
const DefaultDevice_1 = __webpack_require__(/*! ../Device/DefaultDevice */ "./src/aTGame/Platform/Device/DefaultDevice.ts");
const DefaultRecordManager_1 = __webpack_require__(/*! ../Record/DefaultRecordManager */ "./src/aTGame/Platform/Record/DefaultRecordManager.ts");
const EPlatformType_1 = __webpack_require__(/*! ../T/EPlatformType */ "./src/aTGame/Platform/T/EPlatformType.ts");
const WXPlatform_1 = __webpack_require__(/*! ./WXPlatform */ "./src/aTGame/Platform/PlatformClass/WXPlatform.ts");
const PlatformCommonEventId_1 = __webpack_require__(/*! ../Common/PlatformCommonEventId */ "./src/aTGame/Platform/Common/PlatformCommonEventId.ts");
const PlatformManagerProxy_1 = __webpack_require__(/*! ../PlatformManagerProxy */ "./src/aTGame/Platform/PlatformManagerProxy.ts");
const ConsoleEx_1 = __webpack_require__(/*! ../../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
/**
 * OPPO平台实例
 */
class OppoPlatform extends WXPlatform_1.default {
    constructor() {
        super(...arguments);
        this.platform = EPlatformType_1.EPlatformType.OPPO;
        this.safeArea = null;
        this.recordManager = new DefaultRecordManager_1.default();
        this.device = new DefaultDevice_1.default();
        /**
         * 是否支持直接跳转到其他小程序
         */
        this.isSupportJumpOther = true;
        this._isBannerLoaded = false;
        this._isVideoLoaded = false;
        this._isInterstitialLoaded = false;
        this._isInterstitialCanShow = true;
        this._nativeAdLoaded = false;
        this._cacheVideoAD = false;
    }
    Init(platformData) {
        this._base = window["qg"];
        if (this._base == null) {
            console.error(...ConsoleEx_1.default.packError("平台初始化错误", PlatformManagerProxy_1.default.platformStr));
            return;
        }
        this.platformData = platformData;
        this.recordManager.Platform = this;
        this._InitLauchOption();
        this._Login();
        this._InitSystemInfo();
        this.getSystemInfo();
        if (this.systemInfo.platformVersion >= 1051) {
            // 不需要在进行initAdService
        }
        else {
            this._base.initAdService({
                appId: platformData.appId,
                isDebug: true,
                success: () => {
                    console.log("oppo广告", "初始化广告服务成功", platformData);
                    // 不提前进行预加载
                    // this._CreateBannerAd();
                    this._CreateVideoAd();
                    // this._CreateInterstitalAd();
                    // this.intersitialAd = new NativeADUnit(platformData.interstitialId);
                    // this.iconNative = new NativeADUnit(platformData.nativeId);
                    // this.nativeAd = new NativeADUnit(platformData.nativeId);
                },
                fail: () => {
                    console.error("oppo广告", "初始化广告服务失败");
                }
            });
        }
        window["iplatform"] = this;
    }
    getSystemInfo() {
        this._base.getSystemInfo({
            success: (res) => {
                this.systemInfo = res;
                console.log(this.systemInfo);
            },
            fail: () => { },
            complete: () => { }
        });
    }
    /**
     * 上报数据
     */
    reportMonitor() {
        console.log('oppo上报数据', this.systemInfo);
        if (this.systemInfo && this.systemInfo.platformVersion >= 1060) {
            this._base.reportMonitor('game_scene', 0);
        }
    }
    _CheckUpdate() {
    }
    _Login() {
        this.loginState = {
            isLogin: false,
            code: ""
        };
        let loginData = {};
        loginData.success = (res) => {
            this._OnLoginSuccess(res);
        };
        loginData.fail = (res) => {
            console.error(PlatformManagerProxy_1.default.platformStr, "登录失败", res);
            this.loginState.isLogin = false;
            this.loginState.code = "";
        };
        loginData.complete = (res) => {
            if (this.onLoginEnd != null) {
                this.onLoginEnd.run();
            }
        };
        this._base.login(loginData);
    }
    _OnLoginSuccess(res) {
        console.log(PlatformManagerProxy_1.default.platformStr, "登录成功", res);
        this.loginState.isLogin = true;
        this.loginState.code = res.token;
    }
    ShareAppMessage(obj, onSuccess, onFailed) {
    }
    _InitLauchOption() {
        // 绑定onShow事件
        this._base.onShow(this._OnShow);
        this._base.onHide(this._OnHide);
        // 自动获取一次启动参数
        let res = this._base.getLaunchOptionsSync();
        this._OnShow(res);
    }
    /**
     * 是否可以创建桌面图标
     */
    canCreateShortcut() {
        return new Promise((resolve, reject) => {
            qg['hasShortcutInstalled']({
                success: function (res) {
                    // 判断图标是否存在  
                    resolve(res);
                },
                fail: function (err) {
                    reject();
                },
                complete: function () {
                }
            });
        });
    }
    /** 发起创建桌面图标请求 */
    createShortcut() {
        return new Promise((resolve, reject) => {
            qg['hasShortcutInstalled']({
                success: function (res) {
                    // 判断图标未存在时，创建图标
                    if (res == false) {
                        qg['installShortcut']({
                            success: function () {
                                resolve();
                            },
                            fail: function (err) {
                                reject();
                            },
                            complete: function () { }
                        });
                    }
                    else {
                        resolve();
                    }
                },
                fail: function (err) {
                    reject();
                },
                complete: function () { }
            });
        });
    }
    _CreateInterstitalAd() {
        // if (StringUtils.IsNullOrEmpty(this._platformData.interstitialId)) {
        //     console.log("无有效的插页广告ID,取消加载");
        //     return;
        // }
        // this._interstitalFailedCount = 0;
        // let intAdObj = {};
        // intAdObj["adUnitId"] = this._platformData.interstitialId;
        // this._intersitialAd = this._base.createInsertAd(intAdObj);
        // this._intersitialAd.onLoad(() => {
        //     console.log("插页广告加载成功");
        //     this._isInterstitialLoaded = true;
        // });
        // this._intersitialAd.onClose(() => {
        //     console.log("插页广告关闭");
        //     this._isInterstitialLoaded = false;
        //     this._intersitialAd.load();
        // });
        // this._intersitialAd.onError((err) => {
        //     this._interstitalFailedCount++;
        //     console.error("插页广告加载失败", err);
        //     if (this._interstitalFailedCount > 10) {
        //         console.log("第", this._interstitalFailedCount, "次重新加载插页广告");
        //         // 失败自动加载广告
        //         this._intersitialAd.load();
        //     }
        // });
    }
    _CreateVideoAd() {
        if (!this._cacheVideoAD) {
            console.log("当前策略为不缓存视频广告");
            return;
        }
        let createRewardedVideoAd = this._base["createRewardedVideoAd"];
        if (createRewardedVideoAd == null) {
            console.error("无createRewardedVideoAd方法,跳过初始化");
            return;
        }
        if (StringUtils_1.default.IsNullOrEmpty(this.platformData.rewardVideoId)) {
            console.log("无有效的视频广告ID,取消加载");
            return;
        }
        this._videoFailedCount = 0;
        let videoObj = {};
        videoObj["adUnitId"] = this.platformData.rewardVideoId;
        this._rewardVideo = createRewardedVideoAd(videoObj);
        this._rewardVideo.onLoad(() => {
            console.log("视频广告加载成功");
            this._isVideoLoaded = true;
        });
        this._rewardVideo.onError((res) => {
            this._videoFailedCount++;
            console.error("视频广告加载失败", res);
            if (this._videoFailedCount > 10) {
                console.log("第", this._videoFailedCount, "次重新加载视频广告");
                // 失败自动加载广告
                this._rewardVideo.load();
            }
        });
        this._rewardVideo.onClose((res) => {
            Laya.stage.event(PlatformCommonEventId_1.PlatformCommonEvent.RESUM_AUDIO);
            console.log("视频回调", res);
            let isEnd = res["isEnded"];
            // 修复广告bug
            Awaiters_1.default.NextFrame().then(() => {
                if (isEnd) {
                    if (this._rewardSuccessed)
                        this._rewardSuccessed.run();
                }
                else {
                    if (this._rewardSkipped)
                        this._rewardSkipped.run();
                }
            });
        });
    }
    IsBannerAvaliable() {
        return this._isBannerLoaded;
    }
    IsVideoAvaliable() {
        return this._isVideoLoaded;
    }
    IsInterstitalAvaliable() {
        return false; // LTSDK.instance.isADEnable && this._isInterstitialCanShow && CommonSaveData.instance.interstitialCount < 888;
    }
    IsNativeAvaliable() {
        return this._nativeAdLoaded;
    }
    ShowBannerAd() {
        return __awaiter(this, void 0, void 0, function* () {
            if (StringUtils_1.default.IsNullOrEmpty(this.platformData.bannerId)) {
                console.log("无有效的banner广告ID,取消加载");
                return;
            }
            if (this._bannerAd) {
                this._bannerAd.show();
                console.log('展示已有banner');
                return;
            }
            this.HideBannerAd();
            this._bannerAd = this._base.createBannerAd({
                adUnitId: this.platformData.bannerId
            });
            let isBannerLoading = true;
            let loadSuccess = false;
            this._bannerAd.show().then((res) => {
                console.log("banner加载成功", res);
                if (res['code'] == 0) {
                    loadSuccess = true;
                }
                isBannerLoading = false;
            }).catch((res) => {
                console.error("banner加载失败", res);
                isBannerLoading = false;
            });
            while (isBannerLoading) {
                yield Awaiters_1.default.NextFrame();
            }
            if (loadSuccess)
                return;
            console.log("banner展示失败,展示native广告");
            // 销毁广告
            if (this._bannerAd) {
                this._bannerAd.destroy();
                this._bannerAd = null;
            }
            // 没有则展示原生
            for (let i = 0; i < this.platformData.nativeIconIds.length; ++i) {
                let ret = yield this._ShowNativeBanner(i);
                if (ret) {
                    break;
                }
                this._bannerAd.destroy();
            }
        });
    }
    _ShowNativeBanner(index) {
        return __awaiter(this, void 0, void 0, function* () {
            let nativeBanner = this.base.createNativeAd({
                adUnitId: this.platformData.nativeBannerIds[index]
            });
            // 转接对象
            this._bannerAd = nativeBanner;
            let loadRet = yield nativeBanner.load();
            if (loadRet["code"] == 0) {
                // 加载成功
                let adList = loadRet['adList'];
                if (adList == null || adList.length == 0) {
                    console.error("native banner加载失败", loadRet);
                    return false;
                }
                let adData = adList[0];
                if (adData == null) {
                    console.error("native banner加载失败", loadRet);
                    return false;
                }
                return true;
            }
            else {
                console.error("native banner加载失败", loadRet);
                return false;
            }
        });
    }
    HideBannerAd() {
        if (this._bannerAd) {
            this._bannerAd.destroy();
            this._bannerAd = null;
        }
    }
    ShowNativeAd() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.IsNativeAvaliable()) {
                return;
            }
            // await this._ShowNative();
        });
    }
    HideNativeAd() {
        if (!this.IsNativeAvaliable()) {
            return;
        }
        // this._HideNative();
    }
    // isNativeInterstitialAvaliable(){
    //     return this.intersitialAd.canShowAD
    // }
    _DoCacheShowVideo(onSuccess, onSkipped) {
        if (!this._isVideoLoaded) {
            console.error("视频广告尚未加载好");
            return;
        }
        this._rewardSuccessed = onSuccess;
        this._rewardSkipped = onSkipped;
        this._isVideoLoaded = false;
        Laya.stage.event(PlatformCommonEventId_1.PlatformCommonEvent.PAUSE_AUDIO);
        this._rewardVideo.show();
    }
    _DoNoCacheShowVideo(onSuccess, onSkipped) {
        this._rewardSuccessed = onSuccess;
        this._rewardSkipped = onSkipped;
        if (StringUtils_1.default.IsNullOrEmpty(this.platformData.rewardVideoId)) {
            console.log("无有效的视频广告ID,取消加载");
            this._rewardSkipped && this._rewardSkipped.run();
            return;
        }
        let createRewardedVideoAd = this._base["createRewardedVideoAd"];
        if (createRewardedVideoAd == null) {
            console.error("无createRewardedVideoAd方法,跳过初始化");
            this._rewardSkipped && this._rewardSkipped.run();
            return;
        }
        if (this._rewardVideo) {
            this._rewardVideo.destroy();
        }
        let videoObj = {};
        videoObj["adUnitId"] = this.platformData.rewardVideoId; // "adunit-5631637236cf16b6";
        this._rewardVideo = createRewardedVideoAd(videoObj);
        console.log("广告创建完成", videoObj);
        this._rewardVideo.onClose((res) => {
            Laya.stage.event(PlatformCommonEventId_1.PlatformCommonEvent.RESUM_AUDIO);
            console.log("视频回调", res);
            let isEnd = res["isEnded"];
            Awaiters_1.default.NextFrame().then(() => {
                if (isEnd) {
                    if (this._rewardSuccessed)
                        this._rewardSuccessed.run();
                }
                else {
                    if (this._rewardSkipped)
                        this._rewardSkipped.run();
                }
            });
        });
        this._rewardVideo.onError((err) => {
            console.log("广告组件出现问题", err);
            if (this._rewardSkipped)
                this._rewardSkipped.run();
        });
        this._rewardVideo.onLoad((res) => {
            console.log("广告加载成功", res);
        });
        this._rewardVideo.load().then(() => {
            this._rewardVideo.show();
        });
    }
    ShowRewardVideoAd(onSuccess, onSkipped) {
        if (this._cacheVideoAD) {
            this._DoCacheShowVideo(onSuccess, onSkipped);
        }
        else {
            this._DoNoCacheShowVideo(onSuccess, onSkipped);
        }
    }
    ShowRewardVideoAdAsync() {
        return new Promise(function (resolve) {
            PlatformManagerProxy_1.default.instance.PlatformInstance.ShowRewardVideoAd(Laya.Handler.create(this, () => {
                resolve(true);
            }), Laya.Handler.create(this, () => {
                resolve(false);
            }));
        });
    }
    _DisableInterstitalAd() {
        return __awaiter(this, void 0, void 0, function* () {
            this._isInterstitialCanShow = false;
            yield Awaiters_1.default.Seconds(60);
            this._isInterstitialCanShow = true;
        });
    }
    GetFromAppId() {
        if (this.lauchOption.referrerInfo == null) {
            return null;
        }
        if (StringUtils_1.default.IsNullOrEmpty(this.lauchOption.referrerInfo.appId)) {
            return null;
        }
        return this.lauchOption.referrerInfo.appId;
    }
    /** 发起创建桌面图标请求 */
    CreatShortcut() {
        return new Promise((resolve, reject) => {
            qg['hasShortcutInstalled']({
                success: function (res) {
                    // 判断图标未存在时，创建图标
                    if (res == false) {
                        qg['installShortcut']({
                            success: function () {
                                resolve();
                            },
                            fail: function (err) {
                                reject();
                            },
                            complete: function () { }
                        });
                    }
                    else {
                        resolve();
                    }
                },
                fail: function (err) {
                    reject();
                },
                complete: function () { }
            });
        });
    }
    LoadSubpackage(name, onSuccess, onFailed, onProgress) {
        let loadObj = {};
        loadObj["name"] = name;
        loadObj["success"] = () => {
            console.log("分包加载成功", name);
            if (onSuccess) {
                onSuccess.run();
            }
        };
        loadObj["fail"] = () => {
            console.error("分包加载失败", name);
            if (onFailed) {
                onFailed.run();
            }
        };
        let loadTask = this._base.loadSubpackage(loadObj);
        loadTask.onProgressUpdate((res) => {
            console.log("分包加载进度", res);
            if (onProgress) {
                onProgress.runWith(res.progress / 100);
            }
        });
    }
    RecordEvent(eventId, param) {
        console.log("[记录事件]", eventId, param);
    }
    /**
     * 创建分享视频按钮
     * @param x
     * @param y
     * @param width
     * @param height
     */
    CreateShareVideoBtn(x, y, width, height) {
    }
    /**
     * 隐藏分享视频按钮
     */
    HideShareVideoBtn() {
        if (this._shareVideoBtn != null) {
            this._shareVideoBtn.hide();
        }
    }
    ShowToast(str) {
        this._base.showToast({
            title: str,
            duration: 2000
        });
    }
    OpenGameBox(appIds) {
        console.error("当前平台", PlatformManagerProxy_1.default.platformStr, "暂不支持互推游戏盒子");
    }
    /**
     * @param appId oppo vivo传包名
     */
    NavigateToApp(appId, path, extra) {
        return new Promise((resolve, reject) => {
            Laya.Browser.window.qg.navigateToMiniGame({
                pkgName: appId,
                path: path,
                extraData: extra,
                success: function () {
                    resolve(true);
                    console.log('oppo小游戏跳转成功');
                },
                fail: function (res) {
                    reject(false);
                    console.log('oppo小游戏跳转失败：', JSON.stringify(res));
                }
            });
        });
    }
}
exports.default = OppoPlatform;


/***/ }),

/***/ "./src/aTGame/Platform/PlatformClass/QQPlatform.ts":
/*!*********************************************************!*\
  !*** ./src/aTGame/Platform/PlatformClass/QQPlatform.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ConsoleEx_1 = __webpack_require__(/*! ../../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const StringUtils_1 = __webpack_require__(/*! ../../Utils/StringUtils */ "./src/aTGame/Utils/StringUtils.ts");
const PlatformCommonEventId_1 = __webpack_require__(/*! ../Common/PlatformCommonEventId */ "./src/aTGame/Platform/Common/PlatformCommonEventId.ts");
const PlatformManagerProxy_1 = __webpack_require__(/*! ../PlatformManagerProxy */ "./src/aTGame/Platform/PlatformManagerProxy.ts");
const EPlatformType_1 = __webpack_require__(/*! ../T/EPlatformType */ "./src/aTGame/Platform/T/EPlatformType.ts");
const WXPlatform_1 = __webpack_require__(/*! ./WXPlatform */ "./src/aTGame/Platform/PlatformClass/WXPlatform.ts");
/**
 * QQ平台实例
 */
class QQPlatform extends WXPlatform_1.default {
    constructor() {
        super(...arguments);
        this.platform = EPlatformType_1.EPlatformType.QQ;
        this.isBannerShowing = false;
    }
    Init(platformData) {
        this._base = window["qq"];
        if (this._base == null) {
            console.error(...ConsoleEx_1.default.packError("平台初始化错误", PlatformManagerProxy_1.default.platformStr));
            return;
        }
        this.platformData = platformData;
        this.recordManager.Platform = this;
        this._InitLauchOption();
        this._Login();
        this._InitShareInfo();
        this._InitSystemInfo();
        this._CreateBannerAd();
        this._CreateVideoAd();
        this._CreateInterstitalAd();
        window["iplatform"] = this;
        console.error("平台初始化完成", PlatformManagerProxy_1.default.platformStr);
    }
    _InitSystemInfo() {
        try {
            let systemInfo = this._base.getSystemInfoSync();
            this._cacheScreenScale = systemInfo.screenWidth / Laya.stage.width;
            this.safeArea = {};
            this.safeArea.width = systemInfo.windowWidth;
            this.safeArea.height = systemInfo.windowHeight;
            this.safeArea.top = systemInfo.statusBarHeight;
            this.safeArea.bottom = 0;
            console.log("QQ覆写_InitSystemInfo", this.safeArea);
        }
        catch (e) {
            console.error(e);
            console.error("获取设备信息失败,执行默认初始化");
            this.safeArea = null;
        }
    }
    _CreateBannerAd(show) {
        if (StringUtils_1.default.IsNullOrEmpty(this.platformData.bannerId)) {
            console.log("无有效的banner广告ID,取消加载");
            return;
        }
        let windowWidth = this._base.getSystemInfoSync().windowWidth;
        let windowHeight = this._base.getSystemInfoSync().windowHeight;
        let bannerObj = {};
        bannerObj["adUnitId"] = this.platformData.bannerId; // "adunit-b48894d44d318e5a";
        let styleObj = {};
        styleObj["top"] = windowHeight - 80;
        styleObj["width"] = 300;
        styleObj["left"] = (windowWidth - styleObj["width"]) / 2;
        bannerObj["style"] = styleObj;
        this._bannerAd = this._base.createBannerAd(bannerObj);
        this._isBannerLoaded = false;
        this._bannerAd.onLoad(() => {
            console.log("qq banner加载成功", this._bannerAd);
            this._isBannerLoaded = true;
            if (show) {
                this._bannerAd.show();
            }
        });
        this._bannerAd.onError((res) => {
            console.error("banner广告加载失败", res);
        });
        this._bannerAd.onResize((size) => {
            console.log("onResize", size);
            this._bannerAd.style.top = windowHeight - 80;
            this._bannerAd.style.left = (windowWidth - 300) / 2;
            console.log("onResize", this._bannerAd);
        });
        // super._CreateBannerAd();
    }
    IsBannerAvaliable() {
        return this._isBannerLoaded;
    }
    IsVideoAvaliable() {
        return this._isVideoLoaded;
    }
    IsInterstitalAvaliable() {
        return this._isInterstitialLoaded;
    }
    ShowBannerAd() {
        if (!this.IsBannerAvaliable()) {
            return;
        }
        this._bannerAd.show();
        this.isBannerShowing = true;
        Laya.timer.loop(15 * 1000, this, this.refreshBanner);
    }
    refreshBanner() {
        if (this.isBannerShowing) {
            console.log('refresh banner');
            this._bannerAd.hide();
            this._CreateBannerAd(true);
        }
    }
    HideBannerAd() {
        if (!this.IsBannerAvaliable())
            return;
        if (this._bannerAd) {
            this._bannerAd.hide();
            Laya.timer.clear(this, this.refreshBanner);
            this.isBannerShowing = false;
        }
        this._CreateBannerAd();
    }
    _DoCacheShowVideo(onSuccess, onSkipped) {
        if (!this._isVideoLoaded) {
            console.error("视频广告尚未加载好");
            return;
        }
        this._rewardSuccessed = onSuccess;
        this._rewardSkipped = onSkipped;
        this._isVideoLoaded = false;
        Laya.stage.event(PlatformCommonEventId_1.PlatformCommonEvent.PAUSE_AUDIO);
        this._rewardVideo.show();
    }
    _DoNoCacheShowVideo(onSuccess, onSkipped) {
        this._rewardSuccessed = onSuccess;
        this._rewardSkipped = onSkipped;
        if (!this._isVideoLoaded || !this._rewardVideo) {
            if (StringUtils_1.default.IsNullOrEmpty(this.platformData.rewardVideoId)) {
                console.log("无有效的视频广告ID,取消加载");
                onSkipped.run();
                return;
            }
            let createRewardedVideoAd = this._base["createRewardedVideoAd"];
            if (createRewardedVideoAd == null) {
                console.error("无createRewardedVideoAd方法,跳过初始化");
                onSkipped.run();
                return;
            }
            this._videoFailedCount = 0;
            let videoObj = {};
            videoObj["adUnitId"] = this.platformData.rewardVideoId; // "adunit-5631637236cf16b6";
            this._rewardVideo = createRewardedVideoAd(videoObj);
            this._rewardVideo.onLoad(() => {
                console.log("视频广告加载成功");
                this._isVideoLoaded = true;
            });
            this._rewardVideo.onError((res) => {
                this._videoFailedCount++;
                console.error("视频广告加载失败", res, this._videoFailedCount);
            });
            this._rewardVideo.onClose((res) => {
                Laya.stage.event(PlatformCommonEventId_1.PlatformCommonEvent.RESUM_AUDIO);
                console.log(" NoCache - 视频回调", res);
                let isEnd = res["isEnded"];
                console.log("noCache---", isEnd, "----", !!this._rewardSuccessed, "-----", !!this._rewardSkipped);
                if (isEnd) {
                    if (this._rewardSuccessed)
                        this._rewardSuccessed.run();
                }
                else {
                    if (this._rewardSkipped)
                        this._rewardSkipped.run();
                }
            });
        }
        this._rewardVideo.show().then(() => {
            //
        }).catch(err => {
            console.log("广告组件出现问题", err);
            // 可以手动加载一次
            this._rewardVideo.load().then(() => {
                console.log("手动加载成功");
                // 加载成功后需要再显示广告
                return this._rewardVideo.show().then(() => {
                    //
                });
            });
        });
        ;
    }
    ShowRewardVideoAd(onSuccess, onSkipped) {
        if (this._cacheVideoAD) {
            this._DoCacheShowVideo(onSuccess, onSkipped);
        }
        else {
            this._DoNoCacheShowVideo(onSuccess, onSkipped);
        }
    }
    ShowRewardVideoAdAsync() {
        return new Promise(function (resolve) {
            PlatformManagerProxy_1.default.instance.PlatformInstance.ShowRewardVideoAd(Laya.Handler.create(this, () => {
                resolve(true);
            }, null, true), Laya.Handler.create(this, () => {
                resolve(false);
            }, null, true));
        });
    }
    ShowInterstitalAd() {
        if (!this._isInterstitialLoaded) {
            console.error("插页广告尚未加载好");
            return;
        }
        this._intersitialAd.show();
    }
    OpenGameBox(appIds = []) {
        this.showAppBox();
    }
    /**
     * 盒子广告
     */
    showAppBox() {
        if (this.appBox) {
            this.appBox.show();
        }
    }
    createAppBox(show) {
        if (!this.appBox) {
            this.appBox = this._base.createAppBox({
                adUnitId: ''
            });
        }
        this.appBox.load().then(() => {
            if (show) {
                this.appBox.show();
            }
        });
        this.appBox.onClose(() => {
            console.log('关闭盒子');
        });
    }
    hideAppBox() {
        if (this.appBox) {
            this.appBox.destroy();
        }
    }
    /**
     * 积木广告 1-5
     */
    showBlockAd(count = 1) {
        let obj = {
            adUnitId: "",
            style: { left: 55, top: Laya.stage.height / 2 },
            size: count,
            orientation: 'vertical' //landscape 或者 vertical，积木广告横向展示或者竖向展示
        };
        this.blockAd = this._base.createBlockAd(obj);
        this.blockAd.onLoad(() => {
            console.log('积木广告加载完成');
            this.blockAd.show().then(() => { console.log('积木展示成功'); }).catch(e => {
                console.error('积木展示失败', e);
            });
        });
        this.blockAd.onError((err) => {
            console.error('积木广告加载错误', err);
        });
        this.blockAd.onResize((res) => {
            console.log('积木resize', res);
        });
    }
    hideBlockAd() {
        if (this.blockAd) {
            this.blockAd.hide();
            this.blockAd.destroy();
        }
    }
}
exports.default = QQPlatform;


/***/ }),

/***/ "./src/aTGame/Platform/PlatformClass/QTTPlatform.ts":
/*!**********************************************************!*\
  !*** ./src/aTGame/Platform/PlatformClass/QTTPlatform.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ConsoleEx_1 = __webpack_require__(/*! ../../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const PlatformCommonEventId_1 = __webpack_require__(/*! ../Common/PlatformCommonEventId */ "./src/aTGame/Platform/Common/PlatformCommonEventId.ts");
const EPlatformType_1 = __webpack_require__(/*! ../T/EPlatformType */ "./src/aTGame/Platform/T/EPlatformType.ts");
const WXPlatform_1 = __webpack_require__(/*! ./WXPlatform */ "./src/aTGame/Platform/PlatformClass/WXPlatform.ts");
/**
 * 趣头条实例
 */
class QTTPlatform extends WXPlatform_1.default {
    constructor() {
        super(...arguments);
        this.platform = EPlatformType_1.EPlatformType.QTT;
    }
    Init(platformData) {
        this._base = window["qttGame"];
        if (this._base == null) {
            console.error(...ConsoleEx_1.default.packError("平台初始化错误"));
            return;
        }
        this.platformData = platformData;
        this.recordManager.Platform = this;
        // this._InitLauchOption();
        // this._Login();
        // this._InitShareInfo();
        // this._InitSystemInfo();
        // this._CreateBannerAd();
        // this._CreateVideoAd();
        // this._CreateInterstitalAd();
        window["iplatform"] = this;
    }
    IsBannerAvaliable() {
        return true;
    }
    ShowBannerAd() {
        this._base.showBanner({ index: 1 });
    }
    HideBannerAd() {
        this._base.hideBanner();
    }
    IsVideoAvaliable() {
        return true;
    }
    ShowRewardVideoAd(onSuccess, onSkipped) {
        let options = {};
        options.index = 1; //广告位置（1，2，3，4...）
        options.gametype = 1; //互动游戏类型，1(砸金蛋)  2(laba)  3(大转盘)
        options.rewardtype = 1; //互动广告框，只有 1
        options.data = {};
        options.data.title = "获得奖励"; //互动抽中奖后的道具提示文字
        Laya.stage.event(PlatformCommonEventId_1.PlatformCommonEvent.PAUSE_AUDIO);
        this._base.showVideo((res) => {
            Laya.stage.event(PlatformCommonEventId_1.PlatformCommonEvent.RESUM_AUDIO);
            if (res == 1) {
                // 播放完成，发放奖励
                if (onSuccess) {
                    onSuccess.run();
                }
            }
            else {
                //res = 0    填充不足
                //res = 2    提前关闭
                if (onSkipped) {
                    onSkipped.run();
                }
            }
        }, options);
    }
    ShowInterstitalAd() {
        // 趣头条插页广告转接为互动广告
        this.ShowHDReward();
    }
    /**
     * 显示互动广告
     */
    ShowHDReward() {
        let options = {};
        options.index = 1;
        options.rewardtype = 1;
        this._base.showHDReward(options);
    }
    RecordEvent(eventId, param) {
        console.log("记录事件", eventId, param);
    }
}
exports.default = QTTPlatform;


/***/ }),

/***/ "./src/aTGame/Platform/PlatformClass/TTPlatform.ts":
/*!*********************************************************!*\
  !*** ./src/aTGame/Platform/PlatformClass/TTPlatform.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ConsoleEx_1 = __webpack_require__(/*! ../../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const StringUtils_1 = __webpack_require__(/*! ../../Utils/StringUtils */ "./src/aTGame/Utils/StringUtils.ts");
const TTDevice_1 = __webpack_require__(/*! ../Device/TTDevice */ "./src/aTGame/Platform/Device/TTDevice.ts");
const TTRecordManager_1 = __webpack_require__(/*! ../Record/TTRecordManager */ "./src/aTGame/Platform/Record/TTRecordManager.ts");
const EPlatformType_1 = __webpack_require__(/*! ../T/EPlatformType */ "./src/aTGame/Platform/T/EPlatformType.ts");
const WXPlatform_1 = __webpack_require__(/*! ./WXPlatform */ "./src/aTGame/Platform/PlatformClass/WXPlatform.ts");
/**
 * 头条平台实例
 */
class TTPlatform extends WXPlatform_1.default {
    constructor() {
        super(...arguments);
        this.platform = EPlatformType_1.EPlatformType.TT;
        this._showVideoLoad = false;
    }
    Init(platformData) {
        this._base = window["tt"];
        if (this._base == null) {
            console.error(...ConsoleEx_1.default.packError("平台初始化错误"));
            return;
        }
        this.platformData = platformData;
        // 检测是否支持交叉推广
        let tt = this._base;
        let systemInfo = tt.getSystemInfoSync();
        if (systemInfo.platform == "ios") {
            this.isSupportJumpOther = false;
        }
        let [major, minor] = systemInfo.SDKVersion.split(".");
        if (major >= 1 && minor >= 33) {
        }
        else {
            this.isSupportJumpOther = false;
        }
        this._InitLauchOption();
        // this._Login();
        this._InitShareInfo();
        this._InitSystemInfo();
        this._CreateBannerAd();
        this._CreateVideoAd();
        this._CreateInterstitalAd();
        this.recordManager = new TTRecordManager_1.default(this._base);
        this.recordManager.Platform = this;
        this.device = new TTDevice_1.default(this._base);
        window["iplatform"] = this;
    }
    _CreateBannerAd() {
        if (StringUtils_1.default.IsNullOrEmpty(this.platformData.bannerId)) {
            console.log("无有效的banner广告ID,取消加载");
            return;
        }
        let windowWidth = this._base.getSystemInfoSync().windowWidth;
        let windowHeight = this._base.getSystemInfoSync().windowHeight;
        let bannerObj = {};
        bannerObj["adUnitId"] = this.platformData.bannerId; // "adunit-b48894d44d318e5a";
        bannerObj["adIntervals"] = 30;
        let styleObj = {};
        styleObj["left"] = 0;
        styleObj["top"] = 0;
        styleObj["width"] = windowWidth;
        bannerObj["style"] = styleObj;
        this._bannerAd = this._base.createBannerAd(bannerObj);
        this._isBannerLoaded = false;
        if (this._bannerAd) {
            this._bannerAd.onLoad(() => {
                console.log("banner加载成功", this._bannerAd);
                this._isBannerLoaded = true;
            });
            this._bannerAd.onError((res) => {
                console.error("banner广告加载失败", res);
                this._bannerAd == null;
            });
            this._bannerAd.onResize((size) => {
                this._bannerAd.style.top = windowHeight - size.height;
                this._bannerAd.style.left = (windowWidth - size.width) / 2;
            });
        }
    }
    RecordEvent(eventId, param) {
        let reportAnalytics = this._base["reportAnalytics"];
        if (reportAnalytics) {
            if (param == null) {
                param = {};
            }
            reportAnalytics(eventId, param);
        }
        else {
            console.error("reportAnalytics 方法不存在");
        }
    }
    ShowBannerAd() {
        if (!this.IsBannerAvaliable()) {
            return;
        }
        this._bannerAd.show();
    }
    ShareAppMessage(shareInfo, onSuccess, onFailed) {
        console.log("分享消息", shareInfo);
        let shareObj = WXPlatform_1.default._WrapShareInfo(shareInfo);
        shareObj["success"] = () => {
            if (onSuccess) {
                onSuccess.run();
            }
        };
        shareObj["fail"] = () => {
            if (onFailed) {
                onFailed.run();
            }
        };
        this._base.shareAppMessage(shareObj);
    }
    OpenGameBox(appIds) {
        let openData = [];
        for (let i = 0; i < appIds.length; ++i) {
            openData.push({
                appId: appIds[i]
            });
        }
        this._base.showMoreGamesModal({
            appLaunchOptions: openData
        });
    }
    NavigateToApp(appid, path, extra) {
        return new Promise((resolve, reject) => {
            if (!this.isSupportJumpOther) {
                reject(false);
                console.log("当前平台不支持小游戏跳转", this);
            }
            else {
                this._base.showMoreGamesModal({
                    appLaunchOptions: [
                        {
                            appId: this.platformData.appId,
                            query: "foo=bar&baz=qux",
                            extraData: {}
                        }
                    ],
                    success(res) {
                        resolve(true);
                        console.log("跳转小游戏成功", appid);
                    },
                    fail(err) {
                        reject(false);
                        console.log("跳转小游戏失败", appid);
                    }
                });
            }
        });
    }
}
exports.default = TTPlatform;


/***/ }),

/***/ "./src/aTGame/Platform/PlatformClass/WXPlatform.ts":
/*!*********************************************************!*\
  !*** ./src/aTGame/Platform/PlatformClass/WXPlatform.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const Awaiters_1 = __webpack_require__(/*! ../../Async/Awaiters */ "./src/aTGame/Async/Awaiters.ts");
const ConsoleEx_1 = __webpack_require__(/*! ../../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const StringUtils_1 = __webpack_require__(/*! ../../Utils/StringUtils */ "./src/aTGame/Utils/StringUtils.ts");
const PlatformCommonEventId_1 = __webpack_require__(/*! ../Common/PlatformCommonEventId */ "./src/aTGame/Platform/Common/PlatformCommonEventId.ts");
const WXDevice_1 = __webpack_require__(/*! ../Device/WXDevice */ "./src/aTGame/Platform/Device/WXDevice.ts");
const PlatformManagerProxy_1 = __webpack_require__(/*! ../PlatformManagerProxy */ "./src/aTGame/Platform/PlatformManagerProxy.ts");
const DefaultRecordManager_1 = __webpack_require__(/*! ../Record/DefaultRecordManager */ "./src/aTGame/Platform/Record/DefaultRecordManager.ts");
const ShareManager_1 = __webpack_require__(/*! ../ShareManager */ "./src/aTGame/Platform/ShareManager.ts");
const EPlatformType_1 = __webpack_require__(/*! ../T/EPlatformType */ "./src/aTGame/Platform/T/EPlatformType.ts");
/**
 * 微信平台实例
 */
class WXPlatform {
    constructor() {
        this.platform = EPlatformType_1.EPlatformType.WX;
        this.safeArea = null;
        this.recordManager = new DefaultRecordManager_1.default();
        this.device = new WXDevice_1.default();
        this.loginCode = null;
        /**
         * 是否支持直接跳转到其他小程序
         */
        this.isSupportJumpOther = true;
        this._isBannerLoaded = false;
        this._isVideoLoaded = false;
        this._isInterstitialLoaded = false;
        this._cacheVideoAD = false;
        this.NavigateToAppSuccess = null;
    }
    Init(platformData) {
        this._base = window["wx"];
        if (this._base == null) {
            console.error(...ConsoleEx_1.default.packError("平台初始化错误", PlatformManagerProxy_1.default.platformStr));
            return;
        }
        this.platformData = platformData;
        this.recordManager.Platform = this;
        this._InitLauchOption();
        this._Login();
        this._InitShareInfo();
        this._InitSystemInfo();
        this._CreateBannerAd();
        this._CreateVideoAd();
        this._CreateInterstitalAd();
        window["iplatform"] = this;
    }
    _CheckUpdate() {
        let updateManager = this._base.getUpdateManager();
        if (updateManager == null)
            return;
        updateManager.onCheckForUpdate(function (res) {
            // 请求完新版本信息的回调
            console.log("onCheckForUpdate", res.hasUpdate);
            if (res.hasUpdate) {
                this._base.showToast({
                    title: "即将有更新请留意"
                });
            }
        });
        updateManager.onUpdateReady(() => {
            this._base.showModal({
                title: "更新提示",
                content: "新版本已经准备好，是否立即使用？",
                success: function (res) {
                    if (res.confirm) {
                        // 调用 applyUpdate 应用新版本并重启
                        updateManager.applyUpdate();
                    }
                    else {
                        this._base.showToast({
                            icon: "none",
                            title: "小程序下一次「冷启动」时会使用新版本"
                        });
                    }
                }
            });
        });
        updateManager.onUpdateFailed(() => {
            this._base.showToast({
                title: "更新失败，下次启动继续..."
            });
        });
    }
    _Login() {
        this.loginState = {
            isLogin: false,
            code: ""
        };
        let loginData = {};
        loginData.success = (res) => {
            this.loginCode = res.code;
            this._OnLoginSuccess(res);
            console.error(this.loginState);
        };
        loginData.fail = (res) => {
            console.error(PlatformManagerProxy_1.default.platformStr, "登录失败", res);
            this.loginState.isLogin = false;
            this.loginState.code = "";
        };
        loginData.complete = () => {
            if (this.onLoginEnd != null) {
                this.onLoginEnd.run();
            }
        };
        this._base.login(loginData);
    }
    GetStorage(key) {
        if (this.base && this.base.getStorageSync && key) {
            try {
                return this.base.getStorageSync(key);
            }
            catch (error) {
                console.log('getStorageSync error: ', JSON.stringify(error));
                return null;
            }
        }
    }
    SetStorage(key, data) {
        if (this.base && this.base.getStorageSync && key) {
            try {
                return this.base.setStorageSync(key, data);
            }
            catch (error) {
                console.log('setStorageSync error: ', JSON.stringify(error));
            }
        }
    }
    _OnLoginSuccess(res) {
        console.log(PlatformManagerProxy_1.default.platformStr, "登录成功", res);
        this.loginState.isLogin = true;
        this.loginState.code = res.code;
    }
    _InitLauchOption() {
        // 绑定onShow事件
        this._base.onShow(this._OnShow);
        this._base.onHide(this._OnHide);
        // 自动获取一次启动参数
        let res = this._base.getLaunchOptionsSync();
        this._OnShow(res);
    }
    _InitShareInfo() {
        this._base.showShareMenu({
            withShareTicket: true,
            success: (res) => {
                console.log("InitShareSuccess", res);
            },
            fail: (res) => {
                console.log("InitShareFailed", res);
            },
            complete: (res) => {
                console.log("InitShareComplete", res);
            }
        });
        this._base.onShareAppMessage(() => {
            let shareInfo = ShareManager_1.default.instance.GetShareInfo();
            return WXPlatform._WrapShareInfo(shareInfo);
        });
    }
    static _WrapShareInfo(shareInfo) {
        let shareObj = {};
        if (shareInfo.shareTitle) {
            shareObj["title"] = shareInfo.shareTitle;
        }
        if (shareInfo.shareImg) {
            shareObj["imageUrl"] = shareInfo.shareImg;
        }
        if (shareInfo.sharePath) {
            shareObj["query"] = {};
            let pathSplit = shareInfo.sharePath.split("?");
            let params = pathSplit[1].split("&");
            for (let getParam of params) {
                let splitParam = getParam.split("=");
                shareObj["query"][splitParam[0]] = splitParam[1];
            }
        }
        return shareObj;
    }
    _InitSystemInfo() {
        this.base = this._base;
        try {
            this.systemInfo = this._base.getSystemInfoSync();
            console.log("系统信息已获取", this.systemInfo);
            this.safeArea = this.systemInfo.safeArea;
            this._cacheScreenScale = this.systemInfo.screenWidth / Laya.stage.width;
        }
        catch (e) {
            console.error(e);
            console.error("获取设备信息失败,执行默认初始化");
            this.safeArea = null;
        }
    }
    _CreateInterstitalAd() {
        if (StringUtils_1.default.IsNullOrEmpty(this.platformData.interstitialId)) {
            console.log("无有效的插页广告ID,取消加载");
            return;
        }
        this._interstitalFailedCount = 0;
        let intAdObj = {};
        intAdObj["adUnitId"] = this.platformData.interstitialId;
        this._intersitialAd = this._base.createInterstitialAd(intAdObj);
        if (!this._intersitialAd)
            return;
        this._intersitialAd.onLoad(() => {
            console.log("插页广告加载成功");
            this._isInterstitialLoaded = true;
        });
        this._intersitialAd.onError((err) => {
            this._interstitalFailedCount++;
            console.error("插页广告加载失败", err);
            if (this._interstitalFailedCount > 10) {
                console.log("第", this._interstitalFailedCount, "次重新加载插页广告");
                // 失败自动加载广告
                this._intersitialAd.load();
            }
        });
    }
    _CreateVideoAd() {
        console.log('vedio ad id', this.platformData.rewardVideoId);
        if (!this._cacheVideoAD) {
            console.log("当前策略为不缓存视频广告");
            return;
        }
        let createRewardedVideoAd = this._base["createRewardedVideoAd"];
        if (createRewardedVideoAd == null) {
            console.error("无createRewardedVideoAd方法,跳过初始化");
            return;
        }
        if (StringUtils_1.default.IsNullOrEmpty(this.platformData.rewardVideoId)) {
            console.log("无有效的视频广告ID,取消加载");
            return;
        }
        this._videoFailedCount = 0;
        let videoObj = {};
        videoObj["adUnitId"] = this.platformData.rewardVideoId; // "adunit-5631637236cf16b6";
        this._rewardVideo = createRewardedVideoAd(videoObj);
        this._rewardVideo.onLoad(() => {
            console.log("视频广告加载成功");
            this._isVideoLoaded = true;
        });
        this._rewardVideo.onError((res) => {
            this._videoFailedCount++;
            console.error("视频广告加载失败", res);
            if (this._videoFailedCount > 10) {
                console.log("第", this._videoFailedCount, "次重新加载视频广告");
                // 失败自动加载广告
                this._rewardVideo.load();
            }
        });
        this._rewardVideo.onClose((res) => {
            Laya.stage.event(PlatformCommonEventId_1.PlatformCommonEvent.RESUM_AUDIO);
            console.log("视频回调", res);
            let isEnd = res["isEnded"];
            // 修复广告bug
            Awaiters_1.default.NextFrame().then(() => {
                if (isEnd) {
                    if (this._rewardSuccessed)
                        this._rewardSuccessed.run();
                }
                else {
                    if (this._rewardSkipped)
                        this._rewardSkipped.run();
                }
            });
        });
    }
    _CreateBannerAd() {
        if (StringUtils_1.default.IsNullOrEmpty(this.platformData.bannerId)) {
            console.log("无有效的banner广告ID,取消加载");
            return;
        }
        let windowWidth = this._base.getSystemInfoSync().windowWidth;
        let windowHeight = this._base.getSystemInfoSync().windowHeight;
        let bannerObj = {};
        bannerObj["adUnitId"] = this.platformData.bannerId; // "adunit-b48894d44d318e5a";
        bannerObj["adIntervals"] = 30;
        let styleObj = {};
        styleObj["left"] = 0;
        styleObj["top"] = 0;
        styleObj["width"] = 300;
        bannerObj["style"] = styleObj;
        this._bannerAd = this._base.createBannerAd(bannerObj);
        this._isBannerLoaded = false;
        this._bannerAd.onLoad(() => {
            console.log("banner加载成功");
            this._isBannerLoaded = true;
            this._bannerAd.style.top = windowHeight - this._bannerAd.style.realHeight;
            this._bannerAd.style.left = (windowWidth - this._bannerAd.style.realWidth) / 2;
        });
        this._bannerAd.onError((res) => {
            console.error("banner广告加载失败", res);
        });
    }
    IsBannerAvaliable() {
        return this._isBannerLoaded;
    }
    IsVideoAvaliable() {
        return this._isVideoLoaded;
    }
    IsInterstitalAvaliable() {
        return this._isInterstitialLoaded;
    }
    ShowBannerAd() {
        if (!this.IsBannerAvaliable()) {
            return;
        }
        this._bannerAd.show();
    }
    HideBannerAd() {
        this._bannerAd.hide();
    }
    _DoCacheShowVideo(onSuccess, onSkipped) {
        if (!this._isVideoLoaded) {
            console.error("视频广告尚未加载好");
            return;
        }
        this._rewardSuccessed = onSuccess;
        this._rewardSkipped = onSkipped;
        this._isVideoLoaded = false;
        Laya.stage.event(PlatformCommonEventId_1.PlatformCommonEvent.PAUSE_AUDIO);
        this._rewardVideo.show();
    }
    _DoNoCacheShowVideo(onSuccess, onSkipped) {
        this._rewardSuccessed = onSuccess;
        this._rewardSkipped = onSkipped;
        if (StringUtils_1.default.IsNullOrEmpty(this.platformData.rewardVideoId)) {
            console.log("无有效的视频广告ID,取消加载");
            onSkipped.run();
            return;
        }
        let createRewardedVideoAd = this._base["createRewardedVideoAd"];
        if (createRewardedVideoAd == null) {
            console.error("无createRewardedVideoAd方法,跳过初始化");
            onSkipped.run();
            return;
        }
        this._videoFailedCount = 0;
        let videoObj = {};
        videoObj["adUnitId"] = this.platformData.rewardVideoId; // "adunit-5631637236cf16b6";
        if (this._rewardVideo) {
            this._rewardVideo.offClose(this.onVideoClose);
        }
        this._rewardVideo = createRewardedVideoAd(videoObj);
        this._rewardVideo.onLoad(() => {
            console.log("视频广告加载成功");
            this._isVideoLoaded = true;
        });
        this._rewardVideo.onError((res) => {
            this._videoFailedCount++;
            console.error("视频广告加载失败", res, this._videoFailedCount);
        });
        this._rewardVideo.onClose((res) => {
            Laya.stage.event(PlatformCommonEventId_1.PlatformCommonEvent.RESUM_AUDIO);
            console.log("视频回调", res);
            let isEnd = res["isEnded"];
            Awaiters_1.default.NextFrame().then(() => {
                if (isEnd) {
                    if (this._rewardSuccessed)
                        this._rewardSuccessed.run();
                }
                else {
                    if (this._rewardSkipped)
                        this._rewardSkipped.run();
                }
            });
        });
        this._rewardVideo.load().then(() => {
            console.log("激励视频 加载成功");
            // 加载成功后 再显示广告
            return this._rewardVideo.show().then(() => {
                //
            }).catch((err) => {
                console.error(err);
            });
            ;
        });
    }
    onVideoClose(res) {
        Laya.stage.event(PlatformCommonEventId_1.PlatformCommonEvent.RESUM_AUDIO);
        console.log("视频回调", res);
        let isEnd = res["isEnded"];
        Awaiters_1.default.NextFrame().then(() => {
            if (isEnd) {
                if (this._rewardSuccessed)
                    this._rewardSuccessed.run();
            }
            else {
                if (this._rewardSkipped)
                    this._rewardSkipped.run();
            }
        });
    }
    ShowRewardVideoAd(onSuccess, onSkipped) {
        if (this._cacheVideoAD) {
            this._DoCacheShowVideo(onSuccess, onSkipped);
        }
        else {
            this._DoNoCacheShowVideo(onSuccess, onSkipped);
        }
    }
    ShowRewardVideoAdAsync() {
        return new Promise(function (resolve) {
            PlatformManagerProxy_1.default.instance.PlatformInstance.ShowRewardVideoAd(Laya.Handler.create(this, () => {
                resolve(true);
            }), Laya.Handler.create(this, () => {
                resolve(false);
            }));
        });
    }
    ShowInterstitalAd() {
        if (!this._isInterstitialLoaded) {
            console.error("插页广告尚未加载好");
            return;
        }
        this._intersitialAd.show();
    }
    GetFromAppId() {
        if (this.lauchOption.referrerInfo == null) {
            return null;
        }
        if (StringUtils_1.default.IsNullOrEmpty(this.lauchOption.referrerInfo.appId)) {
            return null;
        }
        return this.lauchOption.referrerInfo.appId;
    }
    /**
     * 小游戏回到前台的事件
     */
    _OnShow(res) {
        console.log(PlatformManagerProxy_1.default.platformStr, "OnShow", res);
        PlatformManagerProxy_1.default.instance.PlatformInstance.lauchOption = res;
        PlatformManagerProxy_1.default.instance.PlatformInstance._CheckUpdate();
        this.NavigateToAppSuccess = null;
        Awaiters_1.default.NextFrame().then(() => {
            if (PlatformManagerProxy_1.default.instance.PlatformInstance.onResume) {
                PlatformManagerProxy_1.default.instance.PlatformInstance.onResume.runWith(res);
            }
        });
    }
    /**
     * 小游戏退出前台的事件
     */
    _OnHide(res) {
        console.log(PlatformManagerProxy_1.default.platformStr, "OnHide", res);
        if (PlatformManagerProxy_1.default.instance.PlatformInstance.onPause) {
            PlatformManagerProxy_1.default.instance.PlatformInstance.onPause.runWith(res);
        }
        if (this.NavigateToAppSuccess) {
            this.NavigateToAppSuccess();
        }
    }
    ShareAppMessage(shareInfo, onSuccess, onFailed) {
        console.log("分享消息", shareInfo);
        let shareObj = WXPlatform._WrapShareInfo(shareInfo);
        this._base.shareAppMessage(shareObj);
        if (onSuccess) {
            onSuccess.run();
        }
    }
    LoadSubpackage(name, onSuccess, onFailed, onProgress) {
        if (this._base['loadSubpackage'] == null) {
            console.log("无加载子包方法,跳过加载子包", name);
            if (onSuccess) {
                onSuccess.run();
            }
            return;
        }
        let loadObj = {};
        loadObj["name"] = name;
        loadObj["success"] = () => {
            console.log("分包加载成功", name);
            if (onSuccess) {
                onSuccess.run();
            }
        };
        loadObj["fail"] = () => {
            console.error("分包加载失败", name);
            if (onFailed) {
                onFailed.run();
            }
        };
        let loadTask = this._base.loadSubpackage(loadObj);
        loadTask.onProgressUpdate((res) => {
            if (Laya.Browser.onMobile) {
                console.log("分包加载进度", res);
            }
            if (onProgress) {
                onProgress.runWith(res.progress / 100);
            }
        });
    }
    RecordEvent(eventId, param) {
        console.log("记录事件", eventId, param);
        let aldSendEvent = this._base["aldSendEvent"];
        if (aldSendEvent == null) {
            console.error("阿拉丁sdk尚未接入,请检查配置");
            return;
        }
        if (param != null) {
            aldSendEvent(eventId, param);
        }
        else {
            aldSendEvent(eventId);
        }
    }
    /**
     * 创建分享视频按钮
     * @param x
     * @param y
     * @param width
     * @param height
     */
    CreateShareVideoBtn(x, y, width, height) {
        let btnObj = {};
        btnObj.style = {
            left: x * this._cacheScreenScale,
            top: y * this._cacheScreenScale,
            height: height * this._cacheScreenScale,
            width: width * this._cacheScreenScale
        };
        btnObj.share = {
            query: {
                tick: 1
            },
            bgm: "",
            timeRange: [0, 60 * 1000]
        };
        if (this._shareVideoBtn == null) {
            this._shareVideoBtn = this._base.createGameRecorderShareButton(btnObj);
        }
        else {
            this._shareVideoBtn.show();
        }
    }
    /**
     * 隐藏分享视频按钮
     */
    HideShareVideoBtn() {
        if (this._shareVideoBtn != null) {
            this._shareVideoBtn.hide();
        }
    }
    ShowToast(str) {
        this._base.showToast({
            title: str,
            duration: 2000
        });
    }
    OpenGameBox(appIds) {
        console.error("当前平台", PlatformManagerProxy_1.default.platformStr, "暂不支持互推游戏盒子");
    }
    NavigateToApp(appid, path, extra, showGC, isbanner, adid) {
        return new Promise((resolve, reject) => {
            if (showGC) {
                // GlobalUnit.gameManager.GameOver();
            }
            // this.NavigateToAppSuccess = null;
            wx.navigateToMiniProgram({
                appId: appid,
                path: path,
                extraData: extra,
                envVersion: '',
                success: (res) => {
                    console.log('小游戏跳转成功', res);
                    resolve(true);
                },
                fail: () => {
                    console.log('小游戏跳转失败：');
                    reject(false);
                    if (showGC) {
                        //
                    }
                },
                complete: () => { }
            });
        });
    }
    createShortcut() {
        console.log('暂未实现');
    }
}
exports.default = WXPlatform;


/***/ }),

/***/ "./src/aTGame/Platform/PlatformManager.ts":
/*!************************************************!*\
  !*** ./src/aTGame/Platform/PlatformManager.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const BDData_1 = __webpack_require__(/*! ../../cFrameBridge/Platform/Data/BDData */ "./src/cFrameBridge/Platform/Data/BDData.ts");
const OPPOData_1 = __webpack_require__(/*! ../../cFrameBridge/Platform/Data/OPPOData */ "./src/cFrameBridge/Platform/Data/OPPOData.ts");
const QQData_1 = __webpack_require__(/*! ../../cFrameBridge/Platform/Data/QQData */ "./src/cFrameBridge/Platform/Data/QQData.ts");
const QTTData_1 = __webpack_require__(/*! ../../cFrameBridge/Platform/Data/QTTData */ "./src/cFrameBridge/Platform/Data/QTTData.ts");
const TTData_1 = __webpack_require__(/*! ../../cFrameBridge/Platform/Data/TTData */ "./src/cFrameBridge/Platform/Data/TTData.ts");
const WXData_1 = __webpack_require__(/*! ../../cFrameBridge/Platform/Data/WXData */ "./src/cFrameBridge/Platform/Data/WXData.ts");
const ConsoleEx_1 = __webpack_require__(/*! ../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const BDPlatform_1 = __webpack_require__(/*! ./PlatformClass/BDPlatform */ "./src/aTGame/Platform/PlatformClass/BDPlatform.ts");
const DefaultPlatform_1 = __webpack_require__(/*! ./PlatformClass/DefaultPlatform */ "./src/aTGame/Platform/PlatformClass/DefaultPlatform.ts");
const OppoPlatform_1 = __webpack_require__(/*! ./PlatformClass/OppoPlatform */ "./src/aTGame/Platform/PlatformClass/OppoPlatform.ts");
const QQPlatform_1 = __webpack_require__(/*! ./PlatformClass/QQPlatform */ "./src/aTGame/Platform/PlatformClass/QQPlatform.ts");
const QTTPlatform_1 = __webpack_require__(/*! ./PlatformClass/QTTPlatform */ "./src/aTGame/Platform/PlatformClass/QTTPlatform.ts");
const TTPlatform_1 = __webpack_require__(/*! ./PlatformClass/TTPlatform */ "./src/aTGame/Platform/PlatformClass/TTPlatform.ts");
const WXPlatform_1 = __webpack_require__(/*! ./PlatformClass/WXPlatform */ "./src/aTGame/Platform/PlatformClass/WXPlatform.ts");
const PlatformManagerProxy_1 = __webpack_require__(/*! ./PlatformManagerProxy */ "./src/aTGame/Platform/PlatformManagerProxy.ts");
/**
 * 平台管理器
 */
class PlatformManager {
    static get instance() {
        if (this._instance == null) {
            this._instance = new PlatformManager();
        }
        return this._instance;
    }
    /** 获取平台实例 */
    static get PlatformInstance() {
        if (!this.instance.m_platformInstance) {
            console.error(...ConsoleEx_1.default.packError('还没有设置过平台实例代理！'));
        }
        return this.instance.m_platformInstance;
    }
    /**
     * 初始化平台
     * @param appId
     */
    init() {
        if (this.m_platformInstance != null) {
            console.error(...ConsoleEx_1.default.packError("已调用过平台创建为", PlatformManagerProxy_1.default.GetPlatformStr(this.m_platformInstance.platform), "不能重复创建"));
            return this.m_platformInstance;
        }
        let isQTT = window["qttGame"] != null;
        let isTT = window["tt"] != null;
        //获取平台实例
        let result;
        if (isTT) {
            result = new TTPlatform_1.default();
            //
            this.m_platformData = new TTData_1.default();
        }
        else if (Laya.Browser.onMiniGame) {
            result = new WXPlatform_1.default();
            //
            this.m_platformData = new WXData_1.default();
        }
        else if (Laya.Browser.onBDMiniGame) {
            result = new BDPlatform_1.default();
            //
            this.m_platformData = new BDData_1.default();
        }
        else if (isQTT) {
            result = new QTTPlatform_1.default();
            //
            this.m_platformData = new QTTData_1.default();
        }
        else if (Laya.Browser.onQQMiniGame) {
            result = new QQPlatform_1.default();
            //
            this.m_platformData = new QQData_1.default();
        }
        else if (Laya.Browser.onQGMiniGame) {
            result = new OppoPlatform_1.default();
            //
            this.m_platformData = new OPPOData_1.default();
        }
        else {
            console.warn(...ConsoleEx_1.default.packWarn("未识别平台,默认创建为web"));
            result = new DefaultPlatform_1.default();
        }
        this.m_platformInstance = result;
        //设置代理
        PlatformManagerProxy_1.default.instance.PlatformInstance = result;
        //设置到全局
        window['$Platform'] = this.m_platformInstance;
        //
        console.log(...ConsoleEx_1.default.packPlatform("平台实例创建完成", PlatformManagerProxy_1.default.GetPlatformStr(this.m_platformInstance.platform)));
    }
    /**
     * 初始化平台
     */
    initPlatform() {
        //
        this.m_platformInstance.Init(this.m_platformData);
        //
        console.log(...ConsoleEx_1.default.packPlatform('平台初始化完成'));
    }
}
exports.default = PlatformManager;


/***/ }),

/***/ "./src/aTGame/Platform/PlatformManagerProxy.ts":
/*!*****************************************************!*\
  !*** ./src/aTGame/Platform/PlatformManagerProxy.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ConsoleEx_1 = __webpack_require__(/*! ../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const RootClassProxy_1 = __webpack_require__(/*! ../Root/RootClassProxy */ "./src/aTGame/Root/RootClassProxy.ts");
const EPlatformType_1 = __webpack_require__(/*! ./T/EPlatformType */ "./src/aTGame/Platform/T/EPlatformType.ts");
/**
 * 平台代理类
 */
class PlatformManagerProxy extends RootClassProxy_1.default {
    static get instance() {
        if (this._instance == null) {
            this._instance = new PlatformManagerProxy();
        }
        return this._instance;
    }
    /** 获取平台实例 */
    get PlatformInstance() {
        if (!this.m_platformInstance) {
            console.error(...ConsoleEx_1.default.packError('还没有设置过平台实例代理！'));
        }
        return this.m_platformInstance;
    }
    /** 设置平台实例 */
    set PlatformInstance(_instance) {
        this.m_platformInstance = _instance;
    }
    /**
     * 获取当前平台名字
     */
    static get platformStr() {
        return PlatformManagerProxy.GetPlatformStr(this._instance.m_platformInstance.platform);
    }
    /**
     * 获取平台名字
     * @param platformEnum 平台类型
     */
    static GetPlatformStr(platformEnum) {
        switch (platformEnum) {
            case EPlatformType_1.EPlatformType.None:
                return "未识别";
            case EPlatformType_1.EPlatformType.Web:
                return "网页";
            case EPlatformType_1.EPlatformType.BD:
                return "百度";
            case EPlatformType_1.EPlatformType.OPPO:
                return "Oppo";
            case EPlatformType_1.EPlatformType.QQ:
                return "QQ";
            case EPlatformType_1.EPlatformType.TT:
                return "头条";
            case EPlatformType_1.EPlatformType.VIVO:
                return "Vivo";
            case EPlatformType_1.EPlatformType.WX:
                return "微信";
            case EPlatformType_1.EPlatformType.QTT:
                return "趣头条";
            default:
                return "未定义" + platformEnum;
        }
    }
}
exports.default = PlatformManagerProxy;


/***/ }),

/***/ "./src/aTGame/Platform/Record/DefaultRecordManager.ts":
/*!************************************************************!*\
  !*** ./src/aTGame/Platform/Record/DefaultRecordManager.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const PlatformManagerProxy_1 = __webpack_require__(/*! ../PlatformManagerProxy */ "./src/aTGame/Platform/PlatformManagerProxy.ts");
/**
 * 默认录屏管理器
 */
class DefaultRecordManager {
    constructor() {
        this.supportRecord = false;
        this.isRecording = false;
        this.isPausing = false;
        this.isRecordSuccess = false;
    }
    StartRecord(onStart, onOverTime) {
        console.log("该平台" + PlatformManagerProxy_1.default.platformStr + "不支持录制视频");
    }
    StopRecord(onStop) {
        console.log("该平台" + PlatformManagerProxy_1.default.platformStr + "不支持录制视频");
    }
    Pause(onPause) {
        console.log("该平台" + PlatformManagerProxy_1.default.platformStr + "不支持录制视频");
    }
    Resume(onReume) {
        console.log("该平台" + PlatformManagerProxy_1.default.platformStr + "不支持录制视频");
    }
    RecordClip(timeRange) {
        console.log("该平台" + PlatformManagerProxy_1.default.platformStr + "不支持录制视频");
    }
    ShareVideo(onSuccess, onCancel, onFailed) {
        if (onFailed) {
            onFailed.run();
        }
    }
}
exports.default = DefaultRecordManager;


/***/ }),

/***/ "./src/aTGame/Platform/Record/TTRecordManager.ts":
/*!*******************************************************!*\
  !*** ./src/aTGame/Platform/Record/TTRecordManager.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const DefaultRecordManager_1 = __webpack_require__(/*! ./DefaultRecordManager */ "./src/aTGame/Platform/Record/DefaultRecordManager.ts");
/**
 * 头条录屏管理器
 */
class TTRecordManager extends DefaultRecordManager_1.default {
    constructor(base) {
        super();
        this.supportRecord = true;
        this._base = base;
        this.isRecording = false;
        this.isRecordSuccess = false;
        this.isPausing = false;
        this._nativeManager = this._base.getGameRecorderManager();
        this._nativeManager.onStart((res) => {
            console.log("平台开始录制", res);
            this.isRecording = true;
            this.isRecordSuccess = false;
            this._cacheStartHandle && this._cacheStartHandle.run();
        });
        this._nativeManager.onStop((res) => {
            console.log("平台停止录制", res);
            this.videoSavePath = res.videoPath;
            this.isRecording = false;
            this.isRecordSuccess = true;
            if (this._cacheStopHandle) {
                this._cacheStopHandle.run();
            }
            else if (this._cacheOverTimeHandle) {
                this._cacheOverTimeHandle.run();
            }
        });
        this._nativeManager.onError((err) => {
            console.log("录制发生错误", err);
            this.isRecordSuccess = false;
            this.isRecording = false;
        });
        this._nativeManager.onPause((res) => {
            console.log("暂停录制视频", res);
            this.isPausing = true;
            this._cachePauseHandle && this._cachePauseHandle.run();
        });
        this._nativeManager.onResume((res) => {
            console.log("暂停录制视频", res);
            this.isPausing = false;
            this._cacheResumeHandle && this._cacheResumeHandle.run();
        });
    }
    StartRecord(onStart, onOverTime) {
        console.log("调用开始录屏");
        this._cacheStartHandle = onStart;
        this._cacheOverTimeHandle = onOverTime;
        this._cacheStopHandle = null;
        this._nativeManager.start({ duration: 300 });
    }
    Pause(onPause) {
        if (!this.isRecording) {
            console.error("当前未开始录制,无法暂停录制");
            return;
        }
        if (this.isPausing) {
            console.log("当前录制状态已暂停");
            return;
        }
        console.log("调用暂停录制");
        this._cachePauseHandle = onPause;
        this._nativeManager.pause();
    }
    Resume(onReume) {
        if (!this.isRecording) {
            console.error("当前未开始录制,无法恢复录制");
            return;
        }
        if (!this.isPausing) {
            console.log("当前录制状态正在进行中");
            return;
        }
        console.log("调用恢复录制");
        this._cacheResumeHandle = onReume;
        this._nativeManager.resume();
    }
    RecordClip(timeRange) {
        if (!this.isRecording) {
            console.error("当前未开始录制,无法记录精彩时刻");
            return;
        }
        if (this.isPausing) {
            console.log("当前录制状态已暂停,无法记录精彩时刻");
            return;
        }
        if (timeRange == null) {
            this._nativeManager.recordClip({});
        }
        else {
            this._nativeManager.recordClip({ timeRange: timeRange });
        }
    }
    StopRecord(onStop) {
        console.log("调用结束录屏");
        this._cacheStopHandle = onStop;
        this._nativeManager.stop();
    }
    ShareVideo(onSuccess, onCancel, onFailed) {
        if (this.isRecordSuccess) {
            let shareData = {
                channel: "video",
                title: "",
                desc: "",
                imageUrl: "",
                templateId: this.Platform.platformData.shareId,
                query: "",
                extra: {
                    videoPath: this.videoSavePath,
                    videoTopics: ['抖音小游戏', '猫眼金币跑酷']
                },
                success() {
                    if (onSuccess) {
                        onSuccess.run();
                    }
                },
                fail(e) {
                    if (onCancel) {
                        onCancel.run();
                    }
                }
            };
            this._base.shareAppMessage(shareData);
        }
        else {
            console.log("无视频可以分享");
            if (onFailed) {
                onFailed.run();
            }
        }
    }
}
exports.default = TTRecordManager;


/***/ }),

/***/ "./src/aTGame/Platform/Record/WebRecordManager.ts":
/*!********************************************************!*\
  !*** ./src/aTGame/Platform/Record/WebRecordManager.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WebRecordManager = void 0;
const DefaultRecordManager_1 = __webpack_require__(/*! ./DefaultRecordManager */ "./src/aTGame/Platform/Record/DefaultRecordManager.ts");
/**
 * web录屏工具
 */
class WebRecordManager extends DefaultRecordManager_1.default {
    constructor() {
        super(...arguments);
        this.supportRecord = false;
    }
    ShareVideo(onSuccess, onCancel, onFailed) {
        if (this.supportRecord) {
            console.log("强制模拟成功");
            if (onSuccess) {
                onSuccess.run();
            }
        }
        else {
            console.log("强制模拟失败");
            if (onFailed) {
                onFailed.run();
            }
        }
    }
}
exports.WebRecordManager = WebRecordManager;


/***/ }),

/***/ "./src/aTGame/Platform/ShareManager.ts":
/*!*********************************************!*\
  !*** ./src/aTGame/Platform/ShareManager.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const MathUtils_1 = __webpack_require__(/*! ../Utils/MathUtils */ "./src/aTGame/Utils/MathUtils.ts");
const PlatformManagerProxy_1 = __webpack_require__(/*! ./PlatformManagerProxy */ "./src/aTGame/Platform/PlatformManagerProxy.ts");
const ShareInfo_1 = __webpack_require__(/*! ./T/ShareInfo */ "./src/aTGame/Platform/T/ShareInfo.ts");
/**
 * 分享管理器
 */
class ShareManager {
    constructor() {
        this._shareInfoList = [];
    }
    static get instance() {
        if (this._instance == null) {
            this._instance = new ShareManager();
        }
        return this._instance;
    }
    AddShareInfo(shareInfo) {
        for (let getInfo of this._shareInfoList) {
            if (getInfo.shareId == shareInfo.shareId)
                return;
        }
        this._shareInfoList.push(shareInfo);
    }
    GetShareInfo(id = null) {
        if (this._shareInfoList.length == 0) {
            let fakeShareInfo = new ShareInfo_1.ShareInfo();
            return fakeShareInfo;
        }
        if (id != null) {
            for (let shareInfo of this._shareInfoList) {
                if (shareInfo.shareId == id)
                    return shareInfo;
            }
        }
        let randomShare = MathUtils_1.default.RandomFromArray(this._shareInfoList);
        return randomShare;
    }
    ShareAppMessage(shareInfo) {
        PlatformManagerProxy_1.default.instance.PlatformInstance.ShareAppMessage(shareInfo, Laya.Handler.create(this, () => {
            console.log("分享成功");
        }), null);
    }
}
exports.default = ShareManager;


/***/ }),

/***/ "./src/aTGame/Platform/T/EPlatformType.ts":
/*!************************************************!*\
  !*** ./src/aTGame/Platform/T/EPlatformType.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EPlatformType = void 0;
/**
 * 平台类型枚举
 */
var EPlatformType;
(function (EPlatformType) {
    /** 未定义 */
    EPlatformType["None"] = "EPlatformType_None";
    /** 网页平台 */
    EPlatformType["Web"] = "EPlatformType_Web";
    /** 微信小游戏 */
    EPlatformType["WX"] = "EPlatformType_WX";
    /** 头条，抖音小游戏 */
    EPlatformType["TT"] = "EPlatformType_TT";
    /** QQ小游戏 */
    EPlatformType["QQ"] = "EPlatformType_QQ";
    /** VIVO小游戏 */
    EPlatformType["VIVO"] = "EPlatformType_VIVO";
    /** OPPO小游戏 */
    EPlatformType["OPPO"] = "EPlatformType_OPPO";
    /** 百度小游戏 */
    EPlatformType["BD"] = "EPlatformType_BD";
    /** 小米戏游戏 */
    EPlatformType["KG"] = "EPlatformType_KG";
    /** 阿里小游戏 */
    EPlatformType["Alipay"] = "EPlatformType_Alipay";
    /** 华为小游戏 */
    EPlatformType["HW"] = "EPlatformType_HW";
    /** 趣头条 */
    EPlatformType["QTT"] = "EPlatformType_QTT";
})(EPlatformType = exports.EPlatformType || (exports.EPlatformType = {}));


/***/ }),

/***/ "./src/aTGame/Platform/T/ShareInfo.ts":
/*!********************************************!*\
  !*** ./src/aTGame/Platform/T/ShareInfo.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShareInfo = void 0;
/**
 * 分享书籍实例
 */
class ShareInfo {
}
exports.ShareInfo = ShareInfo;


/***/ }),

/***/ "./src/aTGame/Res/EKeyResName.ts":
/*!***************************************!*\
  !*** ./src/aTGame/Res/EKeyResName.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EKeyResName = void 0;
/**
 * 关键资源点名字枚举
 */
var EKeyResName;
(function (EKeyResName) {
    /** 根目录 */
    EKeyResName["RootRes"] = "res";
    /** 配置表目录 */
    EKeyResName["Config"] = "Config";
    /** 字体目录 */
    EKeyResName["Font"] = "Font";
    /** FGUI资源目录 */
    EKeyResName["FGUI"] = "FGUI";
    /** 关卡配置表目录 */
    EKeyResName["LvConfig"] = "LvConfig";
    /** 其它目录 */
    EKeyResName["Other"] = "Other";
    /** icon目录 */
    EKeyResName["icon"] = "icon";
    /** img目录 */
    EKeyResName["img"] = "img";
    /** 音乐文件目录 */
    EKeyResName["music"] = "music";
    /** 音效文件目录 */
    EKeyResName["sound"] = "sound";
    /** 皮肤文件目录 */
    EKeyResName["skin"] = "skin";
})(EKeyResName = exports.EKeyResName || (exports.EKeyResName = {}));


/***/ }),

/***/ "./src/aTGame/Res/EssentialResUrls.ts":
/*!********************************************!*\
  !*** ./src/aTGame/Res/EssentialResUrls.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ELevelSceneName_1 = __webpack_require__(/*! ../../cFrameBridge/Config/ELevelSceneName */ "./src/cFrameBridge/Config/ELevelSceneName.ts");
const ConsoleEx_1 = __webpack_require__(/*! ../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const EKeyResName_1 = __webpack_require__(/*! ./EKeyResName */ "./src/aTGame/Res/EKeyResName.ts");
const KeyResManager_1 = __webpack_require__(/*! ./KeyResManager */ "./src/aTGame/Res/KeyResManager.ts");
/**
 * 必要的游戏资源路径
 * 游戏必须要得资源，会在游戏加载时被默认加载
 */
class EssentialResUrls {
    /**
     * 获取所有的其他资源列表
     * 资源列表必须在EssentialResUrls类中获取，便于清理
     */
    static EssentialOtherResUrl() {
        let _URLs = [];
        //添加资源
        //
        //
        return _URLs;
    }
    //* ----------单个资源---------- *//
    /**
     * 获取关卡配置文件
     * @param _name 场景名字
     */
    static levelConfigURL(_name) {
        return KeyResManager_1.default.instance.getResURL(EKeyResName_1.EKeyResName.LvConfig) + _name + '.json';
    }
    /**
     * 获取配置表RUL
     * @param _name 配置表名字
     */
    static ConfigURL(_name) {
        return KeyResManager_1.default.instance.getResURL(EKeyResName_1.EKeyResName.Config) + _name;
    }
    /**
     * FGUI包
     * @param _name 包名
     */
    static FGUIPack(_name) {
        return KeyResManager_1.default.instance.getResURL(EKeyResName_1.EKeyResName.FGUI) + _name;
    }
    /**
     * 字体地址
     * @param _name 字体名字，加后缀
     */
    static fontURL(_name) {
        return KeyResManager_1.default.instance.getResURL(EKeyResName_1.EKeyResName.Font) + _name;
    }
    /**
     * 预制体资源路径
     * @param prefab 预制体名字
     */
    static prefab_url(prefab) {
        //先在缓存中查找场景名字
        if (this._prefabsSceneCache[prefab]) {
            return KeyResManager_1.default.instance.getResURL(EKeyResName_1.EKeyResName[this._prefabsSceneCache[prefab]]) + 'Conventional/' + prefab + '.lh';
        }
        //判断该预制体在那个场景中被导出的
        for (let _i in this._AllScenePrefabsNames) {
            if (this._AllScenePrefabsNames[_i].indexOf('@' + prefab + '@') != -1) {
                //添加到缓存
                this._prefabsSceneCache[prefab] = _i;
                //
                return KeyResManager_1.default.instance.getResURL(EKeyResName_1.EKeyResName[_i]) + 'Conventional/' + prefab + '.lh';
            }
        }
        //
        console.error(...ConsoleEx_1.default.packError('没有在场景找到预制体', prefab, '可能是没有导出场景预制体列表导致的。'));
    }
}
exports.default = EssentialResUrls;
//所有预制体名字列表
EssentialResUrls._AllScenePrefabsNames = new ELevelSceneName_1.AllScenePrefabsNames();
EssentialResUrls._prefabsSceneCache = {};


/***/ }),

/***/ "./src/aTGame/Res/KeyResManager.ts":
/*!*****************************************!*\
  !*** ./src/aTGame/Res/KeyResManager.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ELevelSceneName_1 = __webpack_require__(/*! ../../cFrameBridge/Config/ELevelSceneName */ "./src/cFrameBridge/Config/ELevelSceneName.ts");
const FrameCDNURL_1 = __webpack_require__(/*! ../../cFrameBridge/FrameCDNURL */ "./src/cFrameBridge/FrameCDNURL.ts");
const FrameSubpackages_1 = __webpack_require__(/*! ../../cFrameBridge/FrameSubpackages */ "./src/cFrameBridge/FrameSubpackages.ts");
const ConsoleEx_1 = __webpack_require__(/*! ../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const EKeyResName_1 = __webpack_require__(/*! ./EKeyResName */ "./src/aTGame/Res/EKeyResName.ts");
/**
 * 关键资源点列表管理器
 */
class KeyResManager {
    constructor() {
        //关键资源列表
        this.m_KeyResList = {};
        //副本
        this.m_KeyResList_ = {};
        //注册关键资源目录
        this.m_KeyResList = {
            [EKeyResName_1.EKeyResName.RootRes]: EKeyResName_1.EKeyResName.RootRes + '/',
            [EKeyResName_1.EKeyResName.Config]: EKeyResName_1.EKeyResName.RootRes + '/' + EKeyResName_1.EKeyResName.Config + '/',
            [EKeyResName_1.EKeyResName.FGUI]: EKeyResName_1.EKeyResName.RootRes + '/' + EKeyResName_1.EKeyResName.FGUI + '/',
            [EKeyResName_1.EKeyResName.LvConfig]: EKeyResName_1.EKeyResName.RootRes + '/' + EKeyResName_1.EKeyResName.LvConfig + '/',
            [EKeyResName_1.EKeyResName.Font]: EKeyResName_1.EKeyResName.RootRes + '/' + EKeyResName_1.EKeyResName.Font + '/',
            [EKeyResName_1.EKeyResName.Other]: EKeyResName_1.EKeyResName.RootRes + '/' + EKeyResName_1.EKeyResName.Other + '/',
            [EKeyResName_1.EKeyResName.icon]: EKeyResName_1.EKeyResName.RootRes + '/' + EKeyResName_1.EKeyResName.Other + '/' + EKeyResName_1.EKeyResName.icon + '/',
            [EKeyResName_1.EKeyResName.img]: EKeyResName_1.EKeyResName.RootRes + '/' + EKeyResName_1.EKeyResName.Other + '/' + EKeyResName_1.EKeyResName.img + '/',
            [EKeyResName_1.EKeyResName.music]: EKeyResName_1.EKeyResName.RootRes + '/' + EKeyResName_1.EKeyResName.Other + '/' + EKeyResName_1.EKeyResName.music + '/',
            [EKeyResName_1.EKeyResName.sound]: EKeyResName_1.EKeyResName.RootRes + '/' + EKeyResName_1.EKeyResName.Other + '/' + EKeyResName_1.EKeyResName.sound + '/',
            [EKeyResName_1.EKeyResName.skin]: EKeyResName_1.EKeyResName.RootRes + '/' + EKeyResName_1.EKeyResName.Other + '/' + EKeyResName_1.EKeyResName.skin + '/',
        };
        //注入预制体目录
        let _AllPrefabNames = new ELevelSceneName_1.AllScenePrefabsNames();
        for (let _i in _AllPrefabNames) {
            EKeyResName_1.EKeyResName[_i] = _i;
            this.m_KeyResList[EKeyResName_1.EKeyResName[_i]] = EKeyResName_1.EKeyResName.RootRes + '/' + EKeyResName_1.EKeyResName[_i] + '/';
            //
            console.log(...ConsoleEx_1.default.packLogLight('注入预制体资源路径', this.m_KeyResList[EKeyResName_1.EKeyResName[_i]]));
        }
        // console.log(this.m_KeyResList);
        //复制一个副本
        for (let _i in this.m_KeyResList) {
            this.m_KeyResList_[_i] = this.m_KeyResList[_i];
        }
        //
        this.setRes();
    }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new KeyResManager();
        }
        //
        return this._instance;
    }
    ;
    //重置资源路径
    setRes() {
        //重置分包资源路径
        for (let _o of FrameSubpackages_1.default.subpackages) {
            this.editKeyResList(_o.name, _o.root);
        }
        //重置cdn资源路径
        for (let _o of FrameCDNURL_1.default.CDNURLs) {
            this.editKeyResList(_o.name, _o.root);
        }
    }
    /**
     * 判断是否存在某个关键点key
     * @param _key 关键点key
     */
    ifKeyRes(_key) {
        let _if = false;
        for (let _i in EKeyResName_1.EKeyResName) {
            if (_key == EKeyResName_1.EKeyResName[_i]) {
                _if = true;
                break;
            }
        }
        return _if;
    }
    /**
     * 获取一个关键点资源的路径
     * @param _key 关键点key
     */
    getResURL(_key) {
        return this.m_KeyResList[_key];
    }
    /**
     * 修改关键点资源路径
     * @param _key 关键点key
     * @param _str 路径
     */
    editKeyResList(_key, _str) {
        let _replace = this.m_KeyResList_[_key];
        if (!_replace) {
            console.warn(...ConsoleEx_1.default.packWarn('修改资源路径失败，没有' + _key + '这个关键路径！'));
            return;
        }
        else {
            console.log(...ConsoleEx_1.default.packLog('修改关键点资源路径', _replace, '替换成', _str));
        }
        //替换所有资源路径中的关键点路径
        for (let _i in this.m_KeyResList) {
            this.m_KeyResList[_i] = this.m_KeyResList[_i].replace(_replace, _str);
        }
        //
        this.m_KeyResList_[_key] = _str;
    }
}
exports.default = KeyResManager;


/***/ }),

/***/ "./src/aTGame/Res/ResLoad.ts":
/*!***********************************!*\
  !*** ./src/aTGame/Res/ResLoad.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ConsoleEx_1 = __webpack_require__(/*! ../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
/**
 * 资源加载类
 */
class ResLoad {
    /**
     * 加载资源
     * @param urls 资源路径
     * @param onCompleted 完成回调
     * @param onProgress
     */
    static Load(urls, onCompleted, onProgress = null) {
        if (onProgress && onProgress.once) {
            onProgress.once = false;
        }
        //判断是否有内容需要加载
        if (!urls || urls.length == 0) {
            onCompleted.run();
            onProgress.run();
            return;
        }
        Laya.loader.create(urls, onCompleted, onProgress);
    }
    /**
     * 加载2D资源
     * @param urls 资源路径
     * @param onCompleted 完成时回调
     * @param onProgress
     */
    static Load2d(urls, onCompleted, onProgress = null) {
        if (onProgress && onProgress.once) {
            onProgress.once = false;
        }
        //判断是否有内容需要加载
        if (!urls || urls.length == 0) {
            onCompleted.run();
            onProgress.run();
            return;
        }
        Laya.loader.load(urls, onCompleted, onProgress);
    }
    /**
     * 异步加载资源
     * @param urls 资源路径
     * @param onProgress
     */
    static LoadAsync(urls, onProgress = null) {
        //
        return new Promise((resolve) => {
            ResLoad.Load(urls, Laya.Handler.create(null, () => {
                resolve();
            }), onProgress);
        });
    }
    /**
     * 异步加载2D资源
     * @param urls 资源路径
     * @param onProgress
     */
    static Load2dAsync(urls, onProgress = null) {
        //
        return new Promise(function (resolve) {
            ResLoad.Load2d(urls, Laya.Handler.create(null, () => {
                resolve();
            }), onProgress);
        });
    }
    /**
     * 获取资源
     * @param resUrl 资源路径
     * @param noClone 是否不获取克隆的资源
     */
    static Get(resUrl, noClone = false) {
        let getRes = Laya.loader.getRes(resUrl);
        if (getRes == null) {
            console.error(...ConsoleEx_1.default.packError("资源尚未加载", resUrl));
            return null;
        }
        return noClone ? getRes : getRes.clone();
    }
    /**
     * 加载并获取资源
     * @param resUrl 资源路径
     * @param noClone 是否获取克隆的资源
     */
    static LoadAndGet(resUrl, noClone = false) {
        return new Promise((r) => {
            ResLoad.LoadAsync(resUrl).then((_data) => {
                r(ResLoad.Get(resUrl, noClone));
            });
        });
    }
    /**
     * 清理指定资源地址缓存。
     * @param resUrl 资源路径
     */
    static Unload(resUrl) {
        Laya.loader.clearRes(resUrl);
    }
}
exports.default = ResLoad;


/***/ }),

/***/ "./src/aTGame/Res/ResUrl.ts":
/*!**********************************!*\
  !*** ./src/aTGame/Res/ResUrl.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const EKeyResName_1 = __webpack_require__(/*! ./EKeyResName */ "./src/aTGame/Res/EKeyResName.ts");
const KeyResManager_1 = __webpack_require__(/*! ./KeyResManager */ "./src/aTGame/Res/KeyResManager.ts");
/**
 * 资源公共根路径
 */
class ResUrl {
    /**
     * 音乐文件路径
     * @param name 文件名称
     */
    static music_url(name) {
        return KeyResManager_1.default.instance.getResURL(EKeyResName_1.EKeyResName.music) + name + '.mp3';
    }
    /**
     * 音效资源路径
     * @param name 音效名字
     */
    static sound_url(name) {
        return KeyResManager_1.default.instance.getResURL(EKeyResName_1.EKeyResName.sound) + name + '.mp3';
    }
    /**
     * 图标资源路径
     * @param name 图标名称
     */
    static icon_url(name) {
        return KeyResManager_1.default.instance.getResURL(EKeyResName_1.EKeyResName.icon) + name + '.png';
    }
    /**
     * 图片资源路径
     * @param name 图片资源名字
     * @param _suffix 图片资源后缀
     */
    static img_url(name, _suffix = 'png') {
        return KeyResManager_1.default.instance.getResURL(EKeyResName_1.EKeyResName.img) + name + '.' + _suffix;
    }
    /**
     * 皮肤资源路径
     * @param name 皮肤名称
     * @param _suffix 皮肤资源后缀
     */
    static skin_url(name, _suffix = 'png') {
        return KeyResManager_1.default.instance.getResURL(EKeyResName_1.EKeyResName.skin) + name + '.' + _suffix;
    }
}
exports.default = ResUrl;


/***/ }),

/***/ "./src/aTGame/Root/RootClassProxy.ts":
/*!*******************************************!*\
  !*** ./src/aTGame/Root/RootClassProxy.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 类代理类基类 (为需要双向引用的类代理数据)
 * 在该类里面引入的其他类必须没有循环代理问题
 * ! 注意！只能处理静态或者单例类型，并且必须在使用前初始化
 * ! 初始化不要写到constructor方法里面,写到主动调用的方法里面
 */
class RootClassProxy {
    /** 获取代理数据 */
    static get Datas() {
        return this.m_datas;
    }
    /** 设置代理数据 */
    static set Datas(_data) {
        this.m_datas = _data;
    }
    /** 获取代理数据 */
    static get Handlers() {
        return this.m_handlers;
    }
    /** 设置代理数据 */
    static set Handlers(_handler) {
        this.m_handlers = _handler;
    }
}
exports.default = RootClassProxy;
//是否已经设置过代理
RootClassProxy.m_ifSetProxy = false;
/**
 * 踩坑
 * 循环依赖问题产生原因
 * 不是a导入了b，b又导入a引起的
 * 而是a文件实例化了b，b文件有实例化了a引起了
 */ 


/***/ }),

/***/ "./src/aTGame/Test/ConsoleTest.ts":
/*!****************************************!*\
  !*** ./src/aTGame/Test/ConsoleTest.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ConsoleEx_1 = __webpack_require__(/*! ../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const RootTest_1 = __webpack_require__(/*! ./RootTest */ "./src/aTGame/Test/RootTest.ts");
/**
 * 打印测试
 */
class ConsoleTest extends RootTest_1.default {
    constructor() {
        super(...arguments);
        // 打印字符串
        this._consoleExStr = '输出测试';
    }
    //开始测试
    startTest() {
        //
        console.log('->开启测试<-');
        //
        console.log(...ConsoleEx_1.default.packLog(this._consoleExStr));
        console.warn(...ConsoleEx_1.default.packWarn(this._consoleExStr));
        console.error(...ConsoleEx_1.default.packError(this._consoleExStr));
    }
}
exports.default = ConsoleTest;


/***/ }),

/***/ "./src/aTGame/Test/MainTest.ts":
/*!*************************************!*\
  !*** ./src/aTGame/Test/MainTest.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ConsoleTest_1 = __webpack_require__(/*! ./ConsoleTest */ "./src/aTGame/Test/ConsoleTest.ts");
const RootTest_1 = __webpack_require__(/*! ./RootTest */ "./src/aTGame/Test/RootTest.ts");
/**
 * 测试类入口
 */
class MainTest extends RootTest_1.default {
    //开始测试
    startTest() {
        //开始测试
        new ConsoleTest_1.default().startTest();
    }
}
exports.default = MainTest;


/***/ }),

/***/ "./src/aTGame/Test/RootTest.ts":
/*!*************************************!*\
  !*** ./src/aTGame/Test/RootTest.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 测试类基类
 */
class RootTest {
    /**
     * 开始测试
     */
    startTest() { }
}
exports.default = RootTest;


/***/ }),

/***/ "./src/aTGame/UI/FGUI/BaseUIManager.ts":
/*!*********************************************!*\
  !*** ./src/aTGame/UI/FGUI/BaseUIManager.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ConsoleEx_1 = __webpack_require__(/*! ../../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const ArrayUtils_1 = __webpack_require__(/*! ../../Utils/ArrayUtils */ "./src/aTGame/Utils/ArrayUtils.ts");
/**
 * UI管理器基类
 * 因配合UIStateManagerProxy类一起管理UI
 */
class BaseUIManager {
    //
    constructor() {
        //
        this.initUIMediator();
        //
        this._initUIMediator();
    }
    /** 初始化UI调度者列表和代理类 */
    initUIMediator() { }
    //初始化UI列表之后
    _initUIMediator() {
        if (!this.m_UIMediator) {
            console.error(...ConsoleEx_1.default.packError('没有注册UI状态列表'));
        }
        let _length = 0;
        for (let _i in this.m_UIMediator) {
            _length++;
            if (typeof this.m_UIMediator[_i] == "undefined" || !this.m_UIMediator[_i]) {
                console.warn(...ConsoleEx_1.default.packWarn('有一个UIMediator不存在', _i));
            }
        }
        if (_length == 0) {
            console.warn(...ConsoleEx_1.default.packWarn('UI状态列表长度为0'));
        }
        //判断是否注册UI代理
        if (!this.m_UIProxy) {
            console.warn(...ConsoleEx_1.default.packWarn('没有注册UI代理类。'));
        }
        this.m_UIProxy.setProxyMediatroList(this.m_UIMediator);
        //
        let _serialNumber;
        let _serialNumberLenth;
        for (let _i in this.m_UIMediator) {
            this.m_UIMediator[_i].keyId = _i;
            //检测树形结构
            _serialNumber = [];
            this.getUIBelongSerialNumber(this.m_UIMediator[_i], _serialNumber);
            //检测是否有重复使用的附属UI
            _serialNumberLenth = _serialNumber.length;
            _serialNumber = ArrayUtils_1.default.Unique(_serialNumber);
            if (_serialNumberLenth != _serialNumber.length) {
                console.error(...ConsoleEx_1.default.packError('UI调度者', _i, '的附属UI有重复出现！'));
            }
        }
    }
    //获取一个UI调度者的附属UI序号列表
    getUIBelongSerialNumber(_UIMed, _numbers, _ifR = false) {
        if (_UIMed.belongDownUIMediator.length > 0) {
            _UIMed.belongDownUIMediator.forEach((item) => {
                this.getUIBelongSerialNumber(item, _numbers, true);
            });
        }
        //判断是否为附属UI
        if (!_ifR) {
            if (_UIMed.ifBelongUIMediator) {
                console.warn(...ConsoleEx_1.default.packWarn('注意！有一个附属UI调度者被添加进了UI管理器列表中，它将不会被显示。'));
            }
        }
        else {
            if (!_UIMed.ifBelongUIMediator) {
                console.warn(...ConsoleEx_1.default.packWarn('注意！有一个不是附属的UI调度者被添加进了附属列表中'));
            }
        }
        _numbers.push(_UIMed.serialNumber);
        //
        if (_UIMed.belongUpUIMediator.length > 0) {
            _UIMed.belongUpUIMediator.forEach((item) => {
                this.getUIBelongSerialNumber(item, _numbers, true);
            });
        }
    }
}
exports.default = BaseUIManager;


/***/ }),

/***/ "./src/aTGame/UI/FGUI/BaseUIMediator.ts":
/*!**********************************************!*\
  !*** ./src/aTGame/UI/FGUI/BaseUIMediator.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ESpecialUIIndex_1 = __webpack_require__(/*! ./ESpecialUIIndex */ "./src/aTGame/UI/FGUI/ESpecialUIIndex.ts");
const EUILayer_1 = __webpack_require__(/*! ./EUILayer */ "./src/aTGame/UI/FGUI/EUILayer.ts");
const FGuiData_1 = __webpack_require__(/*! ./FGuiData */ "./src/aTGame/UI/FGUI/FGuiData.ts");
const FGuiRootManager_1 = __webpack_require__(/*! ./FGuiRootManager */ "./src/aTGame/UI/FGUI/FGuiRootManager.ts");
/**
 * UI调度者基类(用来控制UI界面)
 * 说明：
 * 单页面一定要单例，且可以通过管理器调用，多个就不行了
 * 在显示或者隐藏回调中不要使用UI状态管理器设置某个UI的状态
 * 不主动打开当前页面无关的页面，如果实在要打开就发送事件通过UI管理器打开
 * 不主动调用Show，Hide方法显示和隐藏其他UI，需要就通过UI状态管理器打开和关闭
 * 可以自己调用自己的Show，Hide方法，但是不能就再UI管理器中打开了
 * 尽量不主动监听一些与页面无关的UI事件,可以自由发出事件
 * 附属UI会在自身UI显示时一起显示，隐藏时一起隐藏，
 */
class BaseUIMediator {
    //
    constructor() {
        /** UI层级类型，必须在初始化时设置 */
        this._layer = EUILayer_1.EUILayer.Panel;
        // 附属UI
        /** 是否属于附属UI调度者 */
        this._ifBelongUIMediator = false;
        /** 属于该UI之下的UI调度者列表 */
        this._belongDownUIMediator = [];
        /** 属于该UI之下的UI调度者列表 */
        this._belongUpUIMediator = [];
        //
        /** 是否显示 */
        this._isShow = false;
        //设置一个唯一的序号
        this.m_serialNumber = BaseUIMediatorGlobalSerialNumber.GlobalSerialNumber;
    }
    /** 当前ui实例 */
    get ui() {
        return this._ui;
    }
    /** 获取唯一序号 */
    get serialNumber() {
        return this.m_serialNumber;
    }
    /** ui层级 */
    get layer() {
        return this._layer;
    }
    /** fgui数据 */
    get _fguiData() {
        return new FGuiData_1.default;
    }
    /** 获取是否属于附属UI调度者 */
    get ifBelongUIMediator() {
        return this._ifBelongUIMediator;
    }
    /** 获取下层的附属UI */
    get belongDownUIMediator() {
        return this._belongDownUIMediator;
    }
    /** 获取上层的附属UI */
    get belongUpUIMediator() {
        return this._belongUpUIMediator;
    }
    /** 是否显示 */
    get isShow() {
        return this._isShow;
    }
    /** 是否删除 */
    get isDispose() {
        return this.ui.isDisposed;
    }
    /** 设置keyId */
    set keyId(_s) {
        this.m_keyId = _s;
    }
    /** 获取keyId */
    get keyId() {
        return this.m_keyId;
    }
    //设置ui到最顶层
    setUIToTopShow() {
        //先判断是否存在ui
        if (this._ui) {
            FGuiRootManager_1.default.setUIToTopShow(this._ui, this._layer);
        }
    }
    /**
     * 显示UI
     */
    Show() {
        //判断是否已经显示过了
        if (this._isShow) {
            //直接设置层级
            this.setUIToTopShow();
            return;
        }
        //显示前回调
        this.OnshowBefore();
        //
        this._isShow = true;
        //判断是不是真的删除了这个UI(为null或者被删除)
        if (!this._ui || (this._ui && this._ui.isDisposed)) {
            //添加ui
            this._ui = FGuiRootManager_1.default.AddUI(this._classDefine, this._fguiData, this._layer);
            //判断是否是单页面
            if (this._layer == EUILayer_1.EUILayer.OneUI) {
                FGuiRootManager_1.default.oneUIs.push(this);
            }
        }
        else {
            this.ui.visible = true;
        }
        //设置该ui层级为最高层
        this.setUIToTopShow();
        //显示结束回调
        this._OnShow();
        //播放动画
        if (this._ui[ESpecialUIIndex_1.ESpecialUIIndex.anim_enter]) {
            let anim = this._ui[ESpecialUIIndex_1.ESpecialUIIndex.anim_enter];
            anim.play(Laya.Handler.create(this, this._CallEnterAnimEnd));
        }
        else {
            //
            this.OnEnterAnimEnd();
        }
    }
    //播放动画完成
    _CallEnterAnimEnd() {
        this.OnEnterAnimEnd();
    }
    /**
     * 进入动画回调,使用时覆盖即可
     */
    OnEnterAnimEnd() { }
    /** 显示之前调用 */
    OnshowBefore() { }
    /** 显示之后调用 */
    _OnShow() { }
    /**
     * 隐藏
     * @param dispose 是否删除
     */
    Hide(dispose = true) {
        if (this._ui == null)
            return;
        if (this._ui.isDisposed)
            return;
        if (!this._isShow)
            return;
        this._isShow = false;
        this.OnHideBefore();
        //播放动画
        if (this._ui[ESpecialUIIndex_1.ESpecialUIIndex.anim_exit]) {
            let anim = this._ui[ESpecialUIIndex_1.ESpecialUIIndex.anim_exit];
            anim.play(Laya.Handler.create(this, this._DoHide, [dispose]));
        }
        else {
            this._DoHide(dispose);
        }
    }
    //隐藏之后
    _DoHide(dispose) {
        //判断是否删除
        if (dispose) {
            this._ui.dispose();
        }
        else {
            this._ui.visible = false;
        }
        //
        this._OnHide();
    }
    /** 隐藏之前调用 */
    OnHideBefore() { }
    /** 隐藏之后调用 */
    _OnHide() { }
}
exports.default = BaseUIMediator;
/**
 * 基类UI调度者序号管理
 */
class BaseUIMediatorGlobalSerialNumber {
    /** 获取一个全局的序号 */
    static get GlobalSerialNumber() {
        this.m_GlobalSerialNumber++;
        return this.m_GlobalSerialNumber;
    }
}
BaseUIMediatorGlobalSerialNumber.m_GlobalSerialNumber = 0;


/***/ }),

/***/ "./src/aTGame/UI/FGUI/ESpecialUIIndex.ts":
/*!***********************************************!*\
  !*** ./src/aTGame/UI/FGUI/ESpecialUIIndex.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ESpecialUIIndex = void 0;
/**
 * 特殊用途UI索引名字
 */
var ESpecialUIIndex;
(function (ESpecialUIIndex) {
    /** 进入动画 */
    ESpecialUIIndex["anim_enter"] = "m_anim_enter";
    /** 离开动画 */
    ESpecialUIIndex["anim_exit"] = "m_anim_exit";
})(ESpecialUIIndex = exports.ESpecialUIIndex || (exports.ESpecialUIIndex = {}));


/***/ }),

/***/ "./src/aTGame/UI/FGUI/EUILayer.ts":
/*!****************************************!*\
  !*** ./src/aTGame/UI/FGUI/EUILayer.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EUILayer = void 0;
/**
 * UI分层,按顺序显示
 */
var EUILayer;
(function (EUILayer) {
    /** 背景页面 */
    EUILayer["Bg"] = "EUILayer_Bg";
    /** 主界面  永远存在 */
    EUILayer["Main"] = "EUILayer_Main";
    /** 单UI 只能存在一个 */
    EUILayer["OneUI"] = "EUILayer_OneUI";
    /** 面板  可以有很多 */
    EUILayer["Panel"] = "EUILayer_Panel";
    /** 弹窗 */
    EUILayer["Popup"] = "EUILayer_Popup";
    /** 道具 */
    EUILayer["Prop"] = "EUILayer_Prop";
    /** 小部件 */
    EUILayer["Tip"] = "EUILayer_Tip";
    /** 暂停 */
    EUILayer["Pause"] = "EUILayer_Pause";
    /** 设置 */
    EUILayer["Set"] = "EUILayer_Set";
    /** 最高 */
    EUILayer["Top"] = "EUILayer_Top";
    /** 加载页面 */
    EUILayer["Loading"] = "EUILayer_Loading";
    /** 原生 */
    EUILayer["Native"] = "EUILayer_Native";
})(EUILayer = exports.EUILayer || (exports.EUILayer = {}));


/***/ }),

/***/ "./src/aTGame/UI/FGUI/FGuiData.ts":
/*!****************************************!*\
  !*** ./src/aTGame/UI/FGUI/FGuiData.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * FGUI数据类
 */
class FGuiData {
    constructor() {
        /** 是否持续更新UI */
        this.ifUpdate = true;
        /** 顶部距离 */
        this.top = 0;
        /** 底部距离 */
        this.bottom = 0;
        /** 缓动时间 */
        this.tweenTime = 0;
    }
}
exports.default = FGuiData;


/***/ }),

/***/ "./src/aTGame/UI/FGUI/FGuiRootManager.ts":
/*!***********************************************!*\
  !*** ./src/aTGame/UI/FGUI/FGuiRootManager.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const EUILayer_1 = __webpack_require__(/*! ./EUILayer */ "./src/aTGame/UI/FGUI/EUILayer.ts");
const ConsoleEx_1 = __webpack_require__(/*! ../../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const FGuiData_1 = __webpack_require__(/*! ./FGuiData */ "./src/aTGame/UI/FGUI/FGuiData.ts");
/**
 * FGUI根管理器
 */
class FGuiRootManager {
    // 获取某一层UI根节点
    static getLayer(layerType) {
        //
        return this.LayerList[layerType];
    }
    /**
     * 初始化
     */
    static Init() {
        // 设置包名后缀
        fgui.UIConfig.packageFileExtension = "bin";
        Laya.stage.addChild(fgui.GRoot.inst.displayObject);
        //添加FGUI根节点按顺序显示
        this.LayerList = {};
        for (let _i in EUILayer_1.EUILayer) {
            this.LayerList[EUILayer_1.EUILayer[_i]] = fgui.GRoot.inst.addChild(new fgui.GComponent());
        }
        //更新所有UI并添加监听
        this.UpdateAllUI();
        Laya.stage.on(Laya.Event.RESIZE, this, this.UpdateAllUI);
    }
    /**
     * 创建一个UI并添加到对应层级
     * @param uiType UI类型，必须包含一个初始化实例的方法
     * @param fguiData fgui数据
     * @param layer 层级类型
     */
    static AddUI(uiType, fguiData, layer) {
        let ui = uiType.createInstance();
        //判断是否是单ui如果是就隐藏该层级下的所有UI
        if (layer == EUILayer_1.EUILayer.OneUI) {
            let oneUIs = FGuiRootManager.oneUIs;
            if (oneUIs.length > 0) {
                oneUIs.forEach((panel) => {
                    panel && panel.Hide();
                });
            }
            //清空
            FGuiRootManager.oneUIs = [];
        }
        //添加到目标层级
        this.getLayer(layer).addChild(ui);
        //设置数据
        let _key = Symbol('fguiData');
        this._cacheFguiData[_key] = fguiData;
        //注入数据
        ui[this.m_uiDataKey] = _key;
        this.setUIData(ui, fguiData);
        //
        return ui;
    }
    /**
     * 设置ui显示在最上层
     * @param _ui 目标ui
     * @param _layer 该ui所属的层级
     */
    static setUIToTopShow(_ui, _layer) {
        let _layerCom = this.getLayer(_layer);
        //判断该层级是否有该ui
        let _index = _layerCom.getChildIndex(_ui);
        if (_index == -1) {
            console.warn(...ConsoleEx_1.default.packWarn('设置ui到最顶层失败，因为该层级里面没有该UI！'));
            return;
        }
        //先从顶层删除
        _ui.removeFromParent();
        //再次添加
        _layerCom.addChild(_ui);
    }
    /**
     * 更新所有UI
     */
    static UpdateAllUI() {
        let setWidth = Laya.stage.width;
        let setHeight = Laya.stage.height;
        fgui.GRoot.inst.setSize(setWidth, setHeight);
        let ui;
        let _ui;
        for (let i = 0, length = fgui.GRoot.inst.numChildren; i < length; ++i) {
            ui = fgui.GRoot.inst.getChildAt(i);
            ui.setSize(setWidth, setHeight);
            ui.y = 0;
            for (let _i = 0, _length = ui.numChildren; _i < _length; _i++) {
                _ui = ui.getChildAt(_i);
                //获取键入的数据
                let getData = this._cacheFguiData[_ui[this.m_uiDataKey]];
                //判断是否更新数据
                if (getData.ifUpdate) {
                    //设置数据
                    this.setUIData(_ui, getData);
                }
            }
        }
    }
    /**
     * 设置UI数据
     * @param _ui UI
     * @param _uiData UI数据
     */
    static setUIData(_ui, _uiData = new FGuiData_1.default()) {
        _ui.setSize(fgui.GRoot.inst.width, fgui.GRoot.inst.height - _uiData.top - _uiData.bottom);
        _ui.y = _uiData.top;
    }
    /**
     * 判断某个点是否在某个UI内部
     * @param ui
     * @param x
     * @param y
     */
    static CheckIn(ui, x, y) {
        if (x > ui.x && x < ui.x + ui.width && y > ui.y && y < ui.y + ui.height) {
            return true;
        }
        return false;
    }
}
exports.default = FGuiRootManager;
//
FGuiRootManager.m_uiDataKey = Symbol('$UIData');
//缓存fgui数据，通过它找fgui数据
FGuiRootManager._cacheFguiData = {};
//单UI列表
FGuiRootManager.oneUIs = [];


/***/ }),

/***/ "./src/aTGame/UI/FGUI/LoadUIPack.ts":
/*!******************************************!*\
  !*** ./src/aTGame/UI/FGUI/LoadUIPack.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LoadUIPack = void 0;
/**
 * 加载UI包类
 */
class LoadUIPack {
    /**
     * 加载包
     * @param packPath 包路径
     * @param atliasCount 图集数量
     * @param _extraURL 额外的资源
     */
    constructor(packPath, atliasCount = -1, _extraURL) {
        this.packPath = packPath;
        this.atliasCount = atliasCount;
        this.m_extraURL = _extraURL;
    }
    /**
     * 获取所有路径
     * @param urls 输出数组
     */
    PushUrl(urls) {
        //加入包名
        urls.push({ url: this.packPath + ".bin", type: Laya.Loader.BUFFER });
        //加入其它资源
        if (this.m_extraURL && this.m_extraURL.length > 0) {
            urls.push(...this.m_extraURL);
        }
        //加载纹理集
        if (this.atliasCount >= 0) {
            urls.push({ url: this.packPath + "_atlas0.png", type: Laya.Loader.IMAGE });
            //
            for (let i = 1; i <= this.atliasCount; i++) {
                urls.push({ url: this.packPath + "_atlas0_" + i + ".png", type: Laya.Loader.IMAGE });
            }
        }
    }
    /**
     * 添加包
     */
    AddPackage() {
        fgui.UIPackage.addPackage(this.packPath);
    }
}
exports.LoadUIPack = LoadUIPack;


/***/ }),

/***/ "./src/aTGame/UI/FGUI/RootUIStateManagerProxy.ts":
/*!*******************************************************!*\
  !*** ./src/aTGame/UI/FGUI/RootUIStateManagerProxy.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootClassProxy_1 = __webpack_require__(/*! ../../Root/RootClassProxy */ "./src/aTGame/Root/RootClassProxy.ts");
const ArrayUtils_1 = __webpack_require__(/*! ../../Utils/ArrayUtils */ "./src/aTGame/Utils/ArrayUtils.ts");
const ConsoleEx_1 = __webpack_require__(/*! ../../Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
/**
 * UI状态代理管理器基类
 * 直接Show显示的ui不受管理
 * 只能管理单页面UI
 * 注意！每次修改UI状态时都会改节点
 */
class RootUIStateManagerProxy extends RootClassProxy_1.default {
    constructor() {
        super(...arguments);
        //UI调度者列表
        this.m_UIMediator = {};
        //当前显示的UI类型索引列表
        this.m_onShowUI = [];
        //是否设置过ui管理列表
        this.m_ifSetMediatroList = false;
    }
    /**
     * 设置代理调度者列表
     * @param _UIMediator 代理调度者列表
     */
    setProxyMediatroList(_UIMediator) {
        this.m_UIMediator = _UIMediator;
        this.m_onShowUI = [];
        this.m_ifSetMediatroList = true;
        //
        this.Init();
    }
    /**
     * 设置代理完成，初始化
     */
    Init() { }
    /** 是否初始化过代理 */
    get ifSetMediatroList() {
        return this.m_ifSetMediatroList;
    }
    /** 获取当前显示的UI列表 */
    get onShowUIs() {
        return this.m_onShowUI;
    }
    /**
     * 通过索引获取某个UI调度者
     * @param _eui UI调度者索引枚举
     */
    getUIMeiatro(_eui) {
        return this.m_UIMediator[_eui];
    }
    /**
     * 关闭一个UI,不影响其他UI
     * @param _uiMeiatro 该UI的调度者
     */
    closeUI(_uiMeiatro) {
        this.setUIState([
            { typeIndex: _uiMeiatro.keyId, state: false },
        ], false);
    }
    /**
     * 设置UI状态
     * UI会在当前本来的UI层级根据状态列表显示
     * @param _uiStates 状态列表
     * @param _ifUnify 是否统一处理其他UI状态 默认为 true
     * @param _unifyState 统一处理其他UI的状态 默认为 {state: false, dispose: true}
     *
     */
    setUIState(_uiStates, _ifUnify = true, _unifyState = { state: false, dispose: true }, _showAffectLayer, _hideAffectLayer) {
        //判断是否设置过ui代理列表
        if (!this.m_ifSetMediatroList) {
            console.error(...ConsoleEx_1.default.packError('还没有为UI代理类设置代理UI调度者列表！'));
            return;
        }
        //自动设置ui状态列表
        for (let _o of _uiStates) {
            //设置显示状态默认为true
            if (typeof _o.state == 'undefined') {
                _o.state = true;
            }
            //设置默认删除
            if (typeof _o.dispose == 'undefined') {
                _o.dispose = true;
            }
        }
        //自动设置统一处理ui状态
        if (typeof _unifyState.dispose == 'undefined') {
            _unifyState.dispose = true;
        }
        //
        let _showUI = []; //需要显示的UI
        let _hideUI = []; //需要隐藏的UI
        //数组去重
        _uiStates = ArrayUtils_1.default.ObjUnique(_uiStates, (item) => {
            return item.typeIndex;
        });
        //过滤不存在的状态
        _uiStates = this.statesFilter(_uiStates);
        //取出需要显示和需要隐藏的UI
        let _i;
        for (let _o of _uiStates) {
            if (_o.state) {
                _i = this.m_onShowUI.findIndex((item) => { return item.typeIndex == _o.typeIndex; });
                if (_i != -1) {
                    this.m_onShowUI.splice(_i, 1);
                }
                _showUI.push(_o);
            }
            else {
                _i = this.m_onShowUI.findIndex((item) => { return item.typeIndex == _o.typeIndex; });
                if (_i != -1) {
                    this.m_onShowUI.splice(_i, 1);
                    _hideUI.push(_o);
                }
            }
        }
        //判断是否统一处理其他ui
        if (_ifUnify) {
            //找到没有出现在显示和隐藏列表中的ui
            let _differS = [];
            for (let _index in this.m_UIMediator) {
                if (_showUI.findIndex((item) => { return item.typeIndex == _index; }) == -1 &&
                    _hideUI.findIndex((item) => { return item.typeIndex == _index; }) == -1) {
                    _differS.push({
                        typeIndex: _index,
                        state: _unifyState.state,
                        dispose: _unifyState.dispose,
                    });
                }
            }
            //全部显示
            if (_unifyState.state) {
                //添加到需要显示的ui下面
                _showUI.unshift(..._differS);
            }
            //全部隐藏
            else {
                //添加到需要隐藏的ui下面
                _hideUI.push(..._differS);
            }
        }
        else {
            //融合本来就显示的ui列表到显示列表中
            _showUI.unshift(...this.m_onShowUI);
        }
        // console.log('设置层级前', _showUI, _hideUI);
        //检测是否在受影响列表中
        if (typeof _showAffectLayer != 'undefined') {
            //先去重
            _showAffectLayer = ArrayUtils_1.default.Unique(_showAffectLayer);
            // console.log('层级', _affectLayer);
            //过滤需要显示的列表，去掉受影响层级之外的元素
            _showUI = _showUI.filter((item) => {
                return _showAffectLayer.findIndex((layer) => { return layer == this.m_UIMediator[item.typeIndex].layer; }) != -1;
            });
        }
        if (typeof _hideAffectLayer != 'undefined') {
            //先去重
            _hideAffectLayer = ArrayUtils_1.default.Unique(_hideAffectLayer);
            //过滤需要显示的列表，去掉受影响层级之外的元素
            _hideUI = _hideUI.filter((item) => {
                return _hideAffectLayer.findIndex((layer) => { return layer == this.m_UIMediator[item.typeIndex].layer; }) != -1;
            });
        }
        // console.log('设置层级后', _showUI, _hideUI);
        //隐藏上一批需要隐藏的列表
        for (let _o of _hideUI) {
            if (this.m_UIMediator[_o.typeIndex].ifBelongUIMediator) {
                console.warn(...ConsoleEx_1.default.packWarn('有一个附属UI的UI调度者试图被隐藏，KEY为', this.m_UIMediator[_o.typeIndex].keyId));
                continue;
            }
            //递归隐藏该UI和它的所有附属
            this.hideUIMediator(this.m_UIMediator[_o.typeIndex], _o.dispose);
        }
        //显示在显示列表里面的全部UI
        for (let _o of _showUI) {
            if (this.m_UIMediator[_o.typeIndex].ifBelongUIMediator) {
                console.warn(...ConsoleEx_1.default.packWarn('有一个附属UI的UI调度者试图被显示，KEY为', this.m_UIMediator[_o.typeIndex].keyId));
                continue;
            }
            //递归显示该UI和它的所有附属
            this.showUIMediator(this.m_UIMediator[_o.typeIndex]);
        }
        //保存当前显示的ui列表
        this.m_onShowUI = _showUI;
    }
    /**
     * 是否存在的调度者ui过滤器
     * @param _o
     */
    statesFilter(_states) {
        return _states.filter((_o) => {
            return typeof this.m_UIMediator[_o.typeIndex] != 'undefined';
        });
    }
    //隐藏一个UI
    hideUIMediator(_UIMed, _dispose, _ifR = false) {
        if (_UIMed.belongUpUIMediator.length > 0) {
            _UIMed.belongUpUIMediator.forEach((item) => {
                this.hideUIMediator(item, _dispose, true);
            });
        }
        //
        if (!_ifR || _UIMed.ifBelongUIMediator) {
            _UIMed.Hide(_dispose);
        }
        else {
            console.warn(...ConsoleEx_1.default.packWarn('有一个不是附属UI的UI调度者试图被隐藏，KEY为', _UIMed.keyId));
        }
        //
        if (_UIMed.belongDownUIMediator.length > 0) {
            _UIMed.belongDownUIMediator.forEach((item) => {
                this.hideUIMediator(item, _dispose, true);
            });
        }
    }
    //显示一个UI
    showUIMediator(_UIMed, _ifR = false) {
        if (_UIMed.belongDownUIMediator.length > 0) {
            _UIMed.belongDownUIMediator.forEach((item) => {
                this.showUIMediator(item, true);
            });
        }
        //
        if (!_ifR || _UIMed.ifBelongUIMediator) {
            _UIMed.Show();
        }
        else {
            console.warn(...ConsoleEx_1.default.packWarn('有一个不是附属UI的UI调度者试图被显示，KEY为', _UIMed.keyId));
        }
        //
        if (_UIMed.belongUpUIMediator.length > 0) {
            _UIMed.belongUpUIMediator.forEach((item) => {
                this.showUIMediator(item, true);
            });
        }
    }
}
exports.default = RootUIStateManagerProxy;


/***/ }),

/***/ "./src/aTGame/Utils/ArrayUtils.ts":
/*!****************************************!*\
  !*** ./src/aTGame/Utils/ArrayUtils.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 数组工具
 */
class ArrayUtils {
    /**
     * 数组去重保留靠前的内容
     * @param arr 源数组
     */
    static Unique(arr) {
        return Array.from(new Set(arr));
    }
    /**
     * 数组去重保留靠后的内容
     * @param arr 源数组
     */
    static ReverseReserveUnique(arr) {
        return Array.from(new Set(arr.reverse())).reverse();
    }
    /**
     * 对象数组去重
     * @param arr 源数组
     * @param _F 获取对比键值函数
     */
    static ObjUnique(arr, _F) {
        for (let i = 0, len = arr.length; i < len; i++) {
            for (let j = i + 1, len = arr.length; j < len; j++) {
                if (_F(arr[i]) === _F(arr[j])) {
                    arr.splice(j, 1);
                    j--; // 每删除一个数j的值就减1
                    len--; // j值减小时len也要相应减1（减少循环次数，节省性能）   
                }
            }
        }
        return arr;
    }
    /**
     * 替换数组的某个元素
     * @param arr 源数组
     * @param oldObj 被替换的元素
     * @param newObj 替换元素
     */
    static Replace(arr, oldObj, newObj) {
        let index = arr.indexOf(oldObj);
        if (index < 0)
            return false;
        arr.splice(index, 1, newObj);
        return true;
    }
    /**
     * 删除一个元素并返回结果
     * @param arr 源数组
     * @param obj 删除目标对象
     */
    static RemoveItem(arr, obj) {
        let index = arr.indexOf(obj);
        if (index < 0)
            return false;
        arr.splice(index, 1);
        return true;
    }
    /**
     * 根据索引删除一个数据
     * @param arr 源数组
     * @param index 索引
     */
    static RemoveAt(arr, index) {
        if (arr.length <= index)
            return false;
        arr.splice(index, 1);
        return true;
    }
    /**
     * 数组是否包含某个数据
     * @param arr
     * @param obj
     */
    static Contains(arr, obj) {
        let index = arr.indexOf(obj);
        return index >= 0;
    }
    /**
     * 复制一个数组
     * @param arr 源数组
     */
    static Copy(arr) {
        let result = [];
        for (let i = 0; i < arr.length; ++i) {
            result.push(arr[i]);
        }
        return result;
    }
    /**
     * 随机打乱数组
     * @param _array 目标数组
     */
    static upsetArray(_array) {
        //乱序
        _array.sort(() => {
            return Math.random() - 0.5;
        });
    }
    /**
     * 随机获取数组中的随机值，可指定长度
     * @param _array 原数组
     * @param _n 随机个数
     * @param _weight 权重列表
     */
    static RandomGet(_array, _n = 1, _weight = _array.map((item) => { return 1; })) {
        if (_array.length <= 0) {
            return;
        }
        let _rootArray = [];
        let _newArray = [];
        //权重索引列表
        let _indexArray = [];
        //找到最小的权重
        let _minWeight = _weight[0];
        _weight.forEach((item) => {
            _minWeight = Math.min(_minWeight, item);
        });
        _weight = _weight.map((item) => {
            return Math.floor(item * (1 / _minWeight));
        });
        _array.forEach((item, index) => {
            _rootArray.push(item);
            //
            for (let _i = 0; _i < _weight[index]; _i++) {
                _indexArray.push(index);
            }
        });
        let _index;
        for (let _i = 0; _i < _n; _i++) {
            if (_rootArray.length <= 0) {
                break;
            }
            _index = Math.floor(Math.random() * _indexArray.length);
            _indexArray = _indexArray.filter((item) => {
                return item != _index;
            });
            _newArray.push(_rootArray.splice(_indexArray[_index], 1)[0]);
        }
        //
        return _newArray;
    }
}
exports.default = ArrayUtils;


/***/ }),

/***/ "./src/aTGame/Utils/ColorUtils.ts":
/*!****************************************!*\
  !*** ./src/aTGame/Utils/ColorUtils.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 颜色操作类
 */
class ColorUtils {
    /**
     * rgb数据转字符串
     * @param r -
     * @param g -
     * @param b -
     */
    static RgbToHex(r, g, b) {
        var color = r << 16 | g << 8 | b;
        var str = color.toString(16);
        while (str.length < 6)
            str = "0" + str;
        return "#" + str;
    }
    /**
     * laya.Color类转字符串
     * @param color Laya.Color
     */
    static ColorToHex(color) {
        return this.RgbToHex(color.r * 255, color.g * 255, color.b * 255);
    }
    /**
     * 字符串转laya.Color
     * @param colorHex 颜色字符串
     * @param alpha 透明度
     */
    static HexToColor(colorHex, alpha = null) {
        if (colorHex.startsWith("#")) {
            colorHex = colorHex.substring(1);
        }
        let cr = colorHex.substring(0, 2);
        let cg = colorHex.substring(2, 4);
        let cb = colorHex.substring(4, 6);
        let ca = colorHex.substring(6, 8);
        let nr = parseInt(cr, 16);
        let ng = parseInt(cg, 16);
        let nb = parseInt(cb, 16);
        let na = alpha ? alpha : parseInt(ca, 16);
        return new Laya.Color(nr / 255, ng / 255, nb / 255, na);
    }
    /**
     * Laya.Color转v3
     * @param color Laya.Color
     */
    static ToV3(color) {
        return new Laya.Vector3(color.r, color.g, color.b);
    }
    /**
     * Laya.Color转v4
     * @param color Laya.Color
     */
    static ToV4(color) {
        return new Laya.Vector4(color.r, color.g, color.b, color.a);
    }
    /**
     * 字符串颜色转v3
     * @param colorHex -
     */
    static HexToV3(colorHex) {
        if (colorHex.startsWith("#")) {
            colorHex = colorHex.substring(1);
        }
        let cr = colorHex.substring(0, 2);
        let cg = colorHex.substring(2, 4);
        let cb = colorHex.substring(4, 6);
        let nr = parseInt(cr, 16);
        let ng = parseInt(cg, 16);
        let nb = parseInt(cb, 16);
        return new Laya.Vector3(nr / 255, ng / 255, nb / 255);
    }
    /**
     * 字符串颜色转v4
     * @param colorHex -
     * @param alpha 透明度
     */
    static HexToV4(colorHex, alpha = null) {
        if (colorHex.startsWith("#")) {
            colorHex = colorHex.substring(1);
        }
        let cr = colorHex.substring(0, 2);
        let cg = colorHex.substring(2, 4);
        let cb = colorHex.substring(4, 6);
        let ca = colorHex.substring(6, 8);
        let nr = parseInt(cr, 16);
        let ng = parseInt(cg, 16);
        let nb = parseInt(cb, 16);
        let na = alpha ? alpha : parseInt(ca, 16);
        return new Laya.Vector4(nr / 255, ng / 255, nb / 255, na);
    }
}
exports.default = ColorUtils;


/***/ }),

/***/ "./src/aTGame/Utils/Dictionary.ts":
/*!****************************************!*\
  !*** ./src/aTGame/Utils/Dictionary.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 通用字典类
 */
class Dictionary {
    constructor() {
        this.items = {};
    }
    set(key, value) {
        this.items[key] = value;
        return true;
    }
    has(key) {
        return this.items.hasOwnProperty(key);
    }
    remove(key) {
        if (!this.has(key))
            return false;
        delete this.items[key];
        return true;
    }
    get(key) {
        return this.has(key) ? this.items[key] : undefined;
    }
    keys() {
        return Object.keys(this.items);
    }
    // values() {
    // }
    get length() {
        return this.keys().length;
    }
    clear() {
        this.items = {};
    }
}
exports.default = Dictionary;


/***/ }),

/***/ "./src/aTGame/Utils/MathUtils.ts":
/*!***************************************!*\
  !*** ./src/aTGame/Utils/MathUtils.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ArrayUtils_1 = __webpack_require__(/*! ./ArrayUtils */ "./src/aTGame/Utils/ArrayUtils.ts");
/**
 * 数学函数扩展
 */
class MathUtils {
    static ToHex(num) {
        return num.toString(16);
    }
    static RandomFromArrayUtilscept(numArr, except) {
        let fakeRandomList = [];
        for (let i = 0; i < numArr.length; ++i) {
            if (except == numArr[i])
                continue;
            fakeRandomList.push(numArr[i]);
        }
        return this.RandomFromArray(fakeRandomList);
    }
    static RandomFromArray(numArr) {
        let randomIndex = MathUtils.RandomInt(0, numArr.length);
        return numArr[randomIndex];
    }
    static RandomArrayFromArray(arr, count) {
        let result = [];
        let indexList = [];
        for (let i = 0; i < arr.length; ++i) {
            indexList.push(i);
        }
        for (let i = 0; i < count; ++i) {
            let randomIndex = MathUtils.RandomInt(0, indexList.length);
            let getIndex = indexList[randomIndex];
            ArrayUtils_1.default.RemoveAt(indexList, randomIndex);
            result.push(arr[getIndex]);
        }
        return result;
    }
    static RandomFromWithWeight(numArr, weightArr) {
        if (numArr == null || numArr.length == 0) {
            return null;
        }
        var totalWeight = 0;
        for (var weight of weightArr) {
            totalWeight += weight;
        }
        var randomWeight = MathUtils.Random(0, totalWeight);
        var currentWeight = 0;
        for (var i = 0; i < numArr.length; ++i) {
            currentWeight += weightArr[i];
            if (randomWeight < currentWeight) {
                return numArr[i];
            }
        }
        return numArr[numArr.length - 1];
    }
    // max  = max + 1
    static RandomInt(min, maxAddOne) {
        return Math.floor(this.Random(min, maxAddOne));
    }
    // max  = max + 1
    static Random(min, maxAddOne) {
        return (maxAddOne - min) * Math.random() + min;
    }
    /**
     * 获取一个范围内随机整数
     * @param min 最小值
     * @param max 最大值
     */
    static randomRangeInt(min, max) {
        return Math.floor(Math.random() * (max - min) + min);
    }
    /**
     * 判定概率命中
     * @param ratio 概率，百分数
     */
    static RandomRatio(ratio) {
        let v = MathUtils.RandomInt(0, 10000) * 0.01;
        if (ratio > v) {
            return true;
        }
        return false;
    }
    static Clamp(value, min, max) {
        if (value < min)
            return min;
        if (value > max)
            return max;
        return value;
    }
    static Clamp01(value) {
        return this.Clamp(value, 0, 1);
    }
    static Sign(value) {
        if (value == 0)
            return 1;
        return value > 0 ? 1 : -1;
    }
    static GetNumCount(num) {
        var numberCount = 0;
        var newNumber = num;
        while (newNumber / 10 > 0) {
            newNumber = Math.floor(newNumber / 10);
            numberCount++;
        }
        return numberCount;
    }
    static Lerp(from, to, progress) {
        return from + (to - from) * MathUtils.Clamp01(progress);
    }
    static MoveTowardsAngle(current, target, maxDelta) {
        var num = MathUtils.DeltaAngle(current, target);
        if (0 - maxDelta < num && num < maxDelta) {
            return target;
        }
        target = current + num;
        return MathUtils.MoveTowards(current, target, maxDelta);
    }
    static MoveTowards(current, target, maxDelta) {
        if (Math.abs(target - current) <= maxDelta) {
            return target;
        }
        return current + Math.sign(target - current) * maxDelta;
    }
    static DeltaAngle(current, target) {
        var num = MathUtils.Repeat(target - current, 360);
        if (num > 180) {
            num -= 360;
        }
        return num;
    }
    static Repeat(t, length) {
        return MathUtils.Clamp(t - Math.floor(t / length) * length, 0, length);
    }
    static IsSimilar(n1, n2) {
        return n1 == n2;
    }
}
exports.default = MathUtils;
MathUtils.Deg2Rad = 0.0175;
MathUtils.Rad2Deg = 57.2958;


/***/ }),

/***/ "./src/aTGame/Utils/StringUtils.ts":
/*!*****************************************!*\
  !*** ./src/aTGame/Utils/StringUtils.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 字符串处理工具
 */
class StringUtils {
    /**
     * 分割成整型数组
     * @param str 字符串
     * @param splitStr 分割字符串
     */
    static SplitToIntArray(str, splitStr) {
        var splits = str.split(splitStr);
        var result = [];
        for (var i = 0; i < splits.length; ++i) {
            var parseNum = parseInt(splits[i]);
            if (isNaN(parseNum)) {
                parseNum = 0;
            }
            result.push(parseNum);
        }
        return result;
    }
    /**
     * int数组到字符串
     * @param arr 数组
     */
    static IntArrToStr(arr) {
        var str = "";
        for (var i = 0; i < arr.length; ++i) {
            str += arr[i].toFixed(0);
            if (i < arr.length - 1) {
                str += ",";
            }
        }
        return str;
    }
    /**
     * 检测字符串是否为空
     * @param str 被检测的字符串
     */
    static IsNullOrEmpty(str) {
        if (str == null)
            return true;
        if (str == "")
            return true;
        return false;
    }
}
exports.default = StringUtils;


/***/ }),

/***/ "./src/aTGame/Utils/V3Utils.ts":
/*!*************************************!*\
  !*** ./src/aTGame/Utils/V3Utils.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 关于v3向量的工具
 */
class V3Utils {
    /**
     * 通过一个字符串构建v3向量
     * @param str
     */
    static parseVector3(str) {
        var strs = str.split(',');
        return new Laya.Vector3(Number(strs[0]), Number(strs[1]), Number(strs[2]));
    }
    /**
     * 设置V3向量长度
     * @param _v3 目标向量
     * @param _l 目标长度
     */
    static setV3Length(_v3, _l) {
        let _length = Laya.Vector3.scalarLength(_v3);
        if (_length != 0) {
            let _a = _l / _length;
            _v3.x = _v3.x * _a;
            _v3.y = _v3.y * _a;
            _v3.z = _v3.z * _a;
        }
    }
    /**
     * 一个点插值移动到另一个点
     * @param _pos 当前点
     * @param _tragetPot 目标点
     * @param _lerp 插值移动比例
     * @param _outV3 输出向量
     * @param _initialLength 初始长度
     */
    static PotLerpMove(_pos, _tragetPot, _lerp, _outV3, _initialLength) {
        if (!_outV3) {
            console.error('必须有一个输出的向量！');
            return;
        }
        //
        let _distance = Laya.Vector3.distance(_pos, _tragetPot);
        //
        Laya.Vector3.lerp(_pos, _tragetPot, _lerp, _outV3);
        //返回进度
        return 1 - (_distance / _initialLength);
    }
    /**
     * 一个点匀速移动到另一个点
     * @param _pos 当前点
     * @param _tragetPot 目标点
     * @param _speed 速度
     * @param _outV3 输出向量
     */
    static PotConstantSpeedMove(_pos, _tragetPot, _speed, _outV3) {
        if (!_outV3) {
            console.error('必须有一个输出的向量！');
            return;
        }
        //
        let _ifEnd;
        let _differV3 = new Laya.Vector3();
        //
        Laya.Vector3.subtract(_tragetPot, _pos, _differV3);
        let _distance = Laya.Vector3.scalarLength(_differV3);
        if (_distance > _speed) {
            this.setV3Length(_differV3, _speed);
            _ifEnd = false;
        }
        else {
            _ifEnd = true;
        }
        //相加
        Laya.Vector3.add(_pos, _differV3, _outV3);
        //
        return _ifEnd;
    }
}
exports.default = V3Utils;


/***/ }),

/***/ "./src/bTGameConfig/MainConfig.ts":
/*!****************************************!*\
  !*** ./src/bTGameConfig/MainConfig.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 项目最高层不需要配表的配置
 */
class MainConfig {
}
exports.default = MainConfig;
/** 游戏所属团队 */
MainConfig.GameWhatTeam = '小小游戏';
/** 游戏名字，尽量不要出现中文和特殊字符*/
MainConfig.GameName = 'LayaMiniGame';
/** 中文名字 */
MainConfig.GameName_ = 'LayaBox小游戏';
/** 游戏说明 */
MainConfig.GameExplain = 'LayaBox小游戏';
/** 数据版本 可以带字母但是尽量不要出现中文和特殊字符*/
MainConfig.versions = '0.0.0';
/** 是否上线为false则是开发环境 */
MainConfig.OnLine = false;


/***/ }),

/***/ "./src/bTGameConfig/MainGameConfig.ts":
/*!********************************************!*\
  !*** ./src/bTGameConfig/MainGameConfig.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const MainConfig_1 = __webpack_require__(/*! ./MainConfig */ "./src/bTGameConfig/MainConfig.ts");
/**
 * 游戏最高层不需要配表的配置
 */
class MainGameConfig {
}
exports.default = MainGameConfig;
/** 支持2D */
MainGameConfig.support2D = false;
/** 支持3D */
MainGameConfig.support3D = true;
/** 是否开启oimo物理 */
MainGameConfig.ifAddOimoSystem = false;
/** 是否开启游戏测试 */
MainGameConfig.ifGameTest = (!MainConfig_1.default.OnLine) && false;
/** 是否开启测试类 */
MainGameConfig.ifTest = (!MainConfig_1.default.OnLine) && false;
/** 是否开启调试类 */
MainGameConfig.ifDebug = (!MainConfig_1.default.OnLine) && true;
/** 是否打开一个新窗口调试 */
MainGameConfig.ifOpenWindowDebug = (!MainConfig_1.default.OnLine) && false;


/***/ }),

/***/ "./src/cFrameBridge/Config/ELevelSceneName.ts":
/*!****************************************************!*\
  !*** ./src/cFrameBridge/Config/ELevelSceneName.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AllScenePrefabsNames = exports.ELevelSceneName = void 0;
const _AllScenePrefabsNames_1 = __webpack_require__(/*! ../../dMyGame/_prefabsName/_AllScenePrefabsNames */ "./src/dMyGame/_prefabsName/_AllScenePrefabsNames.ts");
/**
 * 关卡场景名字枚举列表，必须共用一套预制体
 */
var ELevelSceneName;
(function (ELevelSceneName) {
    /** 默认导出关卡场景 */
    ELevelSceneName["Export"] = "export";
})(ELevelSceneName = exports.ELevelSceneName || (exports.ELevelSceneName = {}));
/**
 * 所有场景预制体名字集合
 */
class AllScenePrefabsNames extends _AllScenePrefabsNames_1.default {
}
exports.AllScenePrefabsNames = AllScenePrefabsNames;
/**
 * 关卡场景配置类
 */
class LevelSceneNameConst {
    /** 默认关卡场景名字 */
    static get defaultLevelSceneName() {
        return ELevelSceneName.Export;
    }
}
exports.default = LevelSceneNameConst;


/***/ }),

/***/ "./src/cFrameBridge/Config/FrameLevelConfig.ts":
/*!*****************************************************!*\
  !*** ./src/cFrameBridge/Config/FrameLevelConfig.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const LevelConfigProxy_1 = __webpack_require__(/*! ../../dMyGame/ConfigProxy/LevelConfigProxy */ "./src/dMyGame/ConfigProxy/LevelConfigProxy.ts");
const OtherLevelConfigProxy_1 = __webpack_require__(/*! ../../dMyGame/ConfigProxy/OtherLevelConfigProxy */ "./src/dMyGame/ConfigProxy/OtherLevelConfigProxy.ts");
/**
 * 框架依赖的关卡配置文件
 */
class FrameLevelConfig {
    /**
     * 根据关卡id获取关卡数据
     * @param _id 关卡id
     */
    static byLevelIdGetLevelData(_id) {
        let _levelConfigData = LevelConfigProxy_1.default.instance.byIdGetData(_id);
        return this.getLevelData('ID', _levelConfigData.id, _levelConfigData.sceneName, _levelConfigData.sceneOtherRes, _levelConfigData.rootScene);
    }
    /**
     * 通过其他关卡名字获取关卡数据
     * @param _name 关卡名字
     */
    static byLevelNameGetOtherLevelData(_name) {
        let _levelConfigData = OtherLevelConfigProxy_1.default.instance.byNameGetData(_name);
        return this.getLevelData('Name', _levelConfigData.id, _levelConfigData.sceneName, _levelConfigData.sceneOtherRes, _levelConfigData.rootScene);
    }
    //获取关卡数据
    static getLevelData(_key, _id, _sceneName, _sceneOtherRes, _rootScene) {
        //格式化，去空格和首尾逗号
        _sceneName.replace(/\s+/g, '').replace(/^,+/, '').replace(/,+$/, '').replace(/,+/g, ',');
        _sceneOtherRes.replace(/\s+/g, '').replace(/^,+/, '').replace(/,+$/, '').replace(/,+/g, ',');
        return {
            key: '$' + _rootScene + ':' + _key + '-' + _id + '-' + _sceneName,
            rootScene: _rootScene,
            sceneName: _sceneName.split(','),
            sceneOtherRes: _sceneOtherRes.split(','),
        };
    }
}
exports.default = FrameLevelConfig;


/***/ }),

/***/ "./src/cFrameBridge/Config/FrameLevelConst.ts":
/*!****************************************************!*\
  !*** ./src/cFrameBridge/Config/FrameLevelConst.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 关卡相关常量类
 */
class FrameLevelConst {
}
exports.default = FrameLevelConst;
/** 预加载关卡名字列表,游戏最开始时加载的 */
FrameLevelConst.PrestrainLeveId = ['prestrain'];


/***/ }),

/***/ "./src/cFrameBridge/FrameCDNURL.ts":
/*!*****************************************!*\
  !*** ./src/cFrameBridge/FrameCDNURL.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 框架依赖cdn路径
 */
class FrameCDNURL {
}
exports.default = FrameCDNURL;
/** cdn路径列表， */
FrameCDNURL.CDNURLs = [
//
];


/***/ }),

/***/ "./src/cFrameBridge/FrameSubpackages.ts":
/*!**********************************************!*\
  !*** ./src/cFrameBridge/FrameSubpackages.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 框架依赖的分包数据
 */
class FrameSubpackages {
}
exports.default = FrameSubpackages;
/** 分包列表,必须和分包配置文件中的列表一致 */
FrameSubpackages.subpackages = [
//
];


/***/ }),

/***/ "./src/cFrameBridge/Physics/OimoConst.ts":
/*!***********************************************!*\
  !*** ./src/cFrameBridge/Physics/OimoConst.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * Oimo物理常量
 */
class OimoConst {
}
exports.default = OimoConst;
/** 时间步长 */
OimoConst.timestep = 1 / 60;
/** 迭代次数 */
OimoConst.iterations = 24;
/** 1 brute force, 2 sweep and prune, 3 volume tree */
OimoConst.broadphase = 2;
/** scale full world  */
OimoConst.worldscale = 1;
/** randomize sample */
OimoConst.random = true;
/** calculate statistic or not */
OimoConst.info = false;
/** 重力 */
OimoConst.gravity = [0, -9.8, 0];


/***/ }),

/***/ "./src/cFrameBridge/Platform/Data/BDData.ts":
/*!**************************************************!*\
  !*** ./src/cFrameBridge/Platform/Data/BDData.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const PlatformData_1 = __webpack_require__(/*! ../../../aTGame/Platform/Data/PlatformData */ "./src/aTGame/Platform/Data/PlatformData.ts");
/**
 * 百度小游戏数据
 */
class BDData extends PlatformData_1.default {
    constructor() {
        super(...arguments);
        /** 应用ID */
        this.appId = '';
        this.appKey = '';
        /** 广告id */
        this.bannerId = '';
        this.rewardVideoId = '';
        this.interstitialId = '';
        this.nativeId = '';
        //
        this.nativeBannerIds = [];
        this.nativeIconIds = [];
        this.nativeinterstitialIds = [];
        this.nativeinpageIds = [];
        //
        this.shareId = '';
    }
}
exports.default = BDData;


/***/ }),

/***/ "./src/cFrameBridge/Platform/Data/OPPOData.ts":
/*!****************************************************!*\
  !*** ./src/cFrameBridge/Platform/Data/OPPOData.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const PlatformData_1 = __webpack_require__(/*! ../../../aTGame/Platform/Data/PlatformData */ "./src/aTGame/Platform/Data/PlatformData.ts");
/**
 * OPPO小游戏数据
 */
class OPPOData extends PlatformData_1.default {
    constructor() {
        super(...arguments);
        /** 应用ID */
        this.appId = '';
        this.appKey = '';
        /** 广告id */
        this.bannerId = '';
        this.rewardVideoId = '';
        this.interstitialId = '';
        this.nativeId = '';
        //
        this.nativeBannerIds = [];
        this.nativeIconIds = [];
        this.nativeinterstitialIds = [];
        this.nativeinpageIds = [];
        //
        this.shareId = '';
    }
}
exports.default = OPPOData;


/***/ }),

/***/ "./src/cFrameBridge/Platform/Data/QQData.ts":
/*!**************************************************!*\
  !*** ./src/cFrameBridge/Platform/Data/QQData.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const PlatformData_1 = __webpack_require__(/*! ../../../aTGame/Platform/Data/PlatformData */ "./src/aTGame/Platform/Data/PlatformData.ts");
/**
 * QQ小游戏数据
 */
class QQData extends PlatformData_1.default {
    constructor() {
        super(...arguments);
        /** 应用ID */
        this.appId = '';
        this.appKey = '';
        /** 广告id */
        this.bannerId = '';
        this.rewardVideoId = '';
        this.interstitialId = '';
        this.nativeId = '';
        //
        this.nativeBannerIds = [];
        this.nativeIconIds = [];
        this.nativeinterstitialIds = [];
        this.nativeinpageIds = [];
        //
        this.shareId = '';
    }
}
exports.default = QQData;


/***/ }),

/***/ "./src/cFrameBridge/Platform/Data/QTTData.ts":
/*!***************************************************!*\
  !*** ./src/cFrameBridge/Platform/Data/QTTData.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const PlatformData_1 = __webpack_require__(/*! ../../../aTGame/Platform/Data/PlatformData */ "./src/aTGame/Platform/Data/PlatformData.ts");
/**
 * 趣头条小游戏数据
 */
class QTTData extends PlatformData_1.default {
    constructor() {
        super(...arguments);
        /** 应用ID */
        this.appId = '';
        this.appKey = '';
        /** 广告id */
        this.bannerId = '';
        this.rewardVideoId = '';
        this.interstitialId = '';
        this.nativeId = '';
        //
        this.nativeBannerIds = [];
        this.nativeIconIds = [];
        this.nativeinterstitialIds = [];
        this.nativeinpageIds = [];
        //
        this.shareId = '';
    }
}
exports.default = QTTData;


/***/ }),

/***/ "./src/cFrameBridge/Platform/Data/TTData.ts":
/*!**************************************************!*\
  !*** ./src/cFrameBridge/Platform/Data/TTData.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const PlatformData_1 = __webpack_require__(/*! ../../../aTGame/Platform/Data/PlatformData */ "./src/aTGame/Platform/Data/PlatformData.ts");
/**
 * 头条小游戏数据
 */
class TTData extends PlatformData_1.default {
    constructor() {
        super(...arguments);
        /** 应用ID */
        this.appId = '';
        this.appKey = '';
        /** 广告id */
        this.bannerId = '';
        this.rewardVideoId = '';
        this.interstitialId = '';
        this.nativeId = '';
        //
        this.nativeBannerIds = [];
        this.nativeIconIds = [];
        this.nativeinterstitialIds = [];
        this.nativeinpageIds = [];
        //
        this.shareId = '';
    }
}
exports.default = TTData;


/***/ }),

/***/ "./src/cFrameBridge/Platform/Data/WXData.ts":
/*!**************************************************!*\
  !*** ./src/cFrameBridge/Platform/Data/WXData.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const PlatformData_1 = __webpack_require__(/*! ../../../aTGame/Platform/Data/PlatformData */ "./src/aTGame/Platform/Data/PlatformData.ts");
/**
 * WX小游戏数据
 */
class WXData extends PlatformData_1.default {
    constructor() {
        super(...arguments);
        /** 应用ID */
        this.appId = '';
        this.appKey = '';
        /** 广告id */
        this.bannerId = '';
        this.rewardVideoId = '';
        this.interstitialId = '';
        this.nativeId = '';
        //
        this.nativeBannerIds = [];
        this.nativeIconIds = [];
        this.nativeinterstitialIds = [];
        this.nativeinpageIds = [];
        //
        this.shareId = '';
    }
}
exports.default = WXData;


/***/ }),

/***/ "./src/dMyGame/Common/Const.ts":
/*!*************************************!*\
  !*** ./src/dMyGame/Common/Const.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Const = void 0;
/**
 * 项目配置
 */
class Const {
}
exports.Const = Const;
/** 重力 */
Const.gravity = -10;
/** 是否预加载关卡 */
Const.ifPreloadCustoms = false;


/***/ }),

/***/ "./src/dMyGame/ConfigProxy/EnvironmentConfigProxy.ts":
/*!***********************************************************!*\
  !*** ./src/dMyGame/ConfigProxy/EnvironmentConfigProxy.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const EnvironmentConfig_1 = __webpack_require__(/*! ../_config/EnvironmentConfig */ "./src/dMyGame/_config/EnvironmentConfig.ts");
const RootDataProxy_1 = __webpack_require__(/*! ../../aTGame/Config/RootDataProxy */ "./src/aTGame/Config/RootDataProxy.ts");
/**
 * 环境数据处理类
 */
class EnvironmentConfigProxy extends RootDataProxy_1.default {
    //
    constructor() {
        super();
    }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new EnvironmentConfigProxy();
        }
        return this._instance;
    }
    //初始化
    initData() {
        this.m_dataList = EnvironmentConfig_1.EnvironmentConfig.dataList;
    }
    /**
     * 通过关卡id获取环境数据
     * @param _id id
     */
    byLevelIdGetData(_id) {
        return this.m_dataList.find((item) => {
            return item.id == _id;
        });
    }
}
exports.default = EnvironmentConfigProxy;


/***/ }),

/***/ "./src/dMyGame/ConfigProxy/LevelConfigProxy.ts":
/*!*****************************************************!*\
  !*** ./src/dMyGame/ConfigProxy/LevelConfigProxy.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const LevelConfig_1 = __webpack_require__(/*! ../_config/LevelConfig */ "./src/dMyGame/_config/LevelConfig.ts");
const RootDataProxy_1 = __webpack_require__(/*! ../../aTGame/Config/RootDataProxy */ "./src/aTGame/Config/RootDataProxy.ts");
/**
 * 关卡数据处理类
 */
class LevelConfigProxy extends RootDataProxy_1.default {
    //
    constructor() { super(); }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new LevelConfigProxy();
        }
        return this._instance;
    }
    // 初始化
    initData() {
        //
        this.m_dataList = LevelConfig_1.LevelConfig.dataList;
    }
    /**
     * 获取关卡数量
     */
    getLevelNumber() {
        let _number = 0;
        this.m_dataList.forEach((item) => {
            if (item.id > 0) {
                _number++;
            }
        });
        //
        return _number;
    }
    /**
     * 通过关卡id获取关卡数据
     * @param _id id
     */
    byIdGetData(_id) {
        return this.m_dataList.find((item) => {
            return item.id == _id;
        });
    }
}
exports.default = LevelConfigProxy;


/***/ }),

/***/ "./src/dMyGame/ConfigProxy/OtherEnvironmentProxy.ts":
/*!**********************************************************!*\
  !*** ./src/dMyGame/ConfigProxy/OtherEnvironmentProxy.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootDataProxy_1 = __webpack_require__(/*! ../../aTGame/Config/RootDataProxy */ "./src/aTGame/Config/RootDataProxy.ts");
const OtherEnvironmentConfig_1 = __webpack_require__(/*! ../_config/OtherEnvironmentConfig */ "./src/dMyGame/_config/OtherEnvironmentConfig.ts");
/**
 * 其他关卡环境数据处理类
 */
class OtherEnvironmentConfigProxy extends RootDataProxy_1.default {
    //
    constructor() {
        super();
    }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new OtherEnvironmentConfigProxy();
        }
        return this._instance;
    }
    //初始化
    initData() {
        this.m_dataList = OtherEnvironmentConfig_1.OtherEnvironmentConfig.dataList;
    }
    /**
     * 通过关卡id获取环境数据
     * @param _id id
     */
    byLevelIdGetData(_id) {
        return this.m_dataList.find((item) => {
            return item.id == _id;
        });
    }
    /**
     * 关卡名字获取数据
     * @param _name 关卡名字
     */
    byLevelNameGetData(_name) {
        return this.m_dataList.find((item) => {
            return item.name == _name;
        });
    }
}
exports.default = OtherEnvironmentConfigProxy;


/***/ }),

/***/ "./src/dMyGame/ConfigProxy/OtherLevelConfigProxy.ts":
/*!**********************************************************!*\
  !*** ./src/dMyGame/ConfigProxy/OtherLevelConfigProxy.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootDataProxy_1 = __webpack_require__(/*! ../../aTGame/Config/RootDataProxy */ "./src/aTGame/Config/RootDataProxy.ts");
const OtherLevelConfig_1 = __webpack_require__(/*! ../_config/OtherLevelConfig */ "./src/dMyGame/_config/OtherLevelConfig.ts");
/**
 * 其他非主关卡数据处理类
 */
class OtherLevelConfigProxy extends RootDataProxy_1.default {
    //
    constructor() { super(); }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new OtherLevelConfigProxy();
        }
        return this._instance;
    }
    // 初始化
    initData() {
        //
        this.m_dataList = OtherLevelConfig_1.OtherLevelConfig.dataList;
    }
    /**
     * 通过关卡id获取关卡数据
     * @param _id id
     */
    byIdGetData(_id) {
        return this.m_dataList.find((item) => {
            return item.id == _id;
        });
    }
    /**
     * 通过关卡名字获取数据
     * @param _name 关卡名字
     */
    byNameGetData(_name) {
        return this.m_dataList.find((item) => {
            return item.name == _name;
        });
    }
}
exports.default = OtherLevelConfigProxy;


/***/ }),

/***/ "./src/dMyGame/ConfigProxy/TestConstProxy.ts":
/*!***************************************************!*\
  !*** ./src/dMyGame/ConfigProxy/TestConstProxy.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootDataProxy_1 = __webpack_require__(/*! ../../aTGame/Config/RootDataProxy */ "./src/aTGame/Config/RootDataProxy.ts");
const MainGameConfig_1 = __webpack_require__(/*! ../../bTGameConfig/MainGameConfig */ "./src/bTGameConfig/MainGameConfig.ts");
const TestConst_1 = __webpack_require__(/*! ../_config/TestConst */ "./src/dMyGame/_config/TestConst.ts");
/**
 * 测试配置表数据代理
 */
class TestConstProxy extends RootDataProxy_1.BaseConstDataProxy {
    //
    constructor() { super(); }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new TestConstProxy();
        }
        return this._instance;
    }
    /** 不能直接访问 */
    get data() {
        return undefined;
    }
    //初始化
    initData() {
        this.m_data = TestConst_1.TestConst.data;
    }
    /** 是否开启调试 */
    get ifDebug() {
        if (!MainGameConfig_1.default.ifGameTest)
            return false;
        return this.m_data.if_debug;
    }
    /** 是否开启oimo物理 */
    get ifShowOimoMesh() {
        if (!MainGameConfig_1.default.ifGameTest)
            return false;
        return this.m_data.if_show_oimo_mesh;
    }
    /** oimo物理网格透明度 */
    get oimoMeshDiaphaneity() {
        return this.m_data.oimo_mesh_diaphaneity;
    }
}
exports.default = TestConstProxy;


/***/ }),

/***/ "./src/dMyGame/Control/ConManager.ts":
/*!*******************************************!*\
  !*** ./src/dMyGame/Control/ConManager.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 控制器管理器
 */
class ConManager {
    /**
     * 为场景添加所有脚本控制器
     * @param _scene 场景
     */
    static addScrCon(_scene) {
        //
    }
    /**
     * 为场景添加所有普通控制器
     */
    static addCommonCon() {
        //
    }
}
exports.default = ConManager;


/***/ }),

/***/ "./src/dMyGame/Enum/EUI.ts":
/*!*********************************!*\
  !*** ./src/dMyGame/Enum/EUI.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EUI = void 0;
/**
 * 所有UI页面
 */
var EUI;
(function (EUI) {
    /** 游戏加载 */
    EUI["GameLoading"] = "EUI_GameLoading";
    /** 关卡加载 */
    EUI["CustomsLoading"] = "EUI_CustomsLoading";
    //
    /** 主测试 */
    EUI["TestMain"] = "EUI_TestMain";
    /** 测试平台 */
    EUI["TestPlatform"] = "EUI_TestPlatform";
    //
    /** 主页面 */
    EUI["Main"] = "EUI_Main";
    /** 设置页面 */
    EUI["Set"] = "EUI_Set";
    /** 暂停页面 */
    EUI["Pause"] = "EUI_Pause";
    /** 游戏页面 */
    EUI["Play"] = "EUI_Play";
    /** 开始页面 */
    EUI["Start"] = "EUI_Start";
    /** 完成页面 */
    EUI["Com"] = "EUI_Com";
    /** 结束页面 */
    EUI["End"] = "EUI_End";
})(EUI = exports.EUI || (exports.EUI = {}));


/***/ }),

/***/ "./src/dMyGame/EventEnum/EEventAd.ts":
/*!*******************************************!*\
  !*** ./src/dMyGame/EventEnum/EEventAd.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EEventAd = void 0;
/**
 * 所有的广告事件
 */
var EEventAd;
(function (EEventAd) {
    /** 看广告 */
    EEventAd["LookAd"] = "LookAd";
    /** 看完广告 */
    EEventAd["UnLookAd"] = "UnLookAd";
})(EEventAd = exports.EEventAd || (exports.EEventAd = {}));


/***/ }),

/***/ "./src/dMyGame/EventEnum/EEventAudio.ts":
/*!**********************************************!*\
  !*** ./src/dMyGame/EventEnum/EEventAudio.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EEventAudio = void 0;
/**
 * 音效事件
 */
var EEventAudio;
(function (EEventAudio) {
    /** BGM暂停 */
    EEventAudio["BGMSuspend"] = "BGMSuspend";
    /** BGM继续 */
    EEventAudio["BGMGoOn"] = "BGMGoOn";
    /** 音效暂停 */
    EEventAudio["SoundSuspend"] = "SoundSuspend";
    /** 音效继续 */
    EEventAudio["SoundGoOn"] = "SoundGoOn";
    /** BGM音量改变 */
    EEventAudio["BGMVolumeChange"] = "BGMVolumeChange";
    /** Sound音量改变 */
    EEventAudio["SoundVolumeChange"] = "BGMVolumeChange";
})(EEventAudio = exports.EEventAudio || (exports.EEventAudio = {}));
/**
    事件定义规则
    只在产生事件时抛出事件
    不要被动抛出事件避免事件循环抛出
 */ 


/***/ }),

/***/ "./src/dMyGame/EventEnum/EEventGlobal.ts":
/*!***********************************************!*\
  !*** ./src/dMyGame/EventEnum/EEventGlobal.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EEventGlobal = void 0;
/**
 * 全局事件
 */
var EEventGlobal;
(function (EEventGlobal) {
    /** 游戏初始化 */
    EEventGlobal["GameInit"] = "GameInit";
    /** 游戏初始化完成 */
    EEventGlobal["GameOnInit"] = "GameOnInit";
    /** 游戏加载 */
    EEventGlobal["GameLoading"] = "GameLoading";
    /** 游戏资源加载 */
    EEventGlobal["GameResLoading"] = "GameResLoading";
})(EEventGlobal = exports.EEventGlobal || (exports.EEventGlobal = {}));
/**
    事件定义规则
    只在产生事件时抛出事件
    不要被动抛出事件避免事件循环抛出
 */ 


/***/ }),

/***/ "./src/dMyGame/EventEnum/EEventScene.ts":
/*!**********************************************!*\
  !*** ./src/dMyGame/EventEnum/EEventScene.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EEventScene = void 0;
/**
 * 所有的场景事件
 */
var EEventScene;
(function (EEventScene) {
    /** 游戏关卡构建事件 */
    EEventScene["GameLevelsBuild"] = "GameLevelsBuild";
    /** 游戏其他关卡构建事件 */
    EEventScene["GameOtherLevelsBuild"] = "GameOtherLevelsBuild";
    /** 游戏关卡构建前事件 */
    EEventScene["GameLevelsBuildBefore"] = "GameLevelsBuildBefore";
    /** 游戏关卡构建完成事件 */
    EEventScene["GameLevelsOnBuild"] = "GameLevelsOnBuild";
    /** 游戏清除关卡事件 */
    EEventScene["GameLevelsDelete"] = "GameLevelsDelete";
    /** 游戏清除其他关卡事件 */
    EEventScene["GameOtherLevelsDelete"] = "GameOtherLevelsDelete";
    /** 游戏清除关卡前 */
    EEventScene["GameLevelsDeleteBefore"] = "GameLevelsDeleteBefore";
    /** 游戏清除完成 */
    EEventScene["GameLevelsOnDelete"] = "GameLevelsOnDelete";
    /** 游戏开始 */
    EEventScene["GameStart"] = "Start";
    /** 游戏暂停 */
    EEventScene["GameSuspend"] = "GameSuspend";
    /** 游戏继续 */
    EEventScene["GameGoOn"] = "GameGoOn";
    /** 游戏重新开始 */
    EEventScene["GameRestart"] = "GameRestart";
    /** 游戏结束 */
    EEventScene["GameEnd"] = "GameEnd";
    /** 游戏完成 */
    EEventScene["GameCom"] = "GameCom";
    /** 游戏失败 */
    EEventScene["GameFail"] = "gameFail";
    /** 角色死亡 */
    EEventScene["RoleDie"] = "RoleDie";
    /** 角色复活 */
    EEventScene["RoleRevive"] = "Revive";
})(EEventScene = exports.EEventScene || (exports.EEventScene = {}));


/***/ }),

/***/ "./src/dMyGame/EventEnum/EEventUI.ts":
/*!*******************************************!*\
  !*** ./src/dMyGame/EventEnum/EEventUI.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EEventUI = void 0;
/**
 * 所有的UI事件
 */
var EEventUI;
(function (EEventUI) {
    /** 关卡改变 */
    EEventUI["CustomsChange"] = "CustomsChange";
    /** 金币改变 */
    EEventUI["GameCoinChange"] = "GameCoinChange";
    /** 音效状态改变 */
    EEventUI["SoundStateChange"] = "SoundStateChange";
    /** 振动状态改变 */
    EEventUI["VibrateStateChange"] = "VibrateStateChange";
    //
    /** 关卡构建进度 */
    EEventUI["SceneGameCustomsLoading"] = "SceneGameCustomsLoading";
    /** 3D更新事件 */
    EEventUI["Updata3D"] = "Updata3D";
})(EEventUI = exports.EEventUI || (exports.EEventUI = {}));


/***/ }),

/***/ "./src/dMyGame/GameData/GameData.ts":
/*!******************************************!*\
  !*** ./src/dMyGame/GameData/GameData.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const CommonLeveEnum_1 = __webpack_require__(/*! ../../aTGame/Commom/CommonLeveEnum */ "./src/aTGame/Commom/CommonLeveEnum.ts");
const RootLocalStorageData_1 = __webpack_require__(/*! ../../aTGame/Data/RootLocalStorageData */ "./src/aTGame/Data/RootLocalStorageData.ts");
/**
 * 游戏需要持久化的主要数据
 */
class GameData extends RootLocalStorageData_1.default {
    constructor() {
        super(...arguments);
        /** 最大关卡数量 */
        this.maxCustoms = 0;
        /** 是否打开背景音乐 */
        this.ifOpenBgm = true;
        /** 是否打开音效 */
        this.ifOpenSound = true;
        /** 是否打开振动 */
        this.ifOpenVibrate = true;
        /** 当前关卡 默认为调试关卡 */
        this.onCustoms = CommonLeveEnum_1.ECommonLeve.DebugLeveId;
        /** 最大关卡记录 */
        this.maxCustomsRecord = 1;
    }
}
exports.default = GameData;


/***/ }),

/***/ "./src/dMyGame/GameData/GameDataProxy.ts":
/*!***********************************************!*\
  !*** ./src/dMyGame/GameData/GameDataProxy.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootLocalStorageProxy_1 = __webpack_require__(/*! ../../aTGame/Data/RootLocalStorageProxy */ "./src/aTGame/Data/RootLocalStorageProxy.ts");
const GameData_1 = __webpack_require__(/*! ./GameData */ "./src/dMyGame/GameData/GameData.ts");
/**
 * 数据保存类
 */
class GameDataProxy extends RootLocalStorageProxy_1.default {
    /** 不允许外界实例化 */
    constructor() {
        super();
    }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new GameDataProxy();
        }
        //
        return this._instance;
    }
    /** 获取保存名称 */
    get _saveName() {
        return "Game";
    }
    //获取一个新的数据
    getNewData() {
        return new GameData_1.default();
    }
}
exports.default = GameDataProxy;


/***/ }),

/***/ "./src/dMyGame/GameData/GameNewHandData.ts":
/*!*************************************************!*\
  !*** ./src/dMyGame/GameData/GameNewHandData.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootLocalStorageData_1 = __webpack_require__(/*! ../../aTGame/Data/RootLocalStorageData */ "./src/aTGame/Data/RootLocalStorageData.ts");
/**
 * 游戏需要持久化的新手引导数据
 */
class GameNewHandData extends RootLocalStorageData_1.default {
}
exports.default = GameNewHandData;


/***/ }),

/***/ "./src/dMyGame/GameData/GameNewHandDataProxy.ts":
/*!******************************************************!*\
  !*** ./src/dMyGame/GameData/GameNewHandDataProxy.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootLocalStorageProxy_1 = __webpack_require__(/*! ../../aTGame/Data/RootLocalStorageProxy */ "./src/aTGame/Data/RootLocalStorageProxy.ts");
const GameNewHandData_1 = __webpack_require__(/*! ./GameNewHandData */ "./src/dMyGame/GameData/GameNewHandData.ts");
/**
 * 新手引导数据保存类
 */
class GameNewHandDataProxy extends RootLocalStorageProxy_1.default {
    /** 不允许外界实例化 */
    constructor() {
        super();
    }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new GameNewHandDataProxy();
        }
        //
        return this._instance;
    }
    /** 获取保存名称 */
    get _saveName() {
        return "GameNewHand";
    }
    //获取一个新的数据
    getNewData() {
        return new GameNewHandData_1.default();
    }
}
exports.default = GameNewHandDataProxy;


/***/ }),

/***/ "./src/dMyGame/GameData/GamePropData.ts":
/*!**********************************************!*\
  !*** ./src/dMyGame/GameData/GamePropData.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootLocalStorageData_1 = __webpack_require__(/*! ../../aTGame/Data/RootLocalStorageData */ "./src/aTGame/Data/RootLocalStorageData.ts");
/**
 * 游戏需要持久化的道具数据
 */
class GamePropData extends RootLocalStorageData_1.default {
    constructor() {
        super(...arguments);
        /** 金币数量 */
        this.coinCount = 0;
    }
}
exports.default = GamePropData;


/***/ }),

/***/ "./src/dMyGame/GameData/GamePropDataProxy.ts":
/*!***************************************************!*\
  !*** ./src/dMyGame/GameData/GamePropDataProxy.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootLocalStorageProxy_1 = __webpack_require__(/*! ../../aTGame/Data/RootLocalStorageProxy */ "./src/aTGame/Data/RootLocalStorageProxy.ts");
const GamePropData_1 = __webpack_require__(/*! ./GamePropData */ "./src/dMyGame/GameData/GamePropData.ts");
/**
 * 道具数据保存类
 */
class GamePropDataProxy extends RootLocalStorageProxy_1.default {
    /** 不允许外界实例化 */
    constructor() {
        super();
    }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new GamePropDataProxy();
        }
        //
        return this._instance;
    }
    /** 获取保存名称 */
    get _saveName() {
        return "GameProp";
    }
    //获取一个新的数据
    getNewData() {
        return new GamePropData_1.default();
    }
}
exports.default = GamePropDataProxy;


/***/ }),

/***/ "./src/dMyGame/GameData/GameShortData.ts":
/*!***********************************************!*\
  !*** ./src/dMyGame/GameData/GameShortData.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootGameData_1 = __webpack_require__(/*! ../../aTGame/Data/RootGameData */ "./src/aTGame/Data/RootGameData.ts");
const GameOnCustomData_1 = __webpack_require__(/*! ./shortData/GameOnCustomData */ "./src/dMyGame/GameData/shortData/GameOnCustomData.ts");
/**
 * 游戏临时数据类
 */
class GameShortData extends RootGameData_1.default {
    constructor() {
        super(...arguments);
        /** 当前关卡的数据 */
        this.onCustomsData = new GameOnCustomData_1.default();
        //
    }
}
exports.default = GameShortData;


/***/ }),

/***/ "./src/dMyGame/GameData/GameShortDataProxy.ts":
/*!****************************************************!*\
  !*** ./src/dMyGame/GameData/GameShortDataProxy.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootShortProxy_1 = __webpack_require__(/*! ../../aTGame/Data/RootShortProxy */ "./src/aTGame/Data/RootShortProxy.ts");
const GameShortData_1 = __webpack_require__(/*! ./GameShortData */ "./src/dMyGame/GameData/GameShortData.ts");
/**
 * 临时数据保存类
 */
class GameShortDataProxy extends RootShortProxy_1.default {
    /** 不允许外界实例化 */
    constructor() {
        super();
    }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new GameShortDataProxy();
        }
        //
        return this._instance;
    }
    // 初始化
    InitData() {
        this._shortData = new GameShortData_1.default();
    }
    /** 临时数据 */
    get shortData() {
        return this._shortData;
    }
    // ** -------------------------------------------------------------------------------------- ** //
    /**
     * 清空临时数据
     */
    static emptyGameOnCustomData() {
        this._instance._shortData = new GameShortData_1.default();
    }
}
exports.default = GameShortDataProxy;


/***/ }),

/***/ "./src/dMyGame/GameData/GameSignData.ts":
/*!**********************************************!*\
  !*** ./src/dMyGame/GameData/GameSignData.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootLocalStorageData_1 = __webpack_require__(/*! ../../aTGame/Data/RootLocalStorageData */ "./src/aTGame/Data/RootLocalStorageData.ts");
/**
 * 游戏需要持久化的签到数据
 */
class GameSignData extends RootLocalStorageData_1.default {
    constructor() {
        super(...arguments);
        /** 是否签到 */
        this.ifSignIn = false;
        /** 是否是第一天 */
        this.ifOneDay = false;
    }
}
exports.default = GameSignData;


/***/ }),

/***/ "./src/dMyGame/GameData/GameSignDataProxy.ts":
/*!***************************************************!*\
  !*** ./src/dMyGame/GameData/GameSignDataProxy.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootLocalStorageProxy_1 = __webpack_require__(/*! ../../aTGame/Data/RootLocalStorageProxy */ "./src/aTGame/Data/RootLocalStorageProxy.ts");
const GameSignData_1 = __webpack_require__(/*! ./GameSignData */ "./src/dMyGame/GameData/GameSignData.ts");
/**
 * 签到数据保存类
 */
class GameSignDataProxy extends RootLocalStorageProxy_1.default {
    /** 不允许外界实例化 */
    constructor() {
        super();
    }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new GameSignDataProxy();
        }
        //
        return this._instance;
    }
    /** 获取保存名称 */
    get _saveName() {
        return "GameSign";
    }
    //获取一个新的数据
    getNewData() {
        return new GameSignData_1.default();
    }
}
exports.default = GameSignDataProxy;


/***/ }),

/***/ "./src/dMyGame/GameData/GameSkinData.ts":
/*!**********************************************!*\
  !*** ./src/dMyGame/GameData/GameSkinData.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootLocalStorageData_1 = __webpack_require__(/*! ../../aTGame/Data/RootLocalStorageData */ "./src/aTGame/Data/RootLocalStorageData.ts");
/**
 * 游戏需要持久化的皮肤数据
 */
class GameSkinData extends RootLocalStorageData_1.default {
}
exports.default = GameSkinData;


/***/ }),

/***/ "./src/dMyGame/GameData/GameSkinDataProxy.ts":
/*!***************************************************!*\
  !*** ./src/dMyGame/GameData/GameSkinDataProxy.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootLocalStorageProxy_1 = __webpack_require__(/*! ../../aTGame/Data/RootLocalStorageProxy */ "./src/aTGame/Data/RootLocalStorageProxy.ts");
const GameSkinData_1 = __webpack_require__(/*! ./GameSkinData */ "./src/dMyGame/GameData/GameSkinData.ts");
/**
 * 皮肤数据保存类
 */
class GameSkinDataProxy extends RootLocalStorageProxy_1.default {
    /** 不允许外界实例化 */
    constructor() {
        super();
    }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new GameSkinDataProxy();
        }
        //
        return this._instance;
    }
    /** 获取保存名称 */
    get _saveName() {
        return "GameSkin";
    }
    //获取一个新的数据
    getNewData() {
        return new GameSkinData_1.default();
    }
}
exports.default = GameSkinDataProxy;


/***/ }),

/***/ "./src/dMyGame/GameData/GameTestData.ts":
/*!**********************************************!*\
  !*** ./src/dMyGame/GameData/GameTestData.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootLocalStorageData_1 = __webpack_require__(/*! ../../aTGame/Data/RootLocalStorageData */ "./src/aTGame/Data/RootLocalStorageData.ts");
/**
 * 游戏需要持久化的测试数据
 */
class GameTestData extends RootLocalStorageData_1.default {
    constructor() {
        super(...arguments);
        /** 测试数值 */
        this.testNumber = 0;
        /** 测试布尔值 */
        this.testBoolean = false;
        /** 测试数组 */
        this.testArray = [];
        /** 测试对象 */
        this.testObject = {
            a: 0,
            b: 0,
            c: 0,
        };
    }
}
exports.default = GameTestData;


/***/ }),

/***/ "./src/dMyGame/GameData/GameTestDataProxy.ts":
/*!***************************************************!*\
  !*** ./src/dMyGame/GameData/GameTestDataProxy.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootLocalStorageProxy_1 = __webpack_require__(/*! ../../aTGame/Data/RootLocalStorageProxy */ "./src/aTGame/Data/RootLocalStorageProxy.ts");
const GameTestData_1 = __webpack_require__(/*! ./GameTestData */ "./src/dMyGame/GameData/GameTestData.ts");
/**
 * 测试数据保存类
 */
class GameTestDataProxy extends RootLocalStorageProxy_1.default {
    /** 不允许外界实例化 */
    constructor() {
        super();
    }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new GameTestDataProxy();
        }
        //
        return this._instance;
    }
    /** 获取保存名称 */
    get _saveName() {
        return "GameTest";
    }
    //获取一个新的数据
    getNewData() {
        return new GameTestData_1.default();
    }
}
exports.default = GameTestDataProxy;


/***/ }),

/***/ "./src/dMyGame/GameData/shortData/GameOnCustomData.ts":
/*!************************************************************!*\
  !*** ./src/dMyGame/GameData/shortData/GameOnCustomData.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootGameData_1 = __webpack_require__(/*! ../../../aTGame/Data/RootGameData */ "./src/aTGame/Data/RootGameData.ts");
/**
 * 当前关卡数据
 */
class GameOnCustomData extends RootGameData_1.default {
    /** 返回一个副本 */
    clone() {
        return JSON.parse(JSON.stringify(this));
    }
}
exports.default = GameOnCustomData;


/***/ }),

/***/ "./src/dMyGame/MainStart.ts":
/*!**********************************!*\
  !*** ./src/dMyGame/MainStart.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const Game3D_1 = __webpack_require__(/*! ./Main/Game/Game3D */ "./src/dMyGame/Main/Game/Game3D.ts");
const GameLoad_1 = __webpack_require__(/*! ./Main/GameLoad */ "./src/dMyGame/Main/GameLoad.ts");
const Game2D_1 = __webpack_require__(/*! ./Main/Game/Game2D */ "./src/dMyGame/Main/Game/Game2D.ts");
const MainTest_1 = __webpack_require__(/*! ../aTGame/Test/MainTest */ "./src/aTGame/Test/MainTest.ts");
const MainGameConfig_1 = __webpack_require__(/*! ../bTGameConfig/MainGameConfig */ "./src/bTGameConfig/MainGameConfig.ts");
const ConsoleEx_1 = __webpack_require__(/*! ../aTGame/Console/ConsoleEx */ "./src/aTGame/Console/ConsoleEx.ts");
const MyMainTest_1 = __webpack_require__(/*! ../eTest/MyMainTest */ "./src/eTest/MyMainTest.ts");
const MainDebug_1 = __webpack_require__(/*! ../aTGame/Debug/MainDebug */ "./src/aTGame/Debug/MainDebug.ts");
const MyMainDebug_1 = __webpack_require__(/*! ../fDebug/MyMainDebug */ "./src/fDebug/MyMainDebug.ts");
const RootDebug_1 = __webpack_require__(/*! ../aTGame/Debug/RootDebug */ "./src/aTGame/Debug/RootDebug.ts");
const FrameSubpackages_1 = __webpack_require__(/*! ../cFrameBridge/FrameSubpackages */ "./src/cFrameBridge/FrameSubpackages.ts");
const PlatformManager_1 = __webpack_require__(/*! ../aTGame/Platform/PlatformManager */ "./src/aTGame/Platform/PlatformManager.ts");
/**
 * 游戏开始类
 */
class MainStart {
    //游戏开始创建
    constructor() {
        //初始化
        this.init().then(() => {
            //
            this.upGameLoad();
            //
            this.gameLoad();
        });
    }
    //初始化之前执行
    init() {
        return new Promise((r) => {
            //初始化平台管理器
            PlatformManager_1.default.instance.init();
            PlatformManager_1.default.instance.initPlatform();
            //加载分包资源
            this.loadSubpackage().then(() => {
                r();
            });
        });
    }
    //加载分包资源
    loadSubpackage() {
        //
        return new Promise((r) => {
            //分包列表
            if (FrameSubpackages_1.default.subpackages.length > 0) {
                //加载所有分包
                let _promiseList = [];
                for (let _o of FrameSubpackages_1.default.subpackages) {
                    //
                    if (_o.name) {
                        _promiseList.push(new Promise((r) => {
                            PlatformManager_1.default.PlatformInstance.LoadSubpackage(_o.name, Laya.Handler.create(this, () => {
                                r();
                            }), Laya.Handler.create(this, () => {
                                r();
                            }), undefined);
                        }));
                    }
                }
                //
                Promise.all(_promiseList).then(() => {
                    r();
                });
            }
            else {
                r();
            }
        });
    }
    /** 游戏加载之前 */
    upGameLoad() {
        //判断是否开启测试
        if (MainGameConfig_1.default.ifTest) {
            //激活测试类
            new MainTest_1.default().startTest(); //主测试
            new MyMainTest_1.default().startTest(); //项目测试
        }
        //判断是否开启调试
        if (MainGameConfig_1.default.ifDebug) {
            //激活调试类
            new MainDebug_1.default().startDebug(); //主调试
            new MyMainDebug_1.default().startDebug(); //项目调试
            //判断是否打开新窗口调试
            if (MainGameConfig_1.default.ifOpenWindowDebug) {
                //打开新窗口进行调试
                RootDebug_1.default.openWindowDebug();
            }
        }
    }
    /** 加载游戏 */
    gameLoad() {
        let _gameLoad = new GameLoad_1.default();
        //
        console.log(...ConsoleEx_1.default.comLog('开始加载游戏'));
        //开始加载处理
        _gameLoad.Enter(this, undefined, this.OnGameLoad);
    }
    /** 游戏进入之前的操作之前之后 */
    OnGameLoad() {
        return new Promise((_r) => {
            _r();
            //
            console.log(...ConsoleEx_1.default.comLog('游戏加载完成'));
            //判断游戏类型
            if (MainGameConfig_1.default.support3D) {
                //进入3D游戏
                Game3D_1.default.instance.enterGame();
            }
            if (MainGameConfig_1.default.support2D) {
                //进入2D游戏
                Game2D_1.default.instance.enterGame();
            }
            //
            this.OnGameEnter();
        });
    }
    /** 进入游戏之后 */
    OnGameEnter() { }
}
exports.default = MainStart;


/***/ }),

/***/ "./src/dMyGame/Main/GameLoad.ts":
/*!**************************************!*\
  !*** ./src/dMyGame/Main/GameLoad.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ConfigManager_1 = __webpack_require__(/*! ../../aTGame/Config/ConfigManager */ "./src/aTGame/Config/ConfigManager.ts");
const GameConst_1 = __webpack_require__(/*! ../_config/GameConst */ "./src/dMyGame/_config/GameConst.ts");
const LevelConfig_1 = __webpack_require__(/*! ../_config/LevelConfig */ "./src/dMyGame/_config/LevelConfig.ts");
const EnvironmentConfig_1 = __webpack_require__(/*! ../_config/EnvironmentConfig */ "./src/dMyGame/_config/EnvironmentConfig.ts");
const LoadUIPack_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/LoadUIPack */ "./src/aTGame/UI/FGUI/LoadUIPack.ts");
const MainConfig_1 = __webpack_require__(/*! ../../bTGameConfig/MainConfig */ "./src/bTGameConfig/MainConfig.ts");
const RootGameLoad_1 = __webpack_require__(/*! ../../aTGame/Main/RootGameLoad */ "./src/aTGame/Main/RootGameLoad.ts");
const EUILayer_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/EUILayer */ "./src/aTGame/UI/FGUI/EUILayer.ts");
const FGuiRootManager_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/FGuiRootManager */ "./src/aTGame/UI/FGUI/FGuiRootManager.ts");
const GlobalStateManager_1 = __webpack_require__(/*! ../Manager/GlobalStateManager */ "./src/dMyGame/Manager/GlobalStateManager.ts");
const SkinConfig_1 = __webpack_require__(/*! ../_config/SkinConfig */ "./src/dMyGame/_config/SkinConfig.ts");
const EssentialResUrls_1 = __webpack_require__(/*! ../../aTGame/Res/EssentialResUrls */ "./src/aTGame/Res/EssentialResUrls.ts");
const FGUI_splash_1 = __webpack_require__(/*! ../../FGUI/InitLoad/FGUI_splash */ "./src/FGUI/InitLoad/FGUI_splash.ts");
const GameStateConst_1 = __webpack_require__(/*! ../_config/GameStateConst */ "./src/dMyGame/_config/GameStateConst.ts");
const ResUrl_1 = __webpack_require__(/*! ../../aTGame/Res/ResUrl */ "./src/aTGame/Res/ResUrl.ts");
const GameCommonBinder_1 = __webpack_require__(/*! ../../FGUI/GameCommon/GameCommonBinder */ "./src/FGUI/GameCommon/GameCommonBinder.ts");
const GameMainBinder_1 = __webpack_require__(/*! ../../FGUI/GameMain/GameMainBinder */ "./src/FGUI/GameMain/GameMainBinder.ts");
const InitEmptyScreenBinder_1 = __webpack_require__(/*! ../../FGUI/InitEmptyScreen/InitEmptyScreenBinder */ "./src/FGUI/InitEmptyScreen/InitEmptyScreenBinder.ts");
const InitLoadBinder_1 = __webpack_require__(/*! ../../FGUI/InitLoad/InitLoadBinder */ "./src/FGUI/InitLoad/InitLoadBinder.ts");
const FGUI_EmptyScreen_1 = __webpack_require__(/*! ../../FGUI/InitEmptyScreen/FGUI_EmptyScreen */ "./src/FGUI/InitEmptyScreen/FGUI_EmptyScreen.ts");
const ESounds_1 = __webpack_require__(/*! ../ResList/ESounds */ "./src/dMyGame/ResList/ESounds.ts");
const CameraConst_1 = __webpack_require__(/*! ../_config/CameraConst */ "./src/dMyGame/_config/CameraConst.ts");
const LightingConst_1 = __webpack_require__(/*! ../_config/LightingConst */ "./src/dMyGame/_config/LightingConst.ts");
const TestConst_1 = __webpack_require__(/*! ../_config/TestConst */ "./src/dMyGame/_config/TestConst.ts");
const GameDataProxy_1 = __webpack_require__(/*! ../GameData/GameDataProxy */ "./src/dMyGame/GameData/GameDataProxy.ts");
const GamePropDataProxy_1 = __webpack_require__(/*! ../GameData/GamePropDataProxy */ "./src/dMyGame/GameData/GamePropDataProxy.ts");
const GameSkinDataProxy_1 = __webpack_require__(/*! ../GameData/GameSkinDataProxy */ "./src/dMyGame/GameData/GameSkinDataProxy.ts");
const GameSignDataProxy_1 = __webpack_require__(/*! ../GameData/GameSignDataProxy */ "./src/dMyGame/GameData/GameSignDataProxy.ts");
const GameShortDataProxy_1 = __webpack_require__(/*! ../GameData/GameShortDataProxy */ "./src/dMyGame/GameData/GameShortDataProxy.ts");
const LevelPropConfig_1 = __webpack_require__(/*! ../_config/LevelPropConfig */ "./src/dMyGame/_config/LevelPropConfig.ts");
const OtherConst_1 = __webpack_require__(/*! ../_config/OtherConst */ "./src/dMyGame/_config/OtherConst.ts");
const EBGMs_1 = __webpack_require__(/*! ../ResList/EBGMs */ "./src/dMyGame/ResList/EBGMs.ts");
const GameNewHandDataProxy_1 = __webpack_require__(/*! ../GameData/GameNewHandDataProxy */ "./src/dMyGame/GameData/GameNewHandDataProxy.ts");
const OtherLevelConfig_1 = __webpack_require__(/*! ../_config/OtherLevelConfig */ "./src/dMyGame/_config/OtherLevelConfig.ts");
const OtherEnvironmentConfig_1 = __webpack_require__(/*! ../_config/OtherEnvironmentConfig */ "./src/dMyGame/_config/OtherEnvironmentConfig.ts");
const GameTestDataProxy_1 = __webpack_require__(/*! ../GameData/GameTestDataProxy */ "./src/dMyGame/GameData/GameTestDataProxy.ts");
const FGuiData_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/FGuiData */ "./src/aTGame/UI/FGUI/FGuiData.ts");
/**
 * 游戏进入之前的加载操作类
 */
class GameLoad extends RootGameLoad_1.default {
    //初始化之前的操作
    _Init() {
        GlobalStateManager_1.GlobalStateManager.instance.GameInit();
        //白屏时显示的包
        this._initEmptyScreen = new LoadUIPack_1.LoadUIPack(EssentialResUrls_1.default.FGUIPack('InitEmptyScreen'));
        //需要初始化加载的ui包。
        this._initUiPack = new LoadUIPack_1.LoadUIPack(EssentialResUrls_1.default.FGUIPack('InitLoad'), 0);
        //其他需要加载的UI包
        this._needLoadOtherUIPack = [
            new LoadUIPack_1.LoadUIPack(EssentialResUrls_1.default.FGUIPack('GameCommon')),
            new LoadUIPack_1.LoadUIPack(EssentialResUrls_1.default.FGUIPack('GameMain'), 0),
        ];
        //
        return;
    }
    //初始化
    _OnInitEmptyScreen() {
        //打开白屏UI
        this._emptyScreenShowUI = FGuiRootManager_1.default.AddUI(FGUI_EmptyScreen_1.default, new FGuiData_1.default(), EUILayer_1.EUILayer.Main);
    }
    //初始化UI加载完成 (在这里设置进度条)
    _OnInitUILoaded() {
        //隐藏白屏U
        this._emptyScreenShowUI.dispose();
        //添加UI
        this._loadShowUI = FGuiRootManager_1.default.AddUI(FGUI_splash_1.default, new FGuiData_1.default(), EUILayer_1.EUILayer.Loading);
        this._loadShowUI.sortingOrder = Number.MAX_SAFE_INTEGER;
        //设置所属团队
        this._loadShowUI.m_text_explain.text = MainConfig_1.default.GameWhatTeam;
        //设置logo
        this._loadShowUI.m_text_logo.text = MainConfig_1.default.GameName_;
        //设置版本
        this._loadShowUI.m_text_v.text = MainConfig_1.default.versions;
        //设置说明
        this._loadShowUI.m_text_game_explain.text = MainConfig_1.default.GameExplain;
        //设置laya版本
        this._loadShowUI.m_text_laya_v.text = Laya.version;
        //获取加载进度条
        this._loadingProgress = this._loadShowUI.m_progress;
        //获取进度显示文字
        this._loadingProgressText = this._loadShowUI.m_loading_progress;
        //设置默认进度
        this._loadingProgress.value = 0;
    }
    //捆绑UI
    OnBindUI() {
        InitEmptyScreenBinder_1.default.bindAll();
        InitLoadBinder_1.default.bindAll();
        GameCommonBinder_1.default.bindAll();
        GameMainBinder_1.default.bindAll();
    }
    // 注册表格
    OnSetLoadConfig() {
        ConfigManager_1.ConfigManager.AddConfig(CameraConst_1.CameraConst);
        ConfigManager_1.ConfigManager.AddConfig(EnvironmentConfig_1.EnvironmentConfig);
        ConfigManager_1.ConfigManager.AddConfig(OtherEnvironmentConfig_1.OtherEnvironmentConfig);
        ConfigManager_1.ConfigManager.AddConfig(GameConst_1.GameConst);
        ConfigManager_1.ConfigManager.AddConfig(GameStateConst_1.GameStateConst);
        ConfigManager_1.ConfigManager.AddConfig(LevelConfig_1.LevelConfig);
        ConfigManager_1.ConfigManager.AddConfig(OtherLevelConfig_1.OtherLevelConfig);
        ConfigManager_1.ConfigManager.AddConfig(LevelPropConfig_1.LevelPropConfig);
        ConfigManager_1.ConfigManager.AddConfig(LightingConst_1.LightingConst);
        ConfigManager_1.ConfigManager.AddConfig(OtherConst_1.OtherConst);
        ConfigManager_1.ConfigManager.AddConfig(SkinConfig_1.SkinConfig);
        ConfigManager_1.ConfigManager.AddConfig(TestConst_1.TestConst);
    }
    //注册数据
    loginData() {
        //游戏主要保存数据
        GameDataProxy_1.default.instance.InitData();
        //游戏新手引导数据
        GameNewHandDataProxy_1.default.instance.InitData();
        //游戏道具数据
        GamePropDataProxy_1.default.instance.InitData();
        //游戏皮肤数据
        GameSkinDataProxy_1.default.instance.InitData();
        //游戏签到数据
        GameSignDataProxy_1.default.instance.InitData();
        //游戏临时数据
        GameShortDataProxy_1.default.instance.InitData();
        //测试数据
        GameTestDataProxy_1.default.instance.InitData();
    }
    // 获取其它游戏资源, 可以依赖游戏表格
    OnGameResPrepared(urls) {
        //把所有音效添加进预加载列表
        let _str;
        //背景音乐
        for (let _i in EBGMs_1.EBGMs) {
            //
            _str = EBGMs_1.EBGMs[_i];
            //判断是否是空元素
            if (_str == '')
                continue;
            //添加进列表
            urls.push(ResUrl_1.default.music_url(_str));
        }
        //音效
        for (let _i in ESounds_1.ESounds) {
            //
            _str = ESounds_1.ESounds[_i];
            //判断是否是空元素
            if (_str == '')
                continue;
            //添加进列表
            urls.push(ResUrl_1.default.sound_url(_str));
        }
    }
    //游戏加载进度
    onLoading(_n) {
        this._loadingProgress.value = _n; //设置进度条
        this._loadingProgressText.text = Math.floor(_n).toString() + '%'; //设置文字进度
    }
    // 完成
    OnComplete() {
        //关闭加载时显示的UI
        this._loadShowUI.dispose();
        //游戏初始化完成
        GlobalStateManager_1.GlobalStateManager.instance.GameOnInit();
    }
}
exports.default = GameLoad;


/***/ }),

/***/ "./src/dMyGame/Main/Game/Game2D.ts":
/*!*****************************************!*\
  !*** ./src/dMyGame/Main/Game/Game2D.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 2d 游戏 入口
 */
class Game2D {
    //
    constructor() { }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new Game2D();
        }
        return this._instance;
    }
    /**
     * 进入游戏
     */
    enterGame() {
        this.initGame();
    }
    //初始化游戏
    initGame() {
        //
    }
}
exports.default = Game2D;


/***/ }),

/***/ "./src/dMyGame/Main/Game/Game3D.ts":
/*!*****************************************!*\
  !*** ./src/dMyGame/Main/Game/Game3D.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const CustomsManager_1 = __webpack_require__(/*! ../../Manager/CustomsManager */ "./src/dMyGame/Manager/CustomsManager.ts");
const UIManager_1 = __webpack_require__(/*! ../../Manager/UIManager */ "./src/dMyGame/Manager/UIManager.ts");
const GlobalStateManager_1 = __webpack_require__(/*! ../../Manager/GlobalStateManager */ "./src/dMyGame/Manager/GlobalStateManager.ts");
const GameManager_1 = __webpack_require__(/*! ../../Manager/GameManager */ "./src/dMyGame/Manager/GameManager.ts");
const EnvironmentManager_1 = __webpack_require__(/*! ../../Manager/EnvironmentManager */ "./src/dMyGame/Manager/EnvironmentManager.ts");
const MesManager_1 = __webpack_require__(/*! ../../Manager/MesManager */ "./src/dMyGame/Manager/MesManager.ts");
const TestConstProxy_1 = __webpack_require__(/*! ../../ConfigProxy/TestConstProxy */ "./src/dMyGame/ConfigProxy/TestConstProxy.ts");
const AudioManager_1 = __webpack_require__(/*! ../../Manager/AudioManager */ "./src/dMyGame/Manager/AudioManager.ts");
/**
 * 3d 游戏 入口
 */
class Game3D {
    //
    constructor() { }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new Game3D();
        }
        return this._instance;
    }
    /**
     * 进入游戏
     */
    enterGame() {
        //初始化游戏
        this.initGame();
        //开始游戏前
        this._startGame();
        //开始游戏
        this.startGame();
    }
    //初始化游戏
    initGame() {
        //初始化全局状态管理器
        GlobalStateManager_1.GlobalStateManager.instance.init();
        //简易消息管理器
        MesManager_1.default.instance.init();
        //音效管理器
        AudioManager_1.default.instance.init();
        //游戏管理器
        GameManager_1.default.instance.init();
        //初始化环境管理器
        EnvironmentManager_1.default.instance.init();
        //初始化UI
        UIManager_1.default.instance.init();
        //初始化场景
        CustomsManager_1.default.instance.init();
    }
    //开始游戏之前
    _startGame() {
        //打开debug显示页面
        if (TestConstProxy_1.default.instance.ifDebug) {
            Laya.Stat.show();
        }
        else {
            Laya.Stat.hide();
        }
        // 关闭多点触控
        // Laya.MouseManager.multiTouchEnabled = true;
    }
    //开始游戏
    startGame() {
        //
        UIManager_1.default.instance.Start();
        //
        CustomsManager_1.default.instance.initLevelBuild();
    }
}
exports.default = Game3D;


/***/ }),

/***/ "./src/dMyGame/Manager/AudioManager.ts":
/*!*********************************************!*\
  !*** ./src/dMyGame/Manager/AudioManager.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const EEventAudio_1 = __webpack_require__(/*! ../EventEnum/EEventAudio */ "./src/dMyGame/EventEnum/EEventAudio.ts");
const AudioProxy_1 = __webpack_require__(/*! ../Proxy/AudioProxy */ "./src/dMyGame/Proxy/AudioProxy.ts");
const MesManager_1 = __webpack_require__(/*! ./MesManager */ "./src/dMyGame/Manager/MesManager.ts");
/**
 * 音效管理类
 */
class AudioManager {
    //
    constructor() { }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new AudioManager();
        }
        return this._instance;
    }
    //初始化
    init() {
        MesManager_1.default.instance.onEvent(EEventAudio_1.EEventAudio.BGMSuspend, this, this.BGMsuSpend);
        MesManager_1.default.instance.onEvent(EEventAudio_1.EEventAudio.BGMGoOn, this, this.BGMGoOn);
        MesManager_1.default.instance.onEvent(EEventAudio_1.EEventAudio.SoundSuspend, this, this.soundSuspend);
        MesManager_1.default.instance.onEvent(EEventAudio_1.EEventAudio.SoundGoOn, this, this.soundGoOn);
        MesManager_1.default.instance.onEvent(EEventAudio_1.EEventAudio.BGMVolumeChange, this, this.bgmVolumeChange);
        MesManager_1.default.instance.onEvent(EEventAudio_1.EEventAudio.SoundVolumeChange, this, this.soundVolumeChange);
    }
    //BGM暂停
    BGMsuSpend() {
        AudioProxy_1.default.instance.stopBGM();
    }
    //BGM继续
    BGMGoOn() {
        AudioProxy_1.default.instance.BGMGoOn();
    }
    //音效暂停
    soundSuspend() {
        AudioProxy_1.default.instance.soundSuspend();
    }
    //音效继续
    soundGoOn() {
        AudioProxy_1.default.instance.soundGoOn();
    }
    //BGM音量改变
    bgmVolumeChange(_n = 1) {
        Laya.SoundManager.setMusicVolume(_n);
    }
    //音效音量改变
    soundVolumeChange(_n = 1) {
        Laya.SoundManager.setSoundVolume(_n);
    }
}
exports.default = AudioManager;


/***/ }),

/***/ "./src/dMyGame/Manager/CustomsManager.ts":
/*!***********************************************!*\
  !*** ./src/dMyGame/Manager/CustomsManager.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ConManager_1 = __webpack_require__(/*! ../Control/ConManager */ "./src/dMyGame/Control/ConManager.ts");
const SceneManager_1 = __webpack_require__(/*! ../../aTGame/3D/SceneManager */ "./src/aTGame/3D/SceneManager.ts");
const Const_1 = __webpack_require__(/*! ../Common/Const */ "./src/dMyGame/Common/Const.ts");
const EnvironmentManager_1 = __webpack_require__(/*! ./EnvironmentManager */ "./src/dMyGame/Manager/EnvironmentManager.ts");
const MesManager_1 = __webpack_require__(/*! ./MesManager */ "./src/dMyGame/Manager/MesManager.ts");
const EEventScene_1 = __webpack_require__(/*! ../EventEnum/EEventScene */ "./src/dMyGame/EventEnum/EEventScene.ts");
const EEventUI_1 = __webpack_require__(/*! ../EventEnum/EEventUI */ "./src/dMyGame/EventEnum/EEventUI.ts");
const LevelConfigProxy_1 = __webpack_require__(/*! ../ConfigProxy/LevelConfigProxy */ "./src/dMyGame/ConfigProxy/LevelConfigProxy.ts");
const GameDataProxyShell_1 = __webpack_require__(/*! ../Proxy/data/GameDataProxyShell */ "./src/dMyGame/Proxy/data/GameDataProxyShell.ts");
/**
 * 关卡管理器
 * 3D游戏实际从这里开始，沟通外界创建和销毁场景
 */
class CustomsManager {
    //
    constructor() {
        //是否初始化
        this.m_ifInit = false;
        //其他场景缓存
        this.m_otherScene = {};
    }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new CustomsManager();
        }
        return this.m_instance;
    }
    /** 场景是否在加载 */
    get ifSceneBuild() {
        return this.m_ifSceneBuild;
    }
    /**
     * 初始化,场景的一切都从这里开始
     */
    init() {
        //
        this.m_ifSceneBuild = false;
        //初始化关卡数据
        GameDataProxyShell_1.default.instance.initCustoms(LevelConfigProxy_1.default.instance.getLevelNumber());
        //监听事件
        MesManager_1.default.instance.onEvent(EEventScene_1.EEventScene.GameLevelsBuild, this, this.gameLevelsBuild);
        MesManager_1.default.instance.onEvent(EEventScene_1.EEventScene.GameLevelsDelete, this, this.gameLevelsDelete);
        MesManager_1.default.instance.onEvent(EEventScene_1.EEventScene.GameOtherLevelsBuild, this, this.gameOtherLevelsBuild);
        MesManager_1.default.instance.onEvent(EEventScene_1.EEventScene.GameOtherLevelsDelete, this, this.gameOtherLevelsDelete);
    }
    /**
     * 初始场景构建
     */
    initLevelBuild() {
        //直接构建关卡
        this.gameLevelsBuild();
    }
    /**
     * 游戏主场景构建
     */
    gameLevelsBuild(_handler) {
        //判断是否有场景在构建
        if (this.m_ifSceneBuild) {
            console.warn('有场景正在构建！');
            return;
        }
        //
        let lvId;
        //判断游戏是否已经初始化
        if (this.m_ifInit) {
            lvId = GameDataProxyShell_1.default.instance.gameData.onCustoms;
        }
        else {
            this.m_ifInit = true;
            // 获取默认关卡
            lvId = GameDataProxyShell_1.default.instance.getDefaultCustoms();
        }
        //
        let scene = SceneManager_1.default.instance.getSceneByLv(lvId);
        this.m_scene = scene;
        //构建场景
        this.m_ifSceneBuild = true; //开始加载
        //显示loading页面
        MesManager_1.default.instance.sendEvent(EEventScene_1.EEventScene.GameLevelsBuildBefore);
        MesManager_1.default.instance.sendEvent(EEventUI_1.EEventUI.SceneGameCustomsLoading, [-1]);
        scene.buildScene(Laya.Handler.create(this, this.customsProgress, null, false)).then((_sceneSpr) => {
            //
            this.m_ifSceneBuild = false; //加载结束
            //设置环境管理器
            EnvironmentManager_1.default.instance.setEnvironment(this.m_scene.scene);
            //添加控制器
            ConManager_1.default.addScrCon(scene.scene); //依赖脚本的控制器
            ConManager_1.default.addCommonCon(); //没有任何依赖的控制器
            //预加载场景
            if (Const_1.Const.ifPreloadCustoms) {
                let _preloadCustoms = GameDataProxyShell_1.default.instance.getPreloadCustoms();
                SceneManager_1.default.instance.preloadSceneRes(_preloadCustoms);
            }
            this.onCustomsInit(lvId);
            //判断是否有构建完成回调
            if (_handler) {
                _handler.run();
            }
            //抛出事件场景初始化完成
            MesManager_1.default.instance.sendEvent(EEventScene_1.EEventScene.GameLevelsOnBuild);
        });
    }
    //关卡加载完成执行
    onCustomsInit(_lvId) {
        //
    }
    /**
     * 关卡加载进度
     * @param _number 进度值，在0~1之间
     */
    customsProgress(_number) {
        //判断是否在加载
        if (!this.m_ifSceneBuild)
            return;
        if (typeof _number == 'undefined') {
            _number = 1;
        }
        //发送关卡加载事件
        MesManager_1.default.instance.sendEvent(EEventUI_1.EEventUI.SceneGameCustomsLoading, [_number * 100]);
    }
    //游戏结束销毁关卡
    gameLevelsDelete() {
        //关卡删除前事件
        MesManager_1.default.instance.sendEvent(EEventScene_1.EEventScene.GameLevelsDeleteBefore);
        //销毁上一个场景
        if (this.m_scene && this.m_scene.scene) {
            this.m_scene.clearScene();
        }
        //
        this.m_scene = null;
        //抛出事件
        MesManager_1.default.instance.sendEvent(EEventScene_1.EEventScene.GameLevelsOnDelete);
    }
    /**
     * 游戏其他场景构建
     */
    gameOtherLevelsBuild(_name, _handler) {
        //判断是否有场景在构建
        if (this.m_ifSceneBuild) {
            console.warn('有场景正在构建！');
            return;
        }
        let _scene = SceneManager_1.default.instance.getOtherSceneByName(_name);
        this.m_otherScene[_name] = _scene;
        //构建场景
        this.m_ifSceneBuild = true; //开始加载
        //显示loading页面
        MesManager_1.default.instance.sendEvent(EEventScene_1.EEventScene.GameLevelsBuildBefore);
        MesManager_1.default.instance.sendEvent(EEventUI_1.EEventUI.SceneGameCustomsLoading, [-1]);
        _scene.buildScene(Laya.Handler.create(this, this.customsProgress, null, false)).then((_sceneSpr) => {
            //
            this.m_ifSceneBuild = false; //加载结束
            //设置环境
            EnvironmentManager_1.default.instance.setOtherEnvironment(_name, _sceneSpr);
            //判断是否有构建完成回调
            if (_handler) {
                _handler.run();
            }
        });
    }
    /**
     * 游戏其他场景销毁
     */
    gameOtherLevelsDelete(_name) {
        let _scene = this.m_otherScene[_name];
        if (_scene) {
            _scene.clearScene();
            this.m_otherScene[_name] = undefined;
            //其他操作
        }
        else {
            console.warn('试图清除不存在的场景！');
        }
    }
}
exports.default = CustomsManager;


/***/ }),

/***/ "./src/dMyGame/Manager/EnvironmentManager.ts":
/*!***************************************************!*\
  !*** ./src/dMyGame/Manager/EnvironmentManager.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const ColorUtils_1 = __webpack_require__(/*! ../../aTGame/Utils/ColorUtils */ "./src/aTGame/Utils/ColorUtils.ts");
const Global3D_1 = __webpack_require__(/*! ../../aTGame/3D/Global3D */ "./src/aTGame/3D/Global3D.ts");
const EEventScene_1 = __webpack_require__(/*! ../EventEnum/EEventScene */ "./src/dMyGame/EventEnum/EEventScene.ts");
const MesManager_1 = __webpack_require__(/*! ./MesManager */ "./src/dMyGame/Manager/MesManager.ts");
const EnvironmentConfigProxy_1 = __webpack_require__(/*! ../ConfigProxy/EnvironmentConfigProxy */ "./src/dMyGame/ConfigProxy/EnvironmentConfigProxy.ts");
const OtherEnvironmentProxy_1 = __webpack_require__(/*! ../ConfigProxy/OtherEnvironmentProxy */ "./src/dMyGame/ConfigProxy/OtherEnvironmentProxy.ts");
const MainGameConfig_1 = __webpack_require__(/*! ../../bTGameConfig/MainGameConfig */ "./src/bTGameConfig/MainGameConfig.ts");
const RootDebug_1 = __webpack_require__(/*! ../../aTGame/Debug/RootDebug */ "./src/aTGame/Debug/RootDebug.ts");
const EDebugWindowEvent_1 = __webpack_require__(/*! ../../aTGame/Debug/mes/EDebugWindowEvent */ "./src/aTGame/Debug/mes/EDebugWindowEvent.ts");
const GameDataProxyShell_1 = __webpack_require__(/*! ../Proxy/data/GameDataProxyShell */ "./src/dMyGame/Proxy/data/GameDataProxyShell.ts");
/**
 * 环境管理器，负责场景的环境管理
 */
class EnvironmentManager {
    //
    constructor() { }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new EnvironmentManager();
        }
        return this.m_instance;
    }
    /** 初始化 */
    init() {
        this.m_s3d = Global3D_1.default.s3d;
        this.m_camera = Global3D_1.default.camera;
        this.m_light = Global3D_1.default.light;
    }
    /**
     * 设置环境
     * @param _scene 当前场景
     */
    setEnvironment(_scene) {
        this.m_scene = _scene;
        let _lv = GameDataProxyShell_1.default.instance.gameData.onCustoms;
        this.m_enviromentConfig = EnvironmentConfigProxy_1.default.instance.byLevelIdGetData(_lv);
        console.log('关卡环境配置参数->' + _lv + '->', this.m_enviromentConfig);
        //根据配置数据设置相关状态
        this.setS3D(this.m_s3d);
        this.setCamera(this.m_camera, this.m_enviromentConfig.clear_color);
        this.setLight(this.light, this.m_enviromentConfig.light_color, this.m_enviromentConfig.light_intensity);
        this.addAmbient(this.s3d, this.m_enviromentConfig.ambient_color);
        //监听事件
        MesManager_1.default.instance.onEvent(EEventScene_1.EEventScene.GameLevelsDelete, this, this.gameLevelsDelete);
        //
        if (MainGameConfig_1.default.ifDebug && MainGameConfig_1.default.ifOpenWindowDebug) {
            //发送环境改变事件
            RootDebug_1.default.fendDebugWindow(EDebugWindowEvent_1.EDebugWindowEvent.SetEnvironment);
        }
    }
    /**
     * 设置其他场景环境
     * @param _name 场景名字
     * @param _scene 场景精灵
     * @param _camera 摄像机
     * @param _light 灯光
     */
    setOtherEnvironment(_name, _scene, _s3d = this.m_s3d, _camera = this.m_camera, _light = this.m_light) {
        let _enviromentConfig = OtherEnvironmentProxy_1.default.instance.byLevelNameGetData(_name);
        console.log('关卡环境配置参数->' + _name + '->', _enviromentConfig);
        this.setCamera(_camera, _enviromentConfig.clear_color);
        this.setLight(_light, _enviromentConfig.light_color, _enviromentConfig.light_intensity);
        this.addAmbient(_s3d, _enviromentConfig.ambient_color);
    }
    /** 3d根节点 */
    get s3d() {
        return this.m_s3d;
    }
    /** 摄像机 */
    get camera() {
        return this.m_camera;
    }
    /** 当前场景 */
    get scene() {
        return this.m_scene;
    }
    /** 灯光 */
    get light() {
        return this.m_light;
    }
    //设置场景
    setS3D(_s3d) {
        if (this.m_ifSetS3D)
            return;
        this.m_ifSetS3D = true;
        //
    }
    //设置摄像机
    setCamera(_camera, _clear_color) {
        //设置清除颜色
        _camera.clearColor = ColorUtils_1.default.HexToV4(_clear_color);
    }
    //设置灯光
    setLight(_light, _color, _instensity) {
        //
        _light.color = ColorUtils_1.default.HexToV3(_color);
        _light.intensity = _instensity;
        //灯光开启阴影
        _light.shadowMode = Laya.ShadowMode.SoftLow;
        _light.shadowResolution = 2500;
        _light.shadowNormalBias = 0.5;
    }
    //加环境光
    addAmbient(_s3d, _color) {
        //设置环境光
        _s3d.ambientMode = Laya.AmbientMode.SolidColor;
        _s3d.ambientColor = ColorUtils_1.default.HexToV3(_color);
    }
    //加雾化
    addFog(_scene, _color, _fogRange, _fogStart) {
        //
        _scene.enableFog = true;
        _scene.fogColor = ColorUtils_1.default.HexToV3(_color);
        _scene.fogRange = _fogRange;
        _scene.fogStart = _fogStart;
    }
    //删除场景
    gameLevelsDelete() {
        //
    }
}
exports.default = EnvironmentManager;


/***/ }),

/***/ "./src/dMyGame/Manager/GameManager.ts":
/*!********************************************!*\
  !*** ./src/dMyGame/Manager/GameManager.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const EEventScene_1 = __webpack_require__(/*! ../EventEnum/EEventScene */ "./src/dMyGame/EventEnum/EEventScene.ts");
const GameShortDataProxy_1 = __webpack_require__(/*! ../GameData/GameShortDataProxy */ "./src/dMyGame/GameData/GameShortDataProxy.ts");
const MesManager_1 = __webpack_require__(/*! ./MesManager */ "./src/dMyGame/Manager/MesManager.ts");
/**
 * 游戏管理器
 */
class GameManager {
    //
    constructor() { }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new GameManager();
        }
        return this.m_instance;
    }
    /**
     * 初始化
     */
    init() {
        MesManager_1.default.instance.onEvent(EEventScene_1.EEventScene.GameLevelsBuildBefore, this, this.gameLevelsBuildBefore);
        MesManager_1.default.instance.onEvent(EEventScene_1.EEventScene.GameLevelsOnBuild, this, this.gameLevelsOnBuild);
        MesManager_1.default.instance.onEvent(EEventScene_1.EEventScene.GameLevelsDelete, this, this.gameLevelsDelete);
        MesManager_1.default.instance.onEvent(EEventScene_1.EEventScene.GameStart, this, this.gameStart);
    }
    //游戏关卡构建之前调用
    gameLevelsBuildBefore() {
        //清空临时数据
        GameShortDataProxy_1.default.emptyGameOnCustomData();
    }
    //游戏关卡构建完成调用
    gameLevelsOnBuild() {
        //
    }
    //关卡清除时调用
    gameLevelsDelete() {
        //
    }
    //游戏开始
    gameStart() {
        //
    }
}
exports.default = GameManager;


/***/ }),

/***/ "./src/dMyGame/Manager/GlobalStateManager.ts":
/*!***************************************************!*\
  !*** ./src/dMyGame/Manager/GlobalStateManager.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GlobalStateManager = void 0;
const EEventGlobal_1 = __webpack_require__(/*! ../EventEnum/EEventGlobal */ "./src/dMyGame/EventEnum/EEventGlobal.ts");
const MesManager_1 = __webpack_require__(/*! ./MesManager */ "./src/dMyGame/Manager/MesManager.ts");
/**
 * 游戏全局状态管理器
 * 可以监听和触发全局事件
 */
class GlobalStateManager {
    constructor() {
        /** 游戏是否初始化 */
        this.m_GameIfInit = false;
    }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new GlobalStateManager();
        }
        return this.m_instance;
    }
    /**
     * 初始化
     */
    init() { }
    /** 游戏是否初始化 */
    get gameIfInit() {
        return this.m_GameIfInit;
    }
    /**
     * 游戏初始化
     */
    GameInit() {
        this.m_GameIfInit = false;
        MesManager_1.default.instance.sendEvent(EEventGlobal_1.EEventGlobal.GameInit);
    }
    /**
     * 游戏初始化完成
     */
    GameOnInit() {
        this.m_GameIfInit = true;
        MesManager_1.default.instance.sendEvent(EEventGlobal_1.EEventGlobal.GameOnInit);
    }
}
exports.GlobalStateManager = GlobalStateManager;


/***/ }),

/***/ "./src/dMyGame/Manager/MesManager.ts":
/*!*******************************************!*\
  !*** ./src/dMyGame/Manager/MesManager.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const EEventAd_1 = __webpack_require__(/*! ../EventEnum/EEventAd */ "./src/dMyGame/EventEnum/EEventAd.ts");
const EEventAudio_1 = __webpack_require__(/*! ../EventEnum/EEventAudio */ "./src/dMyGame/EventEnum/EEventAudio.ts");
const EEventGlobal_1 = __webpack_require__(/*! ../EventEnum/EEventGlobal */ "./src/dMyGame/EventEnum/EEventGlobal.ts");
const EEventScene_1 = __webpack_require__(/*! ../EventEnum/EEventScene */ "./src/dMyGame/EventEnum/EEventScene.ts");
const EEventUI_1 = __webpack_require__(/*! ../EventEnum/EEventUI */ "./src/dMyGame/EventEnum/EEventUI.ts");
/**
 * 简易信息处理类
 */
class MesManager extends Laya.EventDispatcher {
    //
    constructor() {
        super();
        //
        this.enumerationEegistrationMes();
    }
    static get onlyKey() {
        MesManager._onlyKey++;
        return '$key' + MesManager._onlyKey;
    }
    /** 单例 */
    static get instance() {
        if (this._instance == null) {
            this._instance = new MesManager();
        }
        return this._instance;
    }
    //初始化
    init() { }
    //注册消息枚举
    enumerationEegistrationMes() {
        //注册消息类型，没注册的话就不能用本消息类发送该类型消息
        this.enumerationEegistrationMes_(EEventAd_1.EEventAd); //广告事件
        this.enumerationEegistrationMes_(EEventGlobal_1.EEventGlobal); //全局事件
        this.enumerationEegistrationMes_(EEventUI_1.EEventUI); //UI事件
        this.enumerationEegistrationMes_(EEventScene_1.EEventScene); //场景事件
        this.enumerationEegistrationMes_(EEventAudio_1.EEventAudio); //音效事件
    }
    //配合注册消息枚举
    enumerationEegistrationMes_(_mes) {
        for (let _i in _mes) {
            _mes[_i] = {
                value: _mes[_i],
                [MesManager._mesKey]: MesManager.onlyKey,
            };
        }
        // console.log(_mes);
    }
    /**
     * 发送事件
     * @param event 事件枚举
     * @param data 数据
     */
    sendEvent(event, data) {
        if (typeof event[MesManager._mesKey] == 'undefined') {
            console.log('事件', event, '没有被注册。');
            return;
        }
        // console.log('Global ' + event);
        MesManager.instance.event(event[MesManager._mesKey], data);
    }
    /**
     * 监听事件
     * @param type Global事件枚举
     * @param caller 执行域
     * @param listener 事件
     * @param args 携带的数据
     */
    onEvent(type, caller, listener, args) {
        if (typeof type[MesManager._mesKey] == 'undefined') {
            console.log('事件', type, '没有被注册。');
            return;
        }
        MesManager.instance.on(type[MesManager._mesKey], caller, listener, args);
    }
    /**
     * 删除事件侦听器
     * @param type 事件枚举
     * @param caller 执行域
     * @param listener 回调函数
     */
    offEnent(type, caller, listener) {
        if (typeof type[MesManager._mesKey] == 'undefined') {
            console.log('事件', type, '没有被注册。');
            return;
        }
        MesManager.instance.off(type[MesManager._mesKey], caller, listener);
    }
}
exports.default = MesManager;
//消息键值
MesManager._mesKey = Symbol('$MesKey');
//消息唯一标识符
MesManager._onlyKey = 0;


/***/ }),

/***/ "./src/dMyGame/Manager/Proxy/UIManagerProxy.ts":
/*!*****************************************************!*\
  !*** ./src/dMyGame/Manager/Proxy/UIManagerProxy.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootUIStateManagerProxy_1 = __webpack_require__(/*! ../../../aTGame/UI/FGUI/RootUIStateManagerProxy */ "./src/aTGame/UI/FGUI/RootUIStateManagerProxy.ts");
const EEventGlobal_1 = __webpack_require__(/*! ../../EventEnum/EEventGlobal */ "./src/dMyGame/EventEnum/EEventGlobal.ts");
const EUI_1 = __webpack_require__(/*! ../../Enum/EUI */ "./src/dMyGame/Enum/EUI.ts");
const MesManager_1 = __webpack_require__(/*! ../MesManager */ "./src/dMyGame/Manager/MesManager.ts");
const EEventUI_1 = __webpack_require__(/*! ../../EventEnum/EEventUI */ "./src/dMyGame/EventEnum/EEventUI.ts");
/**
 * UIManager类调度者代理
 */
class UIManagerProxy extends RootUIStateManagerProxy_1.default {
    //
    constructor() { super(); }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new UIManagerProxy();
        }
        return this.m_instance;
    }
    /** 获取主页面调度者单例 */
    get gameMainMediator() {
        return this.getUIMeiatro(EUI_1.EUI.Main);
    }
    //初始化
    Init() {
        //监听全局事件
        MesManager_1.default.instance.onEvent(EEventGlobal_1.EEventGlobal.GameLoading, this, this.gameLoading); //游戏加载
        MesManager_1.default.instance.onEvent(EEventGlobal_1.EEventGlobal.GameResLoading, this, this.gameResLoading); //游戏资源加载
        //监听UI事件
        MesManager_1.default.instance.onEvent(EEventUI_1.EEventUI.SceneGameCustomsLoading, this, this.gameCustomsLoading); //关卡加载
    }
    /**
     * 开始
     */
    Start() {
        //设置初始UI
        this.setUIState([
            { typeIndex: EUI_1.EUI.Main, },
            { typeIndex: EUI_1.EUI.Start, },
            { typeIndex: EUI_1.EUI.TestMain, },
        ]);
    }
    /** 游戏加载 */
    gameLoading() { }
    /** 游戏资源加载 */
    gameResLoading() { }
    //游戏初始化
    gameCustomsLoading(_n) {
        if (_n == -1) {
            //显示关卡加载页面
            this.setUIState([
                { typeIndex: EUI_1.EUI.CustomsLoading, },
            ], false);
        }
    }
}
exports.default = UIManagerProxy;


/***/ }),

/***/ "./src/dMyGame/Manager/UIManager.ts":
/*!******************************************!*\
  !*** ./src/dMyGame/Manager/UIManager.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const PGameLoadingMediator_1 = __webpack_require__(/*! ../UIMediator/PGameLoadingMediator */ "./src/dMyGame/UIMediator/PGameLoadingMediator.ts");
const PGameMainMediator_1 = __webpack_require__(/*! ../UIMediator/PGameMainMediator */ "./src/dMyGame/UIMediator/PGameMainMediator.ts");
const PGamePlayMediator_1 = __webpack_require__(/*! ../UIMediator/PGamePlayMediator */ "./src/dMyGame/UIMediator/PGamePlayMediator.ts");
const PGameStartMediator_1 = __webpack_require__(/*! ../UIMediator/PGameStartMediator */ "./src/dMyGame/UIMediator/PGameStartMediator.ts");
const EUI_1 = __webpack_require__(/*! ../Enum/EUI */ "./src/dMyGame/Enum/EUI.ts");
const UIManagerProxy_1 = __webpack_require__(/*! ./Proxy/UIManagerProxy */ "./src/dMyGame/Manager/Proxy/UIManagerProxy.ts");
const PGameCustomsLoadingMediator_1 = __webpack_require__(/*! ../UIMediator/PGameCustomsLoadingMediator */ "./src/dMyGame/UIMediator/PGameCustomsLoadingMediator.ts");
const PGamePauseMediator_1 = __webpack_require__(/*! ../UIMediator/PGamePauseMediator */ "./src/dMyGame/UIMediator/PGamePauseMediator.ts");
const PGameSetMediator_1 = __webpack_require__(/*! ../UIMediator/PGameSetMediator */ "./src/dMyGame/UIMediator/PGameSetMediator.ts");
const PGameComMediator_1 = __webpack_require__(/*! ../UIMediator/PGameComMediator */ "./src/dMyGame/UIMediator/PGameComMediator.ts");
const PGameEndMediator_1 = __webpack_require__(/*! ../UIMediator/PGameEndMediator */ "./src/dMyGame/UIMediator/PGameEndMediator.ts");
const PGameTestMainMediator_1 = __webpack_require__(/*! ../UIMediator/_test/PGameTestMainMediator */ "./src/dMyGame/UIMediator/_test/PGameTestMainMediator.ts");
const PGameTestPlatformMediator_1 = __webpack_require__(/*! ../UIMediator/_test/PGameTestPlatformMediator */ "./src/dMyGame/UIMediator/_test/PGameTestPlatformMediator.ts");
const BaseUIManager_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/BaseUIManager */ "./src/aTGame/UI/FGUI/BaseUIManager.ts");
/**
 * UI管理器
 * UI从这里开始，注册所有UI调度者，再分配给UI状态管理器管理,不能再UI调度者中直接调用
 * 沟通外界，处理一些不能在UI中产生和处理的事件，通过这里中转
 */
class UIManager extends BaseUIManager_1.default {
    //
    constructor() {
        super();
    }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new UIManager();
        }
        return this.m_instance;
    }
    /** 初始化UI调度者列表和代理类 */
    initUIMediator() {
        //初始化ui状态管理器
        this.m_UIMediator = {
            [EUI_1.EUI.GameLoading]: PGameLoadingMediator_1.default.instance,
            [EUI_1.EUI.CustomsLoading]: PGameCustomsLoadingMediator_1.default.instance,
            //
            [EUI_1.EUI.TestMain]: PGameTestMainMediator_1.default.instance,
            [EUI_1.EUI.TestPlatform]: PGameTestPlatformMediator_1.default.instance,
            //
            [EUI_1.EUI.Main]: PGameMainMediator_1.default.instance,
            [EUI_1.EUI.Set]: PGameSetMediator_1.default.instance,
            [EUI_1.EUI.Play]: PGamePlayMediator_1.default.instance,
            [EUI_1.EUI.Start]: PGameStartMediator_1.default.instance,
            [EUI_1.EUI.Pause]: PGamePauseMediator_1.default.instance,
            [EUI_1.EUI.Com]: PGameComMediator_1.default.instance,
            [EUI_1.EUI.End]: PGameEndMediator_1.default.instance,
        };
        //注册代理类
        this.m_UIProxy = UIManagerProxy_1.default.instance;
    }
    /**
     * 初始化,UI的一切都从这里开始
     */
    init() {
        //
    }
    /**
     * 开始
     */
    Start() {
        this.m_UIProxy.Start();
    }
}
exports.default = UIManager;


/***/ }),

/***/ "./src/dMyGame/Proxy/AudioProxy.ts":
/*!*****************************************!*\
  !*** ./src/dMyGame/Proxy/AudioProxy.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const AudioUtils_1 = __webpack_require__(/*! ../../aTGame/Audio/AudioUtils */ "./src/aTGame/Audio/AudioUtils.ts");
const GameDataProxyShell_1 = __webpack_require__(/*! ./data/GameDataProxyShell */ "./src/dMyGame/Proxy/data/GameDataProxyShell.ts");
/**
 * 音效代理类
 */
class AudioProxy {
    /**
     * 初始化
     */
    constructor() {
        this.m_stop = false;
        this.m_onLoopSoundList = new Set();
    }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new AudioProxy();
        }
        return this.m_instance;
    }
    /**
     * 停止背景音乐
     */
    stopBGM() {
        AudioUtils_1.default.instance.pauseBGM();
    }
    /**
     * 继续播放背景音乐
     */
    BGMGoOn() {
        this.playBGM(this.m_onBGM);
    }
    //音效暂停
    soundSuspend() {
        this.m_stop = true;
        //暂停所有循环播放音效
        for (let _o of this.m_onLoopSoundList) {
            AudioUtils_1.default.instance.stopSound(_o);
        }
    }
    //音效继续
    soundGoOn() {
        this.m_stop = false;
        //继续播放暂停前的循环播放音效
        for (let _o of this.m_onLoopSoundList) {
            AudioUtils_1.default.instance.playSound(_o, 0);
        }
    }
    /**
     * 播放背景音乐
     * @param _name 背景音乐名字
     */
    playBGM(_name, loops, complete, startTime) {
        if (!GameDataProxyShell_1.default.instance.gameData.ifOpenBgm || this.m_stop)
            return;
        AudioUtils_1.default.instance.playBGM(_name, loops, complete, startTime);
        //记录
        this.m_onBGM = _name;
    }
    /**
     * 播放音效
     * @param url 声音文件地址。
     * @param loops 循环次数,0表示无限循环。
     * @param complete 声音播放完成回调  Handler对象。
     * @param soundClass 使用哪个声音类进行播放，null表示自动选择。
     * @param startTime 声音播放起始时间。
    */
    playSound(_eSoundName, loops, complete, soundClass, startTime) {
        if (!GameDataProxyShell_1.default.instance.gameData.ifOpenSound || this.m_stop)
            return;
        //判断是不是循环播放的音效，如果是的话就保存起来
        if (loops == 0) {
            this.m_onLoopSoundList.add(_eSoundName);
        }
        //正式播放音效
        AudioUtils_1.default.instance.playSound(_eSoundName, loops, complete, soundClass, startTime);
    }
    /**
     * 停止音效
     * @param _eSoundName 音效名字
     */
    stopSound(_eSoundName) {
        AudioUtils_1.default.instance.stopSound(_eSoundName);
        //判断是否在当前循环播放列表中
        if (this.m_onLoopSoundList.has(_eSoundName)) {
            this.m_onLoopSoundList.delete(_eSoundName);
        }
    }
}
exports.default = AudioProxy;


/***/ }),

/***/ "./src/dMyGame/Proxy/data/GameDataProxyShell.ts":
/*!******************************************************!*\
  !*** ./src/dMyGame/Proxy/data/GameDataProxyShell.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const CommonLeveEnum_1 = __webpack_require__(/*! ../../../aTGame/Commom/CommonLeveEnum */ "./src/aTGame/Commom/CommonLeveEnum.ts");
const RootDataProxyShell_1 = __webpack_require__(/*! ../../../aTGame/Data/RootDataProxyShell */ "./src/aTGame/Data/RootDataProxyShell.ts");
const EEventUI_1 = __webpack_require__(/*! ../../EventEnum/EEventUI */ "./src/dMyGame/EventEnum/EEventUI.ts");
const GameDataProxy_1 = __webpack_require__(/*! ../../GameData/GameDataProxy */ "./src/dMyGame/GameData/GameDataProxy.ts");
const MesManager_1 = __webpack_require__(/*! ../../Manager/MesManager */ "./src/dMyGame/Manager/MesManager.ts");
/**
 * 游戏数据代理处理类，用这个类处理数据会有事件传递出去
 */
class GameDataProxyShell extends RootDataProxyShell_1.default {
    //
    constructor() { super(); }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new GameDataProxyShell();
        }
        return this.m_instance;
    }
    /** 游戏主数据 */
    get gameData() {
        return this.m_gameData;
    }
    //初始化数据
    initData() {
        this.m_gameData = GameDataProxy_1.default.instance.saveData;
        //
    }
    /**
     * 初始化关卡数据
     * @param _maxCustoms 最大关卡数量
     */
    initCustoms(_maxCustoms) {
        //化整
        _maxCustoms = Math.floor(_maxCustoms);
        //
        if (this.m_gameData.maxCustoms == _maxCustoms) {
            return;
        }
        //判断其他关卡数据是否超出了界限
        this.m_gameData.maxCustoms = _maxCustoms;
        if (this.m_gameData.maxCustomsRecord > _maxCustoms) {
            this.m_gameData.maxCustomsRecord = _maxCustoms;
        }
        if (this.m_gameData.onCustoms > _maxCustoms) {
            this.m_gameData.onCustoms = CommonLeveEnum_1.ECommonLeve.DefaultLeveId;
        }
    }
    /**
     * 判断是否是新手关卡
     */
    ifNewHandCustoms() {
        return this.m_gameData.onCustoms == CommonLeveEnum_1.ECommonLeve.NewHandLeveId && this.m_gameData.maxCustomsRecord <= CommonLeveEnum_1.ECommonLeve.NewHandLeveId;
    }
    /**
     * 设置是否打开背景音乐
     * @param _b 状态
     */
    setIfOpenBGM(_b) {
        this.m_gameData.ifOpenBgm = _b;
    }
    /**
     * 设置是否打开音效
     * @param _b 状态
     */
    setIfOpenSound(_b) {
        this.m_gameData.ifOpenSound = _b;
    }
    /**
     * 设置是否打开振动
     * @param _b 状态
     */
    setIfOpenVibrate(_b) {
        this.m_gameData.ifOpenVibrate = _b;
    }
    /**
     * 设置关卡
     * @param _number 增加关卡数量
     * @return 是否增加成功
     */
    setCustoms(_number = 1) {
        //化整
        _number = Math.floor(_number);
        //设置当前关卡
        let _sum = this.m_gameData.onCustoms + _number;
        let _win = false;
        if (_sum <= this.m_gameData.maxCustoms) {
            this.m_gameData.onCustoms = _sum;
            if (_sum > this.m_gameData.maxCustomsRecord) {
                this.m_gameData.maxCustomsRecord = _sum;
            }
            _win = true;
        }
        else {
            this.m_gameData.onCustoms = CommonLeveEnum_1.ECommonLeve.DefaultLeveId;
            _win = true;
        }
        //传出事件
        MesManager_1.default.instance.sendEvent(EEventUI_1.EEventUI.CustomsChange);
        //
        return _win;
    }
    /**
     * 返回默认的关卡
     */
    getDefaultCustoms() {
        if (this.m_gameData.onCustoms > this.m_gameData.maxCustoms) {
            this.m_gameData.onCustoms = CommonLeveEnum_1.ECommonLeve.DefaultLeveId;
            //保存数据
        }
        return this.m_gameData.onCustoms;
    }
    /**
     * 返回需要预加载的关卡id
     */
    getPreloadCustoms() {
        return this.getNextCustoms();
    }
    /**
     * 获取下一个关卡
     */
    getNextCustoms() {
        let _customs = this.m_gameData.onCustoms + 1;
        if (_customs > this.m_gameData.maxCustoms) {
            _customs = CommonLeveEnum_1.ECommonLeve.DefaultLeveId;
        }
        //
        return _customs;
    }
}
exports.default = GameDataProxyShell;


/***/ }),

/***/ "./src/dMyGame/ResList/EBGMs.ts":
/*!**************************************!*\
  !*** ./src/dMyGame/ResList/EBGMs.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EBGMs = void 0;
/**
 * 所有背景音乐(会预加载)
 */
var EBGMs;
(function (EBGMs) {
    EBGMs["null"] = "";
    //
})(EBGMs = exports.EBGMs || (exports.EBGMs = {}));


/***/ }),

/***/ "./src/dMyGame/ResList/ESounds.ts":
/*!****************************************!*\
  !*** ./src/dMyGame/ResList/ESounds.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ESounds = void 0;
/**
 * 所有音效(会预加载)
 */
var ESounds;
(function (ESounds) {
    ESounds["null"] = "";
    //音效
})(ESounds = exports.ESounds || (exports.ESounds = {}));


/***/ }),

/***/ "./src/dMyGame/UIMediator/PGameComMediator.ts":
/*!****************************************************!*\
  !*** ./src/dMyGame/UIMediator/PGameComMediator.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const BaseUIMediator_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/BaseUIMediator */ "./src/aTGame/UI/FGUI/BaseUIMediator.ts");
const FGUI_PGameCom_1 = __webpack_require__(/*! ../../FGUI/GameMain/FGUI_PGameCom */ "./src/FGUI/GameMain/FGUI_PGameCom.ts");
/**
 * 游戏完成页面调度者
 */
class PGameComMediator extends BaseUIMediator_1.default {
    //
    constructor() { super(); }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new PGameComMediator();
            this.m_instance._classDefine = FGUI_PGameCom_1.default;
        }
        //
        return this.m_instance;
    }
    //显示时的生命周期函数
    _OnShow() {
        //
    }
    //隐藏时的生命周期函数
    _OnHide() { }
}
exports.default = PGameComMediator;


/***/ }),

/***/ "./src/dMyGame/UIMediator/PGameCustomsLoadingMediator.ts":
/*!***************************************************************!*\
  !*** ./src/dMyGame/UIMediator/PGameCustomsLoadingMediator.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const BaseUIMediator_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/BaseUIMediator */ "./src/aTGame/UI/FGUI/BaseUIMediator.ts");
const EUILayer_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/EUILayer */ "./src/aTGame/UI/FGUI/EUILayer.ts");
const UIManagerProxy_1 = __webpack_require__(/*! ../Manager/Proxy/UIManagerProxy */ "./src/dMyGame/Manager/Proxy/UIManagerProxy.ts");
const EUI_1 = __webpack_require__(/*! ../Enum/EUI */ "./src/dMyGame/Enum/EUI.ts");
const FGUI_PGameCustomsLoading_1 = __webpack_require__(/*! ../../FGUI/GameMain/FGUI_PGameCustomsLoading */ "./src/FGUI/GameMain/FGUI_PGameCustomsLoading.ts");
const EEventUI_1 = __webpack_require__(/*! ../EventEnum/EEventUI */ "./src/dMyGame/EventEnum/EEventUI.ts");
const MesManager_1 = __webpack_require__(/*! ../Manager/MesManager */ "./src/dMyGame/Manager/MesManager.ts");
/**
 * 游戏关卡加载中页面调度者
 */
class PGameCustomsLoadingMediator extends BaseUIMediator_1.default {
    //
    constructor() {
        super();
        //层级
        this._layer = EUILayer_1.EUILayer.Loading; //加载层
    }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new PGameCustomsLoadingMediator();
            this.m_instance._classDefine = FGUI_PGameCustomsLoading_1.default;
        }
        //
        return this.m_instance;
    }
    //显示时的生命周期函数
    _OnShow() {
        //关卡加载中
        MesManager_1.default.instance.onEvent(EEventUI_1.EEventUI.SceneGameCustomsLoading, this, this.CustomsLoading);
    }
    /**
     * 关卡加载中事件
     * @param _number 加载进度
     */
    CustomsLoading(_number) {
        //设置进度条进度
        this.ui.m_progress.value = _number;
        //加载完成时
        if (_number == 100) {
            UIManagerProxy_1.default.instance.setUIState([
                { typeIndex: EUI_1.EUI.CustomsLoading, state: false },
            ], false);
        }
    }
    //隐藏时的生命周期函数
    _OnHide() {
        //取消监听
        MesManager_1.default.instance.offEnent(EEventUI_1.EEventUI.SceneGameCustomsLoading, this, this.CustomsLoading);
    }
}
exports.default = PGameCustomsLoadingMediator;


/***/ }),

/***/ "./src/dMyGame/UIMediator/PGameEndMediator.ts":
/*!****************************************************!*\
  !*** ./src/dMyGame/UIMediator/PGameEndMediator.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const BaseUIMediator_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/BaseUIMediator */ "./src/aTGame/UI/FGUI/BaseUIMediator.ts");
const FGUI_PGameEnd_1 = __webpack_require__(/*! ../../FGUI/GameMain/FGUI_PGameEnd */ "./src/FGUI/GameMain/FGUI_PGameEnd.ts");
/**
 * 游戏暂停页面调度者
 */
class PGameEndMediator extends BaseUIMediator_1.default {
    //
    constructor() { super(); }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new PGameEndMediator();
            this.m_instance._classDefine = FGUI_PGameEnd_1.default;
        }
        //
        return this.m_instance;
    }
    //显示时的生命周期函数
    _OnShow() {
        //
    }
    //隐藏时的生命周期函数
    _OnHide() { }
}
exports.default = PGameEndMediator;


/***/ }),

/***/ "./src/dMyGame/UIMediator/PGameLoadingMediator.ts":
/*!********************************************************!*\
  !*** ./src/dMyGame/UIMediator/PGameLoadingMediator.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const BaseUIMediator_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/BaseUIMediator */ "./src/aTGame/UI/FGUI/BaseUIMediator.ts");
const EUILayer_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/EUILayer */ "./src/aTGame/UI/FGUI/EUILayer.ts");
const EEventGlobal_1 = __webpack_require__(/*! ../EventEnum/EEventGlobal */ "./src/dMyGame/EventEnum/EEventGlobal.ts");
const FGUI_PGameLoading_1 = __webpack_require__(/*! ../../FGUI/GameMain/FGUI_PGameLoading */ "./src/FGUI/GameMain/FGUI_PGameLoading.ts");
const MesManager_1 = __webpack_require__(/*! ../Manager/MesManager */ "./src/dMyGame/Manager/MesManager.ts");
/**
 * 游戏加载中页面调度者
 */
class PGameLoadingMediator extends BaseUIMediator_1.default {
    //
    constructor() {
        super();
        //层级
        this._layer = EUILayer_1.EUILayer.Loading; //加载层
    }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new PGameLoadingMediator();
            this.m_instance._classDefine = FGUI_PGameLoading_1.default;
        }
        //
        return this.m_instance;
    }
    //显示时的生命周期函数
    _OnShow() {
        MesManager_1.default.instance.onEvent(EEventGlobal_1.EEventGlobal.GameLoading, this, this.gameLoading); //游戏加载中
    }
    /**
     * 关卡加载中事件
     * @param _number 加载进度
     */
    gameLoading(_number) {
        //设置进度条进度
        this.ui.m_progress.value = _number;
    }
    //隐藏时的生命周期函数
    _OnHide() {
        //取消监听
        MesManager_1.default.instance.offEnent(EEventGlobal_1.EEventGlobal.GameLoading, this, this.gameLoading);
    }
}
exports.default = PGameLoadingMediator;


/***/ }),

/***/ "./src/dMyGame/UIMediator/PGameMainMediator.ts":
/*!*****************************************************!*\
  !*** ./src/dMyGame/UIMediator/PGameMainMediator.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const BaseUIMediator_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/BaseUIMediator */ "./src/aTGame/UI/FGUI/BaseUIMediator.ts");
const EUILayer_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/EUILayer */ "./src/aTGame/UI/FGUI/EUILayer.ts");
const FGUI_PGameMain_1 = __webpack_require__(/*! ../../FGUI/GameMain/FGUI_PGameMain */ "./src/FGUI/GameMain/FGUI_PGameMain.ts");
/**
 * 游戏主页面调度者
 */
class PGameMainMediator extends BaseUIMediator_1.default {
    //
    constructor() {
        super();
        //层级
        this._layer = EUILayer_1.EUILayer.Main;
    }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new PGameMainMediator();
            this.m_instance._classDefine = FGUI_PGameMain_1.default;
        }
        //
        return this.m_instance;
    }
    //显示时的生命周期函数
    _OnShow() {
    }
    //隐藏时的生命周期函数
    _OnHide() { }
}
exports.default = PGameMainMediator;


/***/ }),

/***/ "./src/dMyGame/UIMediator/PGamePauseMediator.ts":
/*!******************************************************!*\
  !*** ./src/dMyGame/UIMediator/PGamePauseMediator.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const BaseUIMediator_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/BaseUIMediator */ "./src/aTGame/UI/FGUI/BaseUIMediator.ts");
const EUILayer_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/EUILayer */ "./src/aTGame/UI/FGUI/EUILayer.ts");
const FGUI_PGamePause_1 = __webpack_require__(/*! ../../FGUI/GameMain/FGUI_PGamePause */ "./src/FGUI/GameMain/FGUI_PGamePause.ts");
/**
 * 游戏暂停页面调度者
 */
class PGamePauseMediator extends BaseUIMediator_1.default {
    //
    constructor() {
        super();
        //层级
        this._layer = EUILayer_1.EUILayer.Pause; //暂停层
    }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new PGamePauseMediator();
            this.m_instance._classDefine = FGUI_PGamePause_1.default;
        }
        //
        return this.m_instance;
    }
    //显示时的生命周期函数
    _OnShow() {
        //
    }
    //隐藏时的生命周期函数
    _OnHide() { }
}
exports.default = PGamePauseMediator;


/***/ }),

/***/ "./src/dMyGame/UIMediator/PGamePlayMediator.ts":
/*!*****************************************************!*\
  !*** ./src/dMyGame/UIMediator/PGamePlayMediator.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const BaseUIMediator_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/BaseUIMediator */ "./src/aTGame/UI/FGUI/BaseUIMediator.ts");
const FGUI_PGamePlay_1 = __webpack_require__(/*! ../../FGUI/GameMain/FGUI_PGamePlay */ "./src/FGUI/GameMain/FGUI_PGamePlay.ts");
/**
 * 游戏玩耍页面调度者
 */
class PGamePlayMediator extends BaseUIMediator_1.default {
    //
    constructor() { super(); }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new PGamePlayMediator();
            this.m_instance._classDefine = FGUI_PGamePlay_1.default;
        }
        //
        return this.m_instance;
    }
    //显示时的生命周期函数
    _OnShow() {
        //
    }
    //隐藏时的生命周期函数
    _OnHide() { }
}
exports.default = PGamePlayMediator;


/***/ }),

/***/ "./src/dMyGame/UIMediator/PGameSetMediator.ts":
/*!****************************************************!*\
  !*** ./src/dMyGame/UIMediator/PGameSetMediator.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const BaseUIMediator_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/BaseUIMediator */ "./src/aTGame/UI/FGUI/BaseUIMediator.ts");
const EUILayer_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/EUILayer */ "./src/aTGame/UI/FGUI/EUILayer.ts");
const FGUI_PGameSet_1 = __webpack_require__(/*! ../../FGUI/GameMain/FGUI_PGameSet */ "./src/FGUI/GameMain/FGUI_PGameSet.ts");
/**
 * 游戏设置页面调度者
 */
class PGameSetMediator extends BaseUIMediator_1.default {
    //
    constructor() {
        super();
        //设置层级
        this._layer = EUILayer_1.EUILayer.Set; //设置层
    }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new PGameSetMediator();
            this.m_instance._classDefine = FGUI_PGameSet_1.default;
        }
        //
        return this.m_instance;
    }
    //显示时的生命周期函数
    _OnShow() {
        //
    }
    //隐藏时的生命周期函数
    _OnHide() { }
}
exports.default = PGameSetMediator;


/***/ }),

/***/ "./src/dMyGame/UIMediator/PGameStartMediator.ts":
/*!******************************************************!*\
  !*** ./src/dMyGame/UIMediator/PGameStartMediator.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const BaseUIMediator_1 = __webpack_require__(/*! ../../aTGame/UI/FGUI/BaseUIMediator */ "./src/aTGame/UI/FGUI/BaseUIMediator.ts");
const FGUI_PGameStart_1 = __webpack_require__(/*! ../../FGUI/GameMain/FGUI_PGameStart */ "./src/FGUI/GameMain/FGUI_PGameStart.ts");
/**
 * 游戏开始页面调度者
 */
class PGameStartMediator extends BaseUIMediator_1.default {
    //
    constructor() { super(); }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new PGameStartMediator();
            this.m_instance._classDefine = FGUI_PGameStart_1.default;
        }
        //
        return this.m_instance;
    }
    //显示时的生命周期函数
    _OnShow() {
        //
    }
    //隐藏时的生命周期函数
    _OnHide() { }
}
exports.default = PGameStartMediator;


/***/ }),

/***/ "./src/dMyGame/UIMediator/_test/PGameTestMainMediator.ts":
/*!***************************************************************!*\
  !*** ./src/dMyGame/UIMediator/_test/PGameTestMainMediator.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const BaseUIMediator_1 = __webpack_require__(/*! ../../../aTGame/UI/FGUI/BaseUIMediator */ "./src/aTGame/UI/FGUI/BaseUIMediator.ts");
const FGUI_PGameTestMain_1 = __webpack_require__(/*! ../../../FGUI/GameMain/FGUI_PGameTestMain */ "./src/FGUI/GameMain/FGUI_PGameTestMain.ts");
const EUI_1 = __webpack_require__(/*! ../../Enum/EUI */ "./src/dMyGame/Enum/EUI.ts");
const UIManagerProxy_1 = __webpack_require__(/*! ../../Manager/Proxy/UIManagerProxy */ "./src/dMyGame/Manager/Proxy/UIManagerProxy.ts");
const PGameUITestMediator_1 = __webpack_require__(/*! ./PGameUITestMediator */ "./src/dMyGame/UIMediator/_test/PGameUITestMediator.ts");
/**
 * 游戏开始页面调度者
 */
class PGameTestMainMediator extends BaseUIMediator_1.default {
    //
    constructor() { super(); }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new PGameTestMainMediator();
            this.m_instance._classDefine = FGUI_PGameTestMain_1.default;
        }
        //
        return this.m_instance;
    }
    //显示时的生命周期函数
    _OnShow() {
        //
        this.ui.m_test.onClick(this, this.Test);
        this.ui.m_UIButton.onClick(this, this.UITest);
    }
    //打开测试页面
    Test() {
        UIManagerProxy_1.default.instance.setUIState([
            { typeIndex: EUI_1.EUI.TestPlatform },
        ], false);
        //
    }
    //打开测试页面
    UITest() {
        PGameUITestMediator_1.default.instance.Show();
    }
    //隐藏时的生命周期函数
    _OnHide() { }
}
exports.default = PGameTestMainMediator;


/***/ }),

/***/ "./src/dMyGame/UIMediator/_test/PGameTestPlatformMediator.ts":
/*!*******************************************************************!*\
  !*** ./src/dMyGame/UIMediator/_test/PGameTestPlatformMediator.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const PlatformManager_1 = __webpack_require__(/*! ../../../aTGame/Platform/PlatformManager */ "./src/aTGame/Platform/PlatformManager.ts");
const BaseUIMediator_1 = __webpack_require__(/*! ../../../aTGame/UI/FGUI/BaseUIMediator */ "./src/aTGame/UI/FGUI/BaseUIMediator.ts");
const FGUI_PGameTestPlatform_1 = __webpack_require__(/*! ../../../FGUI/GameMain/FGUI_PGameTestPlatform */ "./src/FGUI/GameMain/FGUI_PGameTestPlatform.ts");
const EUI_1 = __webpack_require__(/*! ../../Enum/EUI */ "./src/dMyGame/Enum/EUI.ts");
const UIManagerProxy_1 = __webpack_require__(/*! ../../Manager/Proxy/UIManagerProxy */ "./src/dMyGame/Manager/Proxy/UIManagerProxy.ts");
/**
 * 游戏测试页面调度者
 */
class PGameTestPlatformMediator extends BaseUIMediator_1.default {
    //
    constructor() { super(); }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new PGameTestPlatformMediator();
            this.m_instance._classDefine = FGUI_PGameTestPlatform_1.default;
        }
        //
        return this.m_instance;
    }
    //显示时的生命周期函数
    _OnShow() {
        this.ui.m_bg.onClick(this, this.close);
        this.ui.m_lookVAd.onClick(this, this.lookVAd);
        this.ui.m_showToast.onClick(this, this.showToast);
        this.ui.m_share.onClick(this, this.share);
    }
    //看广告
    lookVAd() {
        console.log('看广告测试');
        //广告测试
        PlatformManager_1.default.PlatformInstance.ShowRewardVideoAdAsync().then((ifLook) => {
            console.log('看广告完成测试', ifLook);
        });
    }
    //显示消息
    showToast() {
        console.log('显示消息测试');
        //显示消息测试
        PlatformManager_1.default.PlatformInstance.ShowToast('显示消息测试');
    }
    //分享
    share() {
        console.log('分享测试');
        //分享测试
        PlatformManager_1.default.PlatformInstance.ShareAppMessage({
            shareId: undefined,
            shareImg: undefined,
            sharePath: undefined,
            shareTitle: '分享消息',
        }, Laya.Handler.create(this, () => {
            console.log('分享成功');
        }), Laya.Handler.create(this, () => {
            console.log('分享失败！');
        }));
    }
    //关闭
    close() {
        UIManagerProxy_1.default.instance.setUIState([
            { typeIndex: EUI_1.EUI.TestPlatform, state: false },
        ], false);
    }
    //隐藏时的生命周期函数
    _OnHide() { }
}
exports.default = PGameTestPlatformMediator;


/***/ }),

/***/ "./src/dMyGame/UIMediator/_test/PGameUITestMediator.ts":
/*!*************************************************************!*\
  !*** ./src/dMyGame/UIMediator/_test/PGameUITestMediator.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const BaseUIMediator_1 = __webpack_require__(/*! ../../../aTGame/UI/FGUI/BaseUIMediator */ "./src/aTGame/UI/FGUI/BaseUIMediator.ts");
const FGuiData_1 = __webpack_require__(/*! ../../../aTGame/UI/FGUI/FGuiData */ "./src/aTGame/UI/FGUI/FGuiData.ts");
const FGUI_PGameTestUI_1 = __webpack_require__(/*! ../../../FGUI/GameMain/FGUI_PGameTestUI */ "./src/FGUI/GameMain/FGUI_PGameTestUI.ts");
/**
 * 游戏测试UI页面调度者
 */
class PGameUITestMediator extends BaseUIMediator_1.default {
    //
    constructor() { super(); }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new PGameUITestMediator();
            this.m_instance._classDefine = FGUI_PGameTestUI_1.default;
        }
        //
        return this.m_instance;
    }
    //
    get _fguiData() {
        let _fguiData = new FGuiData_1.default();
        _fguiData.top = 100;
        _fguiData.bottom = 50;
        return _fguiData;
    }
    //显示时的生命周期函数
    _OnShow() {
        //
        this.ui.m_bg.onClick(this, this.close);
    }
    //关闭
    close() {
        this.Hide();
    }
    //隐藏时的生命周期函数
    _OnHide() { }
}
exports.default = PGameUITestMediator;


/***/ }),

/***/ "./src/dMyGame/_config/CameraConst.ts":
/*!********************************************!*\
  !*** ./src/dMyGame/_config/CameraConst.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CameraConst = void 0;
var CameraConst;
(function (CameraConst) {
    class config {
    }
    CameraConst.config = config;
    CameraConst.path = "res/config/CameraConst.json";
})(CameraConst = exports.CameraConst || (exports.CameraConst = {}));


/***/ }),

/***/ "./src/dMyGame/_config/EnvironmentConfig.ts":
/*!**************************************************!*\
  !*** ./src/dMyGame/_config/EnvironmentConfig.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EnvironmentConfig = void 0;
var EnvironmentConfig;
(function (EnvironmentConfig) {
    class config {
    }
    EnvironmentConfig.config = config;
    EnvironmentConfig.path = "res/config/EnvironmentConfig.json";
})(EnvironmentConfig = exports.EnvironmentConfig || (exports.EnvironmentConfig = {}));


/***/ }),

/***/ "./src/dMyGame/_config/GameConst.ts":
/*!******************************************!*\
  !*** ./src/dMyGame/_config/GameConst.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GameConst = void 0;
var GameConst;
(function (GameConst) {
    class config {
    }
    GameConst.config = config;
    GameConst.path = "res/config/GameConst.json";
})(GameConst = exports.GameConst || (exports.GameConst = {}));


/***/ }),

/***/ "./src/dMyGame/_config/GameStateConst.ts":
/*!***********************************************!*\
  !*** ./src/dMyGame/_config/GameStateConst.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GameStateConst = void 0;
var GameStateConst;
(function (GameStateConst) {
    class config {
    }
    GameStateConst.config = config;
    GameStateConst.path = "res/config/GameStateConst.json";
})(GameStateConst = exports.GameStateConst || (exports.GameStateConst = {}));


/***/ }),

/***/ "./src/dMyGame/_config/LevelConfig.ts":
/*!********************************************!*\
  !*** ./src/dMyGame/_config/LevelConfig.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LevelConfig = void 0;
var LevelConfig;
(function (LevelConfig) {
    class config {
    }
    LevelConfig.config = config;
    LevelConfig.path = "res/config/LevelConfig.json";
})(LevelConfig = exports.LevelConfig || (exports.LevelConfig = {}));


/***/ }),

/***/ "./src/dMyGame/_config/LevelPropConfig.ts":
/*!************************************************!*\
  !*** ./src/dMyGame/_config/LevelPropConfig.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LevelPropConfig = void 0;
var LevelPropConfig;
(function (LevelPropConfig) {
    class config {
    }
    LevelPropConfig.config = config;
    LevelPropConfig.path = "res/config/LevelPropConfig.json";
})(LevelPropConfig = exports.LevelPropConfig || (exports.LevelPropConfig = {}));


/***/ }),

/***/ "./src/dMyGame/_config/LightingConst.ts":
/*!**********************************************!*\
  !*** ./src/dMyGame/_config/LightingConst.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LightingConst = void 0;
var LightingConst;
(function (LightingConst) {
    class config {
    }
    LightingConst.config = config;
    LightingConst.path = "res/config/LightingConst.json";
})(LightingConst = exports.LightingConst || (exports.LightingConst = {}));


/***/ }),

/***/ "./src/dMyGame/_config/OtherConst.ts":
/*!*******************************************!*\
  !*** ./src/dMyGame/_config/OtherConst.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OtherConst = void 0;
var OtherConst;
(function (OtherConst) {
    class config {
    }
    OtherConst.config = config;
    OtherConst.path = "res/config/OtherConst.json";
})(OtherConst = exports.OtherConst || (exports.OtherConst = {}));


/***/ }),

/***/ "./src/dMyGame/_config/OtherEnvironmentConfig.ts":
/*!*******************************************************!*\
  !*** ./src/dMyGame/_config/OtherEnvironmentConfig.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OtherEnvironmentConfig = void 0;
var OtherEnvironmentConfig;
(function (OtherEnvironmentConfig) {
    class config {
    }
    OtherEnvironmentConfig.config = config;
    OtherEnvironmentConfig.path = "res/config/OtherEnvironmentConfig.json";
})(OtherEnvironmentConfig = exports.OtherEnvironmentConfig || (exports.OtherEnvironmentConfig = {}));


/***/ }),

/***/ "./src/dMyGame/_config/OtherLevelConfig.ts":
/*!*************************************************!*\
  !*** ./src/dMyGame/_config/OtherLevelConfig.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OtherLevelConfig = void 0;
var OtherLevelConfig;
(function (OtherLevelConfig) {
    class config {
    }
    OtherLevelConfig.config = config;
    OtherLevelConfig.path = "res/config/OtherLevelConfig.json";
})(OtherLevelConfig = exports.OtherLevelConfig || (exports.OtherLevelConfig = {}));


/***/ }),

/***/ "./src/dMyGame/_config/SkinConfig.ts":
/*!*******************************************!*\
  !*** ./src/dMyGame/_config/SkinConfig.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SkinConfig = void 0;
var SkinConfig;
(function (SkinConfig) {
    class config {
    }
    SkinConfig.config = config;
    SkinConfig.path = "res/config/SkinConfig.json";
})(SkinConfig = exports.SkinConfig || (exports.SkinConfig = {}));


/***/ }),

/***/ "./src/dMyGame/_config/TestConst.ts":
/*!******************************************!*\
  !*** ./src/dMyGame/_config/TestConst.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TestConst = void 0;
var TestConst;
(function (TestConst) {
    class config {
    }
    TestConst.config = config;
    TestConst.path = "res/config/TestConst.json";
})(TestConst = exports.TestConst || (exports.TestConst = {}));


/***/ }),

/***/ "./src/dMyGame/_prefabsName/_AllScenePrefabsNames.ts":
/*!***********************************************************!*\
  !*** ./src/dMyGame/_prefabsName/_AllScenePrefabsNames.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * 所有预制体名字
 */
class _AllScenePrefabsNames {
    constructor() {
        this.Prefabs = '@Camera@@DirectionalLight@';
        this.Prefabs2 = '@Cube@@Sphere@@Cylinder@';
    }
}
exports.default = _AllScenePrefabsNames;
//


/***/ }),

/***/ "./src/eTest/AsyncTest.ts":
/*!********************************!*\
  !*** ./src/eTest/AsyncTest.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootTest_1 = __webpack_require__(/*! ../aTGame/Test/RootTest */ "./src/aTGame/Test/RootTest.ts");
/**
 * 异步测试类
 */
class AsyncTest extends RootTest_1.default {
    //开始测试
    startTest() {
        //
        this.asyncTest();
    }
    //
    asyncTest() {
        return __awaiter(this, void 0, void 0, function* () {
            console.log('异步开始。');
            yield this._asyncTest();
            console.log('异步结束。');
        });
    }
    //
    _asyncTest() {
        return new Promise((_r) => {
            Laya.timer.once(1000, this, () => {
                _r();
            });
        });
    }
}
exports.default = AsyncTest;


/***/ }),

/***/ "./src/eTest/MyMainTest.ts":
/*!*********************************!*\
  !*** ./src/eTest/MyMainTest.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootTest_1 = __webpack_require__(/*! ../aTGame/Test/RootTest */ "./src/aTGame/Test/RootTest.ts");
const AsyncTest_1 = __webpack_require__(/*! ./AsyncTest */ "./src/eTest/AsyncTest.ts");
const OIMODebug_1 = __webpack_require__(/*! ./OIMODebug */ "./src/eTest/OIMODebug.ts");
/**
 * 我的测试类
 */
class MyMainTest extends RootTest_1.default {
    //开始测试
    startTest() {
        //开启测试
        new AsyncTest_1.default().startTest();
        new OIMODebug_1.default().startTest();
    }
}
exports.default = MyMainTest;


/***/ }),

/***/ "./src/eTest/OIMODebug.ts":
/*!********************************!*\
  !*** ./src/eTest/OIMODebug.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootTest_1 = __webpack_require__(/*! ../aTGame/Test/RootTest */ "./src/aTGame/Test/RootTest.ts");
/**
 * OIMO物理测试
 */
class OIMODebug extends RootTest_1.default {
    /** 单例对象 */
    static get instance() {
        if (this._instance) {
            return this._instance;
        }
        else {
            this._instance = new OIMODebug();
            return this._instance;
        }
    }
    //
    start(_prefabs) {
        let _spr = [];
    }
}
exports.default = OIMODebug;


/***/ }),

/***/ "./src/fDebug/CustomDebug.ts":
/*!***********************************!*\
  !*** ./src/fDebug/CustomDebug.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootDebug_1 = __webpack_require__(/*! ../aTGame/Debug/RootDebug */ "./src/aTGame/Debug/RootDebug.ts");
/**
 * 自定义调试
 */
class CustomDebug extends RootDebug_1.default {
    //
    constructor() {
        super();
        //
        this._name = 'Custom';
    }
    /** 单例 */
    static get instance() {
        if (!this.m_instance) {
            this.m_instance = new CustomDebug();
        }
        //
        return this.m_instance;
    }
}
exports.default = CustomDebug;


/***/ }),

/***/ "./src/fDebug/MyMainDebug.ts":
/*!***********************************!*\
  !*** ./src/fDebug/MyMainDebug.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const RootDebug_1 = __webpack_require__(/*! ../aTGame/Debug/RootDebug */ "./src/aTGame/Debug/RootDebug.ts");
const CustomDebug_1 = __webpack_require__(/*! ./CustomDebug */ "./src/fDebug/CustomDebug.ts");
/**
 * 我的调试类
 */
class MyMainDebug extends RootDebug_1.default {
    constructor() {
        super(...arguments);
        this._name = 'MyMainDebug';
    }
    //开始调试
    _startDebug() {
        //开启自定义调试
        CustomDebug_1.default.instance.startDebug();
    }
}
exports.default = MyMainDebug;


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/Main.ts");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,